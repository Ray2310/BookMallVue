{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as graphic from '../../util/graphic.js';\nimport LineGroup from './Line.js';\nimport { getLabelStatesModels } from '../../label/labelStyle.js';\n\nvar LineDraw =\n/** @class */\nfunction () {\n  function LineDraw(LineCtor) {\n    this.group = new graphic.Group();\n    this._LineCtor = LineCtor || LineGroup;\n  }\n\n  LineDraw.prototype.updateData = function (lineData) {\n    var _this = this; // Remove progressive els.\n\n\n    this._progressiveEls = null;\n    var lineDraw = this;\n    var group = lineDraw.group;\n    var oldLineData = lineDraw._lineData;\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n    // stream mode to normal mode, where previous elements should be removed.\n\n    if (!oldLineData) {\n      group.removeAll();\n    }\n\n    var seriesScope = makeSeriesScope(lineData);\n    lineData.diff(oldLineData).add(function (idx) {\n      _this._doAdd(lineData, idx, seriesScope);\n    }).update(function (newIdx, oldIdx) {\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\n    }).remove(function (idx) {\n      group.remove(oldLineData.getItemGraphicEl(idx));\n    }).execute();\n  };\n\n  ;\n\n  LineDraw.prototype.updateLayout = function () {\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n    if (!lineData) {\n      return;\n    }\n\n    lineData.eachItemGraphicEl(function (el, idx) {\n      el.updateLayout(lineData, idx);\n    }, this);\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\n    this._seriesScope = makeSeriesScope(lineData);\n    this._lineData = null;\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\n    this._progressiveEls = [];\n\n    function updateIncrementalAndHover(el) {\n      if (!el.isGroup && !isEffectObject(el)) {\n        el.incremental = true;\n        el.ensureState('emphasis').hoverLayer = true;\n      }\n    }\n\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n      var itemLayout = lineData.getItemLayout(idx);\n\n      if (lineNeedsDraw(itemLayout)) {\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\n        el.traverse(updateIncrementalAndHover);\n        this.group.add(el);\n        lineData.setItemGraphicEl(idx, el);\n\n        this._progressiveEls.push(el);\n      }\n    }\n  };\n\n  ;\n\n  LineDraw.prototype.remove = function () {\n    this.group.removeAll();\n  };\n\n  ;\n\n  LineDraw.prototype.eachRendered = function (cb) {\n    graphic.traverseElements(this._progressiveEls || this.group, cb);\n  };\n\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (!lineNeedsDraw(itemLayout)) {\n      return;\n    }\n\n    var el = new this._LineCtor(lineData, idx, seriesScope);\n    lineData.setItemGraphicEl(idx, el);\n    this.group.add(el);\n  };\n\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n      this.group.remove(itemEl);\n      return;\n    }\n\n    if (!itemEl) {\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\n    } else {\n      itemEl.updateData(newLineData, newIdx, seriesScope);\n    }\n\n    newLineData.setItemGraphicEl(newIdx, itemEl);\n    this.group.add(itemEl);\n  };\n\n  return LineDraw;\n}();\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  var emphasisModel = hostModel.getModel('emphasis');\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    emphasisLineStyle: emphasisModel.getModel(['lineStyle']).getLineStyle(),\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\n    emphasisDisabled: emphasisModel.get('disabled'),\n    blurScope: emphasisModel.get('blurScope'),\n    focus: emphasisModel.get('focus'),\n    labelStatesModels: getLabelStatesModels(hostModel)\n  };\n}\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return pts && !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nexport default LineDraw;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/helper/LineDraw.js"],"names":["graphic","LineGroup","getLabelStatesModels","LineDraw","LineCtor","group","Group","_LineCtor","prototype","updateData","lineData","_this","_progressiveEls","lineDraw","oldLineData","_lineData","removeAll","seriesScope","makeSeriesScope","diff","add","idx","_doAdd","update","newIdx","oldIdx","_doUpdate","remove","getItemGraphicEl","execute","updateLayout","eachItemGraphicEl","el","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","isEffectObject","incremental","ensureState","hoverLayer","start","end","itemLayout","getItemLayout","lineNeedsDraw","traverse","setItemGraphicEl","push","eachRendered","cb","traverseElements","newLineData","itemEl","animators","length","hostModel","emphasisModel","getModel","lineStyle","getLineStyle","emphasisLineStyle","blurLineStyle","selectLineStyle","emphasisDisabled","get","blurScope","focus","labelStatesModels","isPointNaN","pt","isNaN","pts"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as graphic from '../../util/graphic.js';\r\nimport LineGroup from './Line.js';\r\nimport { getLabelStatesModels } from '../../label/labelStyle.js';\r\n\r\nvar LineDraw =\r\n/** @class */\r\nfunction () {\r\n  function LineDraw(LineCtor) {\r\n    this.group = new graphic.Group();\r\n    this._LineCtor = LineCtor || LineGroup;\r\n  }\r\n\r\n  LineDraw.prototype.updateData = function (lineData) {\r\n    var _this = this; // Remove progressive els.\r\n\r\n\r\n    this._progressiveEls = null;\r\n    var lineDraw = this;\r\n    var group = lineDraw.group;\r\n    var oldLineData = lineDraw._lineData;\r\n    lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\r\n    // stream mode to normal mode, where previous elements should be removed.\r\n\r\n    if (!oldLineData) {\r\n      group.removeAll();\r\n    }\r\n\r\n    var seriesScope = makeSeriesScope(lineData);\r\n    lineData.diff(oldLineData).add(function (idx) {\r\n      _this._doAdd(lineData, idx, seriesScope);\r\n    }).update(function (newIdx, oldIdx) {\r\n      _this._doUpdate(oldLineData, lineData, oldIdx, newIdx, seriesScope);\r\n    }).remove(function (idx) {\r\n      group.remove(oldLineData.getItemGraphicEl(idx));\r\n    }).execute();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.updateLayout = function () {\r\n    var lineData = this._lineData; // Do not support update layout in incremental mode.\r\n\r\n    if (!lineData) {\r\n      return;\r\n    }\r\n\r\n    lineData.eachItemGraphicEl(function (el, idx) {\r\n      el.updateLayout(lineData, idx);\r\n    }, this);\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.incrementalPrepareUpdate = function (lineData) {\r\n    this._seriesScope = makeSeriesScope(lineData);\r\n    this._lineData = null;\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.incrementalUpdate = function (taskParams, lineData) {\r\n    this._progressiveEls = [];\r\n\r\n    function updateIncrementalAndHover(el) {\r\n      if (!el.isGroup && !isEffectObject(el)) {\r\n        el.incremental = true;\r\n        el.ensureState('emphasis').hoverLayer = true;\r\n      }\r\n    }\r\n\r\n    for (var idx = taskParams.start; idx < taskParams.end; idx++) {\r\n      var itemLayout = lineData.getItemLayout(idx);\r\n\r\n      if (lineNeedsDraw(itemLayout)) {\r\n        var el = new this._LineCtor(lineData, idx, this._seriesScope);\r\n        el.traverse(updateIncrementalAndHover);\r\n        this.group.add(el);\r\n        lineData.setItemGraphicEl(idx, el);\r\n\r\n        this._progressiveEls.push(el);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.remove = function () {\r\n    this.group.removeAll();\r\n  };\r\n\r\n  ;\r\n\r\n  LineDraw.prototype.eachRendered = function (cb) {\r\n    graphic.traverseElements(this._progressiveEls || this.group, cb);\r\n  };\r\n\r\n  LineDraw.prototype._doAdd = function (lineData, idx, seriesScope) {\r\n    var itemLayout = lineData.getItemLayout(idx);\r\n\r\n    if (!lineNeedsDraw(itemLayout)) {\r\n      return;\r\n    }\r\n\r\n    var el = new this._LineCtor(lineData, idx, seriesScope);\r\n    lineData.setItemGraphicEl(idx, el);\r\n    this.group.add(el);\r\n  };\r\n\r\n  LineDraw.prototype._doUpdate = function (oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\r\n    var itemEl = oldLineData.getItemGraphicEl(oldIdx);\r\n\r\n    if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\r\n      this.group.remove(itemEl);\r\n      return;\r\n    }\r\n\r\n    if (!itemEl) {\r\n      itemEl = new this._LineCtor(newLineData, newIdx, seriesScope);\r\n    } else {\r\n      itemEl.updateData(newLineData, newIdx, seriesScope);\r\n    }\r\n\r\n    newLineData.setItemGraphicEl(newIdx, itemEl);\r\n    this.group.add(itemEl);\r\n  };\r\n\r\n  return LineDraw;\r\n}();\r\n\r\nfunction isEffectObject(el) {\r\n  return el.animators && el.animators.length > 0;\r\n}\r\n\r\nfunction makeSeriesScope(lineData) {\r\n  var hostModel = lineData.hostModel;\r\n  var emphasisModel = hostModel.getModel('emphasis');\r\n  return {\r\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\r\n    emphasisLineStyle: emphasisModel.getModel(['lineStyle']).getLineStyle(),\r\n    blurLineStyle: hostModel.getModel(['blur', 'lineStyle']).getLineStyle(),\r\n    selectLineStyle: hostModel.getModel(['select', 'lineStyle']).getLineStyle(),\r\n    emphasisDisabled: emphasisModel.get('disabled'),\r\n    blurScope: emphasisModel.get('blurScope'),\r\n    focus: emphasisModel.get('focus'),\r\n    labelStatesModels: getLabelStatesModels(hostModel)\r\n  };\r\n}\r\n\r\nfunction isPointNaN(pt) {\r\n  return isNaN(pt[0]) || isNaN(pt[1]);\r\n}\r\n\r\nfunction lineNeedsDraw(pts) {\r\n  return pts && !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\r\n}\r\n\r\nexport default LineDraw;"]},"metadata":{},"sourceType":"module"}