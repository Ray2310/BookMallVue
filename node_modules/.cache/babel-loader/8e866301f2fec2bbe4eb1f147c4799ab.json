{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * LegendVisualProvider is an bridge that pick encoded color from data and\r\n * provide to the legend component.\r\n */\nvar LegendVisualProvider =\n/** @class */\nfunction () {\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\n  getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n\n  return LegendVisualProvider;\n}();\n\nexport default LegendVisualProvider;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/visual/LegendVisualProvider.js"],"names":["LegendVisualProvider","getDataWithEncodedVisual","getRawData","_getDataWithEncodedVisual","_getRawData","prototype","getAllNames","rawData","mapArray","getName","containName","name","indexOfName","dataWithEncodedVisual","getItemVisual","dataIndex","key"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAIA,oBAAoB;AACxB;AACA,YAAY;AACV,WAASA,oBAAT,EAA+B;AAC/BC,EAAAA,wBADA,EAC0B;AAC1BC,EAAAA,UAFA,EAEY;AACV,SAAKC,yBAAL,GAAiCF,wBAAjC;AACA,SAAKG,WAAL,GAAmBF,UAAnB;AACD;;AAEDF,EAAAA,oBAAoB,CAACK,SAArB,CAA+BC,WAA/B,GAA6C,YAAY;AACvD,QAAIC,OAAO,GAAG,KAAKH,WAAL,EAAd,CADuD,CACrB;AAClC;;;AAGA,WAAOG,OAAO,CAACC,QAAR,CAAiBD,OAAO,CAACE,OAAzB,CAAP;AACD,GAND;;AAQAT,EAAAA,oBAAoB,CAACK,SAArB,CAA+BK,WAA/B,GAA6C,UAAUC,IAAV,EAAgB;AAC3D,QAAIJ,OAAO,GAAG,KAAKH,WAAL,EAAd;;AAEA,WAAOG,OAAO,CAACK,WAAR,CAAoBD,IAApB,KAA6B,CAApC;AACD,GAJD;;AAMAX,EAAAA,oBAAoB,CAACK,SAArB,CAA+BO,WAA/B,GAA6C,UAAUD,IAAV,EAAgB;AAC3D;AACA;AACA;AACA,QAAIE,qBAAqB,GAAG,KAAKV,yBAAL,EAA5B;;AAEA,WAAOU,qBAAqB,CAACD,WAAtB,CAAkCD,IAAlC,CAAP;AACD,GAPD;;AASAX,EAAAA,oBAAoB,CAACK,SAArB,CAA+BS,aAA/B,GAA+C,UAAUC,SAAV,EAAqBC,GAArB,EAA0B;AACvE;AACA,QAAIH,qBAAqB,GAAG,KAAKV,yBAAL,EAA5B;;AAEA,WAAOU,qBAAqB,CAACC,aAAtB,CAAoCC,SAApC,EAA+CC,GAA/C,CAAP;AACD,GALD;;AAOA,SAAOhB,oBAAP;AACD,CAvCD,EAFA;;AA2CA,eAAeA,oBAAf","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n/**\r\n * LegendVisualProvider is an bridge that pick encoded color from data and\r\n * provide to the legend component.\r\n */\r\nvar LegendVisualProvider =\r\n/** @class */\r\nfunction () {\r\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\r\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\r\n  getRawData) {\r\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\r\n    this._getRawData = getRawData;\r\n  }\r\n\r\n  LegendVisualProvider.prototype.getAllNames = function () {\r\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\r\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\r\n\r\n\r\n    return rawData.mapArray(rawData.getName);\r\n  };\r\n\r\n  LegendVisualProvider.prototype.containName = function (name) {\r\n    var rawData = this._getRawData();\r\n\r\n    return rawData.indexOfName(name) >= 0;\r\n  };\r\n\r\n  LegendVisualProvider.prototype.indexOfName = function (name) {\r\n    // Only get data when necessary.\r\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\r\n    // Invoking Series#getData immediately will throw an error.\r\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n    return dataWithEncodedVisual.indexOfName(name);\r\n  };\r\n\r\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\r\n    // Get encoded visual properties from final filtered data.\r\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\r\n\r\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\r\n  };\r\n\r\n  return LegendVisualProvider;\r\n}();\r\n\r\nexport default LegendVisualProvider;"]},"metadata":{},"sourceType":"module"}