{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { createHashMap } from 'zrender/lib/core/util.js';\nimport { GeoSVGResource } from './GeoSVGResource.js';\nimport { GeoJSONResource } from './GeoJSONResource.js';\nvar storage = createHashMap();\nexport default {\n  /**\r\n   * Compatible with previous `echarts.registerMap`.\r\n   *\r\n   * @usage\r\n   * ```js\r\n   *\r\n   * echarts.registerMap('USA', geoJson, specialAreas);\r\n   *\r\n   * echarts.registerMap('USA', {\r\n   *     geoJson: geoJson,\r\n   *     specialAreas: {...}\r\n   * });\r\n   * echarts.registerMap('USA', {\r\n   *     geoJSON: geoJson,\r\n   *     specialAreas: {...}\r\n   * });\r\n   *\r\n   * echarts.registerMap('airport', {\r\n   *     svg: svg\r\n   * }\r\n   * ```\r\n   *\r\n   * Note:\r\n   * Do not support that register multiple geoJSON or SVG\r\n   * one map name. Because different geoJSON and SVG have\r\n   * different unit. It's not easy to make sure how those\r\n   * units are mapping/normalize.\r\n   * If intending to use multiple geoJSON or SVG, we can\r\n   * use multiple geo coordinate system.\r\n   */\n  registerMap: function registerMap(mapName, rawDef, rawSpecialAreas) {\n    if (rawDef.svg) {\n      var resource = new GeoSVGResource(mapName, rawDef.svg);\n      storage.set(mapName, resource);\n    } else {\n      // Recommend:\n      //     echarts.registerMap('eu', { geoJSON: xxx, specialAreas: xxx });\n      // Backward compatibility:\n      //     echarts.registerMap('eu', geoJSON, specialAreas);\n      //     echarts.registerMap('eu', { geoJson: xxx, specialAreas: xxx });\n      var geoJSON = rawDef.geoJson || rawDef.geoJSON;\n\n      if (geoJSON && !rawDef.features) {\n        rawSpecialAreas = rawDef.specialAreas;\n      } else {\n        geoJSON = rawDef;\n      }\n\n      var resource = new GeoJSONResource(mapName, geoJSON, rawSpecialAreas);\n      storage.set(mapName, resource);\n    }\n  },\n  getGeoResource: function getGeoResource(mapName) {\n    return storage.get(mapName);\n  },\n\n  /**\r\n   * Only for exporting to users.\r\n   * **MUST NOT** used internally.\r\n   */\n  getMapForUser: function getMapForUser(mapName) {\n    var resource = storage.get(mapName); // Do not support return SVG until some real requirement come.\n\n    return resource && resource.type === 'geoJSON' && resource.getMapForUser();\n  },\n  load: function load(mapName, nameMap, nameProperty) {\n    var resource = storage.get(mapName);\n\n    if (!resource) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Map ' + mapName + ' not exists. The GeoJSON of the map must be provided.');\n      }\n\n      return;\n    }\n\n    return resource.load(nameMap, nameProperty);\n  }\n};","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/coord/geo/geoSourceManager.js"],"names":["createHashMap","GeoSVGResource","GeoJSONResource","storage","registerMap","mapName","rawDef","rawSpecialAreas","svg","resource","set","geoJSON","geoJson","features","specialAreas","getGeoResource","get","getMapForUser","type","load","nameMap","nameProperty","process","env","NODE_ENV","console","error"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,QAA8B,0BAA9B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,IAAIC,OAAO,GAAGH,aAAa,EAA3B;AACA,eAAe;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,WAAW,EAAE,qBAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,eAA3B,EAA4C;AACvD,QAAID,MAAM,CAACE,GAAX,EAAgB;AACd,UAAIC,QAAQ,GAAG,IAAIR,cAAJ,CAAmBI,OAAnB,EAA4BC,MAAM,CAACE,GAAnC,CAAf;AACAL,MAAAA,OAAO,CAACO,GAAR,CAAYL,OAAZ,EAAqBI,QAArB;AACD,KAHD,MAGO;AACL;AACA;AACA;AACA;AACA;AACA,UAAIE,OAAO,GAAGL,MAAM,CAACM,OAAP,IAAkBN,MAAM,CAACK,OAAvC;;AAEA,UAAIA,OAAO,IAAI,CAACL,MAAM,CAACO,QAAvB,EAAiC;AAC/BN,QAAAA,eAAe,GAAGD,MAAM,CAACQ,YAAzB;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,GAAGL,MAAV;AACD;;AAED,UAAIG,QAAQ,GAAG,IAAIP,eAAJ,CAAoBG,OAApB,EAA6BM,OAA7B,EAAsCJ,eAAtC,CAAf;AACAJ,MAAAA,OAAO,CAACO,GAAR,CAAYL,OAAZ,EAAqBI,QAArB;AACD;AACF,GApDY;AAqDbM,EAAAA,cAAc,EAAE,wBAAUV,OAAV,EAAmB;AACjC,WAAOF,OAAO,CAACa,GAAR,CAAYX,OAAZ,CAAP;AACD,GAvDY;;AAyDb;AACF;AACA;AACA;AACEY,EAAAA,aAAa,EAAE,uBAAUZ,OAAV,EAAmB;AAChC,QAAII,QAAQ,GAAGN,OAAO,CAACa,GAAR,CAAYX,OAAZ,CAAf,CADgC,CACK;;AAErC,WAAOI,QAAQ,IAAIA,QAAQ,CAACS,IAAT,KAAkB,SAA9B,IAA2CT,QAAQ,CAACQ,aAAT,EAAlD;AACD,GAjEY;AAkEbE,EAAAA,IAAI,EAAE,cAAUd,OAAV,EAAmBe,OAAnB,EAA4BC,YAA5B,EAA0C;AAC9C,QAAIZ,QAAQ,GAAGN,OAAO,CAACa,GAAR,CAAYX,OAAZ,CAAf;;AAEA,QAAI,CAACI,QAAL,EAAe;AACb,UAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,QAAAA,OAAO,CAACC,KAAR,CAAc,SAASrB,OAAT,GAAmB,uDAAjC;AACD;;AAED;AACD;;AAED,WAAOI,QAAQ,CAACU,IAAT,CAAcC,OAAd,EAAuBC,YAAvB,CAAP;AACD;AA9EY,CAAf","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { createHashMap } from 'zrender/lib/core/util.js';\r\nimport { GeoSVGResource } from './GeoSVGResource.js';\r\nimport { GeoJSONResource } from './GeoJSONResource.js';\r\nvar storage = createHashMap();\r\nexport default {\r\n  /**\r\n   * Compatible with previous `echarts.registerMap`.\r\n   *\r\n   * @usage\r\n   * ```js\r\n   *\r\n   * echarts.registerMap('USA', geoJson, specialAreas);\r\n   *\r\n   * echarts.registerMap('USA', {\r\n   *     geoJson: geoJson,\r\n   *     specialAreas: {...}\r\n   * });\r\n   * echarts.registerMap('USA', {\r\n   *     geoJSON: geoJson,\r\n   *     specialAreas: {...}\r\n   * });\r\n   *\r\n   * echarts.registerMap('airport', {\r\n   *     svg: svg\r\n   * }\r\n   * ```\r\n   *\r\n   * Note:\r\n   * Do not support that register multiple geoJSON or SVG\r\n   * one map name. Because different geoJSON and SVG have\r\n   * different unit. It's not easy to make sure how those\r\n   * units are mapping/normalize.\r\n   * If intending to use multiple geoJSON or SVG, we can\r\n   * use multiple geo coordinate system.\r\n   */\r\n  registerMap: function (mapName, rawDef, rawSpecialAreas) {\r\n    if (rawDef.svg) {\r\n      var resource = new GeoSVGResource(mapName, rawDef.svg);\r\n      storage.set(mapName, resource);\r\n    } else {\r\n      // Recommend:\r\n      //     echarts.registerMap('eu', { geoJSON: xxx, specialAreas: xxx });\r\n      // Backward compatibility:\r\n      //     echarts.registerMap('eu', geoJSON, specialAreas);\r\n      //     echarts.registerMap('eu', { geoJson: xxx, specialAreas: xxx });\r\n      var geoJSON = rawDef.geoJson || rawDef.geoJSON;\r\n\r\n      if (geoJSON && !rawDef.features) {\r\n        rawSpecialAreas = rawDef.specialAreas;\r\n      } else {\r\n        geoJSON = rawDef;\r\n      }\r\n\r\n      var resource = new GeoJSONResource(mapName, geoJSON, rawSpecialAreas);\r\n      storage.set(mapName, resource);\r\n    }\r\n  },\r\n  getGeoResource: function (mapName) {\r\n    return storage.get(mapName);\r\n  },\r\n\r\n  /**\r\n   * Only for exporting to users.\r\n   * **MUST NOT** used internally.\r\n   */\r\n  getMapForUser: function (mapName) {\r\n    var resource = storage.get(mapName); // Do not support return SVG until some real requirement come.\r\n\r\n    return resource && resource.type === 'geoJSON' && resource.getMapForUser();\r\n  },\r\n  load: function (mapName, nameMap, nameProperty) {\r\n    var resource = storage.get(mapName);\r\n\r\n    if (!resource) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error('Map ' + mapName + ' not exists. The GeoJSON of the map must be provided.');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    return resource.load(nameMap, nameProperty);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}