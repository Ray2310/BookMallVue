{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n// FIXME Where to create the simple view coordinate system\nimport View from '../../coord/View.js';\nimport { getLayoutRect } from '../../util/layout.js';\nimport * as bbox from 'zrender/lib/core/bbox.js';\nimport { extend } from 'zrender/lib/core/util.js';\n\nfunction getViewRect(seriesModel, api, aspect) {\n  var option = extend(seriesModel.getBoxLayoutParams(), {\n    aspect: aspect\n  });\n  return getLayoutRect(option, {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nexport default function createViewCoordSys(ecModel, api) {\n  var viewList = [];\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\n    var coordSysType = seriesModel.get('coordinateSystem');\n\n    if (!coordSysType || coordSysType === 'view') {\n      var data_1 = seriesModel.getData();\n      var positions = data_1.mapArray(function (idx) {\n        var itemModel = data_1.getItemModel(idx);\n        return [+itemModel.get('x'), +itemModel.get('y')];\n      });\n      var min = [];\n      var max = [];\n      bbox.fromPoints(positions, min, max); // If width or height is 0\n\n      if (max[0] - min[0] === 0) {\n        max[0] += 1;\n        min[0] -= 1;\n      }\n\n      if (max[1] - min[1] === 0) {\n        max[1] += 1;\n        min[1] -= 1;\n      }\n\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\n\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\n\n      if (isNaN(aspect)) {\n        min = [viewRect.x, viewRect.y];\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\n      }\n\n      var bbWidth = max[0] - min[0];\n      var bbHeight = max[1] - min[1];\n      var viewWidth = viewRect.width;\n      var viewHeight = viewRect.height;\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\n\n      viewCoordSys.setCenter(seriesModel.get('center'));\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\n      viewList.push(viewCoordSys);\n    }\n  });\n  return viewList;\n}","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/graph/createView.js"],"names":["View","getLayoutRect","bbox","extend","getViewRect","seriesModel","api","aspect","option","getBoxLayoutParams","width","getWidth","height","getHeight","createViewCoordSys","ecModel","viewList","eachSeriesByType","coordSysType","get","data_1","getData","positions","mapArray","idx","itemModel","getItemModel","min","max","fromPoints","viewRect","isNaN","x","y","bbWidth","bbHeight","viewWidth","viewHeight","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setViewRect","setCenter","setZoom","push"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n// FIXME Where to create the simple view coordinate system\r\nimport View from '../../coord/View.js';\r\nimport { getLayoutRect } from '../../util/layout.js';\r\nimport * as bbox from 'zrender/lib/core/bbox.js';\r\nimport { extend } from 'zrender/lib/core/util.js';\r\n\r\nfunction getViewRect(seriesModel, api, aspect) {\r\n  var option = extend(seriesModel.getBoxLayoutParams(), {\r\n    aspect: aspect\r\n  });\r\n  return getLayoutRect(option, {\r\n    width: api.getWidth(),\r\n    height: api.getHeight()\r\n  });\r\n}\r\n\r\nexport default function createViewCoordSys(ecModel, api) {\r\n  var viewList = [];\r\n  ecModel.eachSeriesByType('graph', function (seriesModel) {\r\n    var coordSysType = seriesModel.get('coordinateSystem');\r\n\r\n    if (!coordSysType || coordSysType === 'view') {\r\n      var data_1 = seriesModel.getData();\r\n      var positions = data_1.mapArray(function (idx) {\r\n        var itemModel = data_1.getItemModel(idx);\r\n        return [+itemModel.get('x'), +itemModel.get('y')];\r\n      });\r\n      var min = [];\r\n      var max = [];\r\n      bbox.fromPoints(positions, min, max); // If width or height is 0\r\n\r\n      if (max[0] - min[0] === 0) {\r\n        max[0] += 1;\r\n        min[0] -= 1;\r\n      }\r\n\r\n      if (max[1] - min[1] === 0) {\r\n        max[1] += 1;\r\n        min[1] -= 1;\r\n      }\r\n\r\n      var aspect = (max[0] - min[0]) / (max[1] - min[1]); // FIXME If get view rect after data processed?\r\n\r\n      var viewRect = getViewRect(seriesModel, api, aspect); // Position may be NaN, use view rect instead\r\n\r\n      if (isNaN(aspect)) {\r\n        min = [viewRect.x, viewRect.y];\r\n        max = [viewRect.x + viewRect.width, viewRect.y + viewRect.height];\r\n      }\r\n\r\n      var bbWidth = max[0] - min[0];\r\n      var bbHeight = max[1] - min[1];\r\n      var viewWidth = viewRect.width;\r\n      var viewHeight = viewRect.height;\r\n      var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n      viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n      viewCoordSys.setBoundingRect(min[0], min[1], bbWidth, bbHeight);\r\n      viewCoordSys.setViewRect(viewRect.x, viewRect.y, viewWidth, viewHeight); // Update roam info\r\n\r\n      viewCoordSys.setCenter(seriesModel.get('center'));\r\n      viewCoordSys.setZoom(seriesModel.get('zoom'));\r\n      viewList.push(viewCoordSys);\r\n    }\r\n  });\r\n  return viewList;\r\n}"]},"metadata":{},"sourceType":"module"}