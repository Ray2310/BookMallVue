{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper.js';\nimport { isNumber, map } from 'zrender/lib/core/util.js';\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked = false;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[0] = stackResultDim;\n  }\n\n  if (isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    stacked = true;\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // If origin is specified as a number, use it as\n  // valueStart directly\n  else if (isNumber(valueOrigin) && !isNaN(valueOrigin)) {\n    valueStart = valueOrigin;\n  } // auto\n  else {\n    // Both positive\n    if (extent[0] > 0) {\n      valueStart = extent[0];\n    } // Both negative\n    else if (extent[1] < 0) {\n      valueStart = extent[1];\n    } // If is one positive, and one negative, onZero shall be true\n\n  }\n\n  return valueStart;\n}\n\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/line/helper.js"],"names":["isDimensionStacked","isNumber","map","prepareDataCoordInfo","coordSys","data","valueOrigin","baseAxis","getBaseAxis","valueAxis","getOtherAxis","valueStart","getValueStart","baseAxisDim","dim","valueAxisDim","valueDim","mapDimension","baseDim","baseDataOffset","dims","dimensions","coordDim","stacked","stackResultDim","getCalculationInfo","dataDimsForPoint","stackedOverDimension","extent","scale","getExtent","isNaN","getStackedOnPoint","dataCoordInfo","idx","value","NaN","get","stackedData","dataToPoint"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isDimensionStacked } from '../../data/helper/dataStackHelper.js';\r\nimport { isNumber, map } from 'zrender/lib/core/util.js';\r\nexport function prepareDataCoordInfo(coordSys, data, valueOrigin) {\r\n  var baseAxis = coordSys.getBaseAxis();\r\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\r\n  var valueStart = getValueStart(valueAxis, valueOrigin);\r\n  var baseAxisDim = baseAxis.dim;\r\n  var valueAxisDim = valueAxis.dim;\r\n  var valueDim = data.mapDimension(valueAxisDim);\r\n  var baseDim = data.mapDimension(baseAxisDim);\r\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\r\n  var dims = map(coordSys.dimensions, function (coordDim) {\r\n    return data.mapDimension(coordDim);\r\n  });\r\n  var stacked = false;\r\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\r\n\r\n  if (isDimensionStacked(data, dims[0]\r\n  /*, dims[1]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[0] = stackResultDim;\r\n  }\r\n\r\n  if (isDimensionStacked(data, dims[1]\r\n  /*, dims[0]*/\r\n  )) {\r\n    // jshint ignore:line\r\n    stacked = true;\r\n    dims[1] = stackResultDim;\r\n  }\r\n\r\n  return {\r\n    dataDimsForPoint: dims,\r\n    valueStart: valueStart,\r\n    valueAxisDim: valueAxisDim,\r\n    baseAxisDim: baseAxisDim,\r\n    stacked: !!stacked,\r\n    valueDim: valueDim,\r\n    baseDim: baseDim,\r\n    baseDataOffset: baseDataOffset,\r\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\r\n  };\r\n}\r\n\r\nfunction getValueStart(valueAxis, valueOrigin) {\r\n  var valueStart = 0;\r\n  var extent = valueAxis.scale.getExtent();\r\n\r\n  if (valueOrigin === 'start') {\r\n    valueStart = extent[0];\r\n  } else if (valueOrigin === 'end') {\r\n    valueStart = extent[1];\r\n  } // If origin is specified as a number, use it as\r\n  // valueStart directly\r\n  else if (isNumber(valueOrigin) && !isNaN(valueOrigin)) {\r\n      valueStart = valueOrigin;\r\n    } // auto\r\n    else {\r\n        // Both positive\r\n        if (extent[0] > 0) {\r\n          valueStart = extent[0];\r\n        } // Both negative\r\n        else if (extent[1] < 0) {\r\n            valueStart = extent[1];\r\n          } // If is one positive, and one negative, onZero shall be true\r\n\r\n      }\r\n\r\n  return valueStart;\r\n}\r\n\r\nexport function getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\r\n  var value = NaN;\r\n\r\n  if (dataCoordInfo.stacked) {\r\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\r\n  }\r\n\r\n  if (isNaN(value)) {\r\n    value = dataCoordInfo.valueStart;\r\n  }\r\n\r\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\r\n  var stackedData = [];\r\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\r\n  stackedData[1 - baseDataOffset] = value;\r\n  return coordSys.dataToPoint(stackedData);\r\n}"]},"metadata":{},"sourceType":"module"}