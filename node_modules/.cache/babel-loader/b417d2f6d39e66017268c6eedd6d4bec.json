{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nimport env from './core/env.js';\nimport * as zrUtil from './core/util.js';\nimport Handler from './Handler.js';\nimport Storage from './Storage.js';\nimport Animation, { getTime } from './animation/Animation.js';\nimport HandlerProxy from './dom/HandlerProxy.js';\nimport { lum } from './tool/color.js';\nimport { DARK_MODE_THRESHOLD } from './config.js';\nimport Group from './graphic/Group.js';\nvar painterCtors = {};\nvar instances = {};\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n\nfunction isDarkMode(backgroundColor) {\n  if (!backgroundColor) {\n    return false;\n  }\n\n  if (typeof backgroundColor === 'string') {\n    return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\n  } else if (backgroundColor.colorStops) {\n    var colorStops = backgroundColor.colorStops;\n    var totalLum = 0;\n    var len = colorStops.length;\n\n    for (var i = 0; i < len; i++) {\n      totalLum += lum(colorStops[i].color, 1);\n    }\n\n    totalLum /= len;\n    return totalLum < DARK_MODE_THRESHOLD;\n  }\n\n  return false;\n}\n\nvar ZRender = function () {\n  function ZRender(id, dom, opts) {\n    var _this = this;\n\n    this._sleepAfterStill = 10;\n    this._stillFrameAccum = 0;\n    this._needsRefresh = true;\n    this._needsRefreshHover = true;\n    this._darkMode = false;\n    opts = opts || {};\n    this.dom = dom;\n    this.id = id;\n    var storage = new Storage();\n    var rendererType = opts.renderer || 'canvas';\n\n    if (!painterCtors[rendererType]) {\n      rendererType = zrUtil.keys(painterCtors)[0];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!painterCtors[rendererType]) {\n        throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\n      }\n    }\n\n    opts.useDirtyRect = opts.useDirtyRect == null ? false : opts.useDirtyRect;\n    var painter = new painterCtors[rendererType](dom, storage, opts, id);\n    var ssrMode = opts.ssr || painter.ssrOnly;\n    this.storage = storage;\n    this.painter = painter;\n    var handerProxy = !env.node && !env.worker && !ssrMode ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n    var useCoarsePointer = opts.useCoarsePointer;\n    var usePointerSize = useCoarsePointer == null || useCoarsePointer === 'auto' ? env.touchEventsSupported : !!useCoarsePointer;\n    var defaultPointerSize = 44;\n    var pointerSize;\n\n    if (usePointerSize) {\n      pointerSize = zrUtil.retrieve2(opts.pointerSize, defaultPointerSize);\n    }\n\n    this.handler = new Handler(storage, painter, handerProxy, painter.root, pointerSize);\n    this.animation = new Animation({\n      stage: {\n        update: ssrMode ? null : function () {\n          return _this._flush(true);\n        }\n      }\n    });\n\n    if (!ssrMode) {\n      this.animation.start();\n    }\n  }\n\n  ZRender.prototype.add = function (el) {\n    if (!el) {\n      return;\n    }\n\n    this.storage.addRoot(el);\n    el.addSelfToZr(this);\n    this.refresh();\n  };\n\n  ZRender.prototype.remove = function (el) {\n    if (!el) {\n      return;\n    }\n\n    this.storage.delRoot(el);\n    el.removeSelfFromZr(this);\n    this.refresh();\n  };\n\n  ZRender.prototype.configLayer = function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this.refresh();\n  };\n\n  ZRender.prototype.setBackgroundColor = function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this.refresh();\n    this._backgroundColor = backgroundColor;\n    this._darkMode = isDarkMode(backgroundColor);\n  };\n\n  ZRender.prototype.getBackgroundColor = function () {\n    return this._backgroundColor;\n  };\n\n  ZRender.prototype.setDarkMode = function (darkMode) {\n    this._darkMode = darkMode;\n  };\n\n  ZRender.prototype.isDarkMode = function () {\n    return this._darkMode;\n  };\n\n  ZRender.prototype.refreshImmediately = function (fromInside) {\n    if (!fromInside) {\n      this.animation.update(true);\n    }\n\n    this._needsRefresh = false;\n    this.painter.refresh();\n    this._needsRefresh = false;\n  };\n\n  ZRender.prototype.refresh = function () {\n    this._needsRefresh = true;\n    this.animation.start();\n  };\n\n  ZRender.prototype.flush = function () {\n    this._flush(false);\n  };\n\n  ZRender.prototype._flush = function (fromInside) {\n    var triggerRendered;\n    var start = getTime();\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately(fromInside);\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    var end = getTime();\n\n    if (triggerRendered) {\n      this._stillFrameAccum = 0;\n      this.trigger('rendered', {\n        elapsedTime: end - start\n      });\n    } else if (this._sleepAfterStill > 0) {\n      this._stillFrameAccum++;\n\n      if (this._stillFrameAccum > this._sleepAfterStill) {\n        this.animation.stop();\n      }\n    }\n  };\n\n  ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\n    this._sleepAfterStill = stillFramesCount;\n  };\n\n  ZRender.prototype.wakeUp = function () {\n    this.animation.start();\n    this._stillFrameAccum = 0;\n  };\n\n  ZRender.prototype.refreshHover = function () {\n    this._needsRefreshHover = true;\n  };\n\n  ZRender.prototype.refreshHoverImmediately = function () {\n    this._needsRefreshHover = false;\n\n    if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\n      this.painter.refreshHover();\n    }\n  };\n\n  ZRender.prototype.resize = function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  };\n\n  ZRender.prototype.clearAnimation = function () {\n    this.animation.clear();\n  };\n\n  ZRender.prototype.getWidth = function () {\n    return this.painter.getWidth();\n  };\n\n  ZRender.prototype.getHeight = function () {\n    return this.painter.getHeight();\n  };\n\n  ZRender.prototype.setCursorStyle = function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  };\n\n  ZRender.prototype.findHover = function (x, y) {\n    return this.handler.findHover(x, y);\n  };\n\n  ZRender.prototype.on = function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n    return this;\n  };\n\n  ZRender.prototype.off = function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  };\n\n  ZRender.prototype.trigger = function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  };\n\n  ZRender.prototype.clear = function () {\n    var roots = this.storage.getRoots();\n\n    for (var i = 0; i < roots.length; i++) {\n      if (roots[i] instanceof Group) {\n        roots[i].removeSelfFromZr(this);\n      }\n    }\n\n    this.storage.delAllRoots();\n    this.painter.clear();\n  };\n\n  ZRender.prototype.dispose = function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  };\n\n  return ZRender;\n}();\n\nexport function init(dom, opts) {\n  var zr = new ZRender(zrUtil.guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\nexport function dispose(zr) {\n  zr.dispose();\n}\nexport function disposeAll() {\n  for (var key in instances) {\n    if (instances.hasOwnProperty(key)) {\n      instances[key].dispose();\n    }\n  }\n\n  instances = {};\n}\nexport function getInstance(id) {\n  return instances[id];\n}\nexport function registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\nexport var version = '5.4.3';\n;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/BookVue/node_modules/zrender/lib/zrender.js"],"names":["env","zrUtil","Handler","Storage","Animation","getTime","HandlerProxy","lum","DARK_MODE_THRESHOLD","Group","painterCtors","instances","delInstance","id","isDarkMode","backgroundColor","colorStops","totalLum","len","length","i","color","ZRender","dom","opts","_this","_sleepAfterStill","_stillFrameAccum","_needsRefresh","_needsRefreshHover","_darkMode","storage","rendererType","renderer","keys","process","NODE_ENV","Error","useDirtyRect","painter","ssrMode","ssr","ssrOnly","handerProxy","node","worker","getViewportRoot","root","useCoarsePointer","usePointerSize","touchEventsSupported","defaultPointerSize","pointerSize","retrieve2","handler","animation","stage","update","_flush","start","prototype","add","el","addRoot","addSelfToZr","refresh","remove","delRoot","removeSelfFromZr","configLayer","zLevel","config","setBackgroundColor","_backgroundColor","getBackgroundColor","setDarkMode","darkMode","refreshImmediately","fromInside","flush","triggerRendered","refreshHoverImmediately","end","trigger","elapsedTime","stop","setSleepAfterStill","stillFramesCount","wakeUp","refreshHover","getType","resize","width","height","clearAnimation","clear","getWidth","getHeight","setCursorStyle","cursorStyle","findHover","x","y","on","eventName","eventHandler","context","off","event","roots","getRoots","delAllRoots","dispose","init","zr","guid","disposeAll","key","hasOwnProperty","getInstance","registerPainter","name","Ctor","version"],"mappings":"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","sourcesContent":["/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nimport env from './core/env.js';\nimport * as zrUtil from './core/util.js';\nimport Handler from './Handler.js';\nimport Storage from './Storage.js';\nimport Animation, { getTime } from './animation/Animation.js';\nimport HandlerProxy from './dom/HandlerProxy.js';\nimport { lum } from './tool/color.js';\nimport { DARK_MODE_THRESHOLD } from './config.js';\nimport Group from './graphic/Group.js';\nvar painterCtors = {};\nvar instances = {};\nfunction delInstance(id) {\n    delete instances[id];\n}\nfunction isDarkMode(backgroundColor) {\n    if (!backgroundColor) {\n        return false;\n    }\n    if (typeof backgroundColor === 'string') {\n        return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\n    }\n    else if (backgroundColor.colorStops) {\n        var colorStops = backgroundColor.colorStops;\n        var totalLum = 0;\n        var len = colorStops.length;\n        for (var i = 0; i < len; i++) {\n            totalLum += lum(colorStops[i].color, 1);\n        }\n        totalLum /= len;\n        return totalLum < DARK_MODE_THRESHOLD;\n    }\n    return false;\n}\nvar ZRender = (function () {\n    function ZRender(id, dom, opts) {\n        var _this = this;\n        this._sleepAfterStill = 10;\n        this._stillFrameAccum = 0;\n        this._needsRefresh = true;\n        this._needsRefreshHover = true;\n        this._darkMode = false;\n        opts = opts || {};\n        this.dom = dom;\n        this.id = id;\n        var storage = new Storage();\n        var rendererType = opts.renderer || 'canvas';\n        if (!painterCtors[rendererType]) {\n            rendererType = zrUtil.keys(painterCtors)[0];\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!painterCtors[rendererType]) {\n                throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\n            }\n        }\n        opts.useDirtyRect = opts.useDirtyRect == null\n            ? false\n            : opts.useDirtyRect;\n        var painter = new painterCtors[rendererType](dom, storage, opts, id);\n        var ssrMode = opts.ssr || painter.ssrOnly;\n        this.storage = storage;\n        this.painter = painter;\n        var handerProxy = (!env.node && !env.worker && !ssrMode)\n            ? new HandlerProxy(painter.getViewportRoot(), painter.root)\n            : null;\n        var useCoarsePointer = opts.useCoarsePointer;\n        var usePointerSize = (useCoarsePointer == null || useCoarsePointer === 'auto')\n            ? env.touchEventsSupported\n            : !!useCoarsePointer;\n        var defaultPointerSize = 44;\n        var pointerSize;\n        if (usePointerSize) {\n            pointerSize = zrUtil.retrieve2(opts.pointerSize, defaultPointerSize);\n        }\n        this.handler = new Handler(storage, painter, handerProxy, painter.root, pointerSize);\n        this.animation = new Animation({\n            stage: {\n                update: ssrMode ? null : function () { return _this._flush(true); }\n            }\n        });\n        if (!ssrMode) {\n            this.animation.start();\n        }\n    }\n    ZRender.prototype.add = function (el) {\n        if (!el) {\n            return;\n        }\n        this.storage.addRoot(el);\n        el.addSelfToZr(this);\n        this.refresh();\n    };\n    ZRender.prototype.remove = function (el) {\n        if (!el) {\n            return;\n        }\n        this.storage.delRoot(el);\n        el.removeSelfFromZr(this);\n        this.refresh();\n    };\n    ZRender.prototype.configLayer = function (zLevel, config) {\n        if (this.painter.configLayer) {\n            this.painter.configLayer(zLevel, config);\n        }\n        this.refresh();\n    };\n    ZRender.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this.painter.setBackgroundColor) {\n            this.painter.setBackgroundColor(backgroundColor);\n        }\n        this.refresh();\n        this._backgroundColor = backgroundColor;\n        this._darkMode = isDarkMode(backgroundColor);\n    };\n    ZRender.prototype.getBackgroundColor = function () {\n        return this._backgroundColor;\n    };\n    ZRender.prototype.setDarkMode = function (darkMode) {\n        this._darkMode = darkMode;\n    };\n    ZRender.prototype.isDarkMode = function () {\n        return this._darkMode;\n    };\n    ZRender.prototype.refreshImmediately = function (fromInside) {\n        if (!fromInside) {\n            this.animation.update(true);\n        }\n        this._needsRefresh = false;\n        this.painter.refresh();\n        this._needsRefresh = false;\n    };\n    ZRender.prototype.refresh = function () {\n        this._needsRefresh = true;\n        this.animation.start();\n    };\n    ZRender.prototype.flush = function () {\n        this._flush(false);\n    };\n    ZRender.prototype._flush = function (fromInside) {\n        var triggerRendered;\n        var start = getTime();\n        if (this._needsRefresh) {\n            triggerRendered = true;\n            this.refreshImmediately(fromInside);\n        }\n        if (this._needsRefreshHover) {\n            triggerRendered = true;\n            this.refreshHoverImmediately();\n        }\n        var end = getTime();\n        if (triggerRendered) {\n            this._stillFrameAccum = 0;\n            this.trigger('rendered', {\n                elapsedTime: end - start\n            });\n        }\n        else if (this._sleepAfterStill > 0) {\n            this._stillFrameAccum++;\n            if (this._stillFrameAccum > this._sleepAfterStill) {\n                this.animation.stop();\n            }\n        }\n    };\n    ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\n        this._sleepAfterStill = stillFramesCount;\n    };\n    ZRender.prototype.wakeUp = function () {\n        this.animation.start();\n        this._stillFrameAccum = 0;\n    };\n    ZRender.prototype.refreshHover = function () {\n        this._needsRefreshHover = true;\n    };\n    ZRender.prototype.refreshHoverImmediately = function () {\n        this._needsRefreshHover = false;\n        if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\n            this.painter.refreshHover();\n        }\n    };\n    ZRender.prototype.resize = function (opts) {\n        opts = opts || {};\n        this.painter.resize(opts.width, opts.height);\n        this.handler.resize();\n    };\n    ZRender.prototype.clearAnimation = function () {\n        this.animation.clear();\n    };\n    ZRender.prototype.getWidth = function () {\n        return this.painter.getWidth();\n    };\n    ZRender.prototype.getHeight = function () {\n        return this.painter.getHeight();\n    };\n    ZRender.prototype.setCursorStyle = function (cursorStyle) {\n        this.handler.setCursorStyle(cursorStyle);\n    };\n    ZRender.prototype.findHover = function (x, y) {\n        return this.handler.findHover(x, y);\n    };\n    ZRender.prototype.on = function (eventName, eventHandler, context) {\n        this.handler.on(eventName, eventHandler, context);\n        return this;\n    };\n    ZRender.prototype.off = function (eventName, eventHandler) {\n        this.handler.off(eventName, eventHandler);\n    };\n    ZRender.prototype.trigger = function (eventName, event) {\n        this.handler.trigger(eventName, event);\n    };\n    ZRender.prototype.clear = function () {\n        var roots = this.storage.getRoots();\n        for (var i = 0; i < roots.length; i++) {\n            if (roots[i] instanceof Group) {\n                roots[i].removeSelfFromZr(this);\n            }\n        }\n        this.storage.delAllRoots();\n        this.painter.clear();\n    };\n    ZRender.prototype.dispose = function () {\n        this.animation.stop();\n        this.clear();\n        this.storage.dispose();\n        this.painter.dispose();\n        this.handler.dispose();\n        this.animation =\n            this.storage =\n                this.painter =\n                    this.handler = null;\n        delInstance(this.id);\n    };\n    return ZRender;\n}());\nexport function init(dom, opts) {\n    var zr = new ZRender(zrUtil.guid(), dom, opts);\n    instances[zr.id] = zr;\n    return zr;\n}\nexport function dispose(zr) {\n    zr.dispose();\n}\nexport function disposeAll() {\n    for (var key in instances) {\n        if (instances.hasOwnProperty(key)) {\n            instances[key].dispose();\n        }\n    }\n    instances = {};\n}\nexport function getInstance(id) {\n    return instances[id];\n}\nexport function registerPainter(name, Ctor) {\n    painterCtors[name] = Ctor;\n}\nexport var version = '5.4.3';\n;\n"]},"metadata":{},"sourceType":"module"}