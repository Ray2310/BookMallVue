{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function onclick() {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } // Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO highlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/ElectronicMallVue/node_modules/echarts/lib/component/legend/LegendView.js"],"names":["__extends","zrUtil","parse","stringify","graphic","enableHoverEmphasis","setLabelStyle","createTextStyle","makeBackground","layoutUtil","ComponentView","createSymbol","createOrUpdatePatternFromDecal","curry","each","Group","LegendView","_super","_this","apply","arguments","type","newlineDisabled","prototype","init","group","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","ecModel","api","isFirstRender","resetInner","get","itemAlign","orient","selector","selectorPosition","renderInner","positionInfo","getBoxLayoutParams","viewportSize","width","getWidth","height","getHeight","padding","maxSize","getLayoutRect","mainRect","layoutInner","layoutRect","defaults","x","y","markRedraw","_backgroundEl","removeAll","remove","contentGroup","legendDrawnMap","createHashMap","selectMode","excludeSeriesId","eachRawSeries","seriesModel","push","id","getData","legendItemModel","dataIndex","name","g","newline","getSeriesByName","data","lineVisualStyle","getVisual","legendIcon","style","itemGroup","_createItem","on","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","set","legendVisualProvider","provider","containName","idx","indexOfName","getItemVisual","colorArr","fill","extend","process","env","NODE_ENV","console","warn","_createSelector","selectorGroup","createSelectorButton","selectorItem","labelText","Text","align","verticalAlign","onclick","dispatchAction","labelModel","getModel","emphasisLabelModel","normal","emphasis","defaultText","title","itemVisualStyle","drawType","visualDrawType","itemWidth","itemHeight","isSelected","iconRotate","symbolKeepAspect","legendIconType","getLegendStyle","textStyleModel","isFunction","getLegendIcon","icon","itemStyle","lineStyle","rotate","getDefaultLegendIcon","textX","textAlign","formatter","content","isString","replace","inactiveColor","text","getTextColor","hitRect","Rect","shape","getBoundingRect","invisible","tooltipModel","setTooltipConfig","el","componentModel","itemName","itemTooltipOption","option","eachChild","child","silent","__legendDataIndex","box","contentRect","contentPos","selectorRect","selectorPos","selectorButtonGap","orientIdx","getOrient","index","wh","hw","yx","Math","max","min","iconType","handleCommonProps","visualStyle","lineWidth","propVal","propName","itemStyleModel","getItemStyle","iconBrushType","lastIndexOf","decalStyle","getShallow","decal","stroke","opacity","legendLineModel","getLineStyle","borderWidth","visualHasBorder","opt","symboType","setStyle","rotation","PI","setOrigin","indexOf","seriesName","dataName","isUseHoverLayer","list","getZr","storage","getDisplayList","emphasisState","i","len","length","states","hoverLayer"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { parse, stringify } from 'zrender/lib/tool/color.js';\nimport * as graphic from '../../util/graphic.js';\nimport { enableHoverEmphasis } from '../../util/states.js';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle.js';\nimport { makeBackground } from '../helper/listComponent.js';\nimport * as layoutUtil from '../../util/layout.js';\nimport ComponentView from '../../view/Component.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { createOrUpdatePatternFromDecal } from '../../util/decal.js';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawn\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode, api);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style = zrUtil.extend(zrUtil.extend({}, style), {\n                fill: stringify(colorArr, 'rgba')\n              });\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode, api); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode, api) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var symbolKeepAspect = legendItemModel.get('symbolKeepAspect');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var style = getLegendStyle(legendIcon, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (zrUtil.isFunction(seriesModel.getLegendIcon) && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle,\n        symbolKeepAspect: symbolKeepAspect\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (zrUtil.isString(formatter) && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (zrUtil.isFunction(formatter)) {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } // Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendItemModel, lineVisualStyle, itemVisualStyle, drawType, isSelected, api) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  function handleCommonProps(style, visualStyle) {\n    // If lineStyle.width is 'auto', it is set to be 2 if series has border\n    if (style.lineWidth === 'auto') {\n      style.lineWidth = visualStyle.lineWidth > 0 ? 2 : 0;\n    }\n\n    each(style, function (propVal, propName) {\n      style[propName] === 'inherit' && (style[propName] = visualStyle[propName]);\n    });\n  } // itemStyle\n\n\n  var itemStyleModel = legendItemModel.getModel('itemStyle');\n  var itemStyle = itemStyleModel.getItemStyle();\n  var iconBrushType = iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke';\n  var decalStyle = itemStyleModel.getShallow('decal');\n  itemStyle.decal = !decalStyle || decalStyle === 'inherit' ? itemVisualStyle.decal : createOrUpdatePatternFromDecal(decalStyle, api);\n\n  if (itemStyle.fill === 'inherit') {\n    /**\n     * Series with visualDrawType as 'stroke' should have\n     * series stroke as legend fill\n     */\n    itemStyle.fill = itemVisualStyle[drawType];\n  }\n\n  if (itemStyle.stroke === 'inherit') {\n    /**\n     * icon type with \"emptyXXX\" should use fill color\n     * in visual style\n     */\n    itemStyle.stroke = itemVisualStyle[iconBrushType];\n  }\n\n  if (itemStyle.opacity === 'inherit') {\n    /**\n     * Use lineStyle.opacity if drawType is stroke\n     */\n    itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n  }\n\n  handleCommonProps(itemStyle, itemVisualStyle); // lineStyle\n\n  var legendLineModel = legendItemModel.getModel('lineStyle');\n  var lineStyle = legendLineModel.getLineStyle();\n  handleCommonProps(lineStyle, lineVisualStyle); // Fix auto color to real color\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendItemModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconBrushType];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendItemModel.get('inactiveColor');\n    itemStyle.stroke = legendItemModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineModel.get('inactiveColor');\n    lineStyle.lineWidth = legendLineModel.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill, opt.symbolKeepAspect);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO highlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;"]},"metadata":{},"sourceType":"module"}