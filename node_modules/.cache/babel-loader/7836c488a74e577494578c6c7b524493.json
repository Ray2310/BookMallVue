{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series.js';\nimport createSeriesData from '../helper/createSeriesData.js';\n\nvar BaseBarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys && coordSys.clampData) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    // zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(BaseBarSeriesModel);\nexport default BaseBarSeriesModel;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/bar/BaseBarSeries.js"],"names":["__extends","SeriesModel","createSeriesData","BaseBarSeriesModel","_super","_this","apply","arguments","type","prototype","getInitialData","option","ecModel","useEncodeDefaulter","getMarkerPosition","value","coordSys","coordinateSystem","clampData","pt","dataToPoint","data","getData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","defaultOption","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","registerClass"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;;AAEA,IAAIC,kBAAkB;AACtB;AACA,UAAUC,MAAV,EAAkB;AAChBJ,EAAAA,SAAS,CAACG,kBAAD,EAAqBC,MAArB,CAAT;;AAEA,WAASD,kBAAT,GAA8B;AAC5B,QAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;;AAEAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,kBAAkB,CAACK,IAAhC;AACA,WAAOH,KAAP;AACD;;AAEDF,EAAAA,kBAAkB,CAACM,SAAnB,CAA6BC,cAA7B,GAA8C,UAAUC,MAAV,EAAkBC,OAAlB,EAA2B;AACvE,WAAOV,gBAAgB,CAAC,IAAD,EAAO,IAAP,EAAa;AAClCW,MAAAA,kBAAkB,EAAE;AADc,KAAb,CAAvB;AAGD,GAJD;;AAMAV,EAAAA,kBAAkB,CAACM,SAAnB,CAA6BK,iBAA7B,GAAiD,UAAUC,KAAV,EAAiB;AAChE,QAAIC,QAAQ,GAAG,KAAKC,gBAApB;;AAEA,QAAID,QAAQ,IAAIA,QAAQ,CAACE,SAAzB,EAAoC;AAClC;AACA,UAAIC,EAAE,GAAGH,QAAQ,CAACI,WAAT,CAAqBJ,QAAQ,CAACE,SAAT,CAAmBH,KAAnB,CAArB,CAAT;AACA,UAAIM,IAAI,GAAG,KAAKC,OAAL,EAAX;AACA,UAAIC,MAAM,GAAGF,IAAI,CAACG,SAAL,CAAe,QAAf,CAAb;AACA,UAAIC,IAAI,GAAGJ,IAAI,CAACG,SAAL,CAAe,MAAf,CAAX;AACA,UAAIE,WAAW,GAAGV,QAAQ,CAACW,WAAT,GAAuBC,YAAvB,KAAwC,CAAxC,GAA4C,CAA9D;AACAT,MAAAA,EAAE,CAACO,WAAD,CAAF,IAAmBH,MAAM,GAAGE,IAAI,GAAG,CAAnC;AACA,aAAON,EAAP;AACD;;AAED,WAAO,CAACU,GAAD,EAAMA,GAAN,CAAP;AACD,GAfD;;AAiBA1B,EAAAA,kBAAkB,CAACK,IAAnB,GAA0B,qBAA1B;AACAL,EAAAA,kBAAkB,CAAC2B,aAAnB,GAAmC;AACjC;AACAC,IAAAA,CAAC,EAAE,CAF8B;AAGjCd,IAAAA,gBAAgB,EAAE,aAHe;AAIjCe,IAAAA,eAAe,EAAE,IAJgB;AAKjC;AACA;AACA;AACA;AACAC,IAAAA,YAAY,EAAE,CATmB;AAUjCC,IAAAA,WAAW,EAAE,CAVoB;AAWjC;AACAC,IAAAA,KAAK,EAAE,KAZ0B;AAajCC,IAAAA,cAAc,EAAE,GAbiB;AAcjCC,IAAAA,WAAW,EAAE,GAdoB;AAejCC,IAAAA,oBAAoB,EAAE;AAfW,GAAnC;AAiBA,SAAOnC,kBAAP;AACD,CApDD,CAoDEF,WApDF,CAFA;;AAwDAA,WAAW,CAACsC,aAAZ,CAA0BpC,kBAA1B;AACA,eAAeA,kBAAf","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport SeriesModel from '../../model/Series.js';\r\nimport createSeriesData from '../helper/createSeriesData.js';\r\n\r\nvar BaseBarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BaseBarSeriesModel, _super);\r\n\r\n  function BaseBarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BaseBarSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true\r\n    });\r\n  };\r\n\r\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\r\n    var coordSys = this.coordinateSystem;\r\n\r\n    if (coordSys && coordSys.clampData) {\r\n      // PENDING if clamp ?\r\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\r\n      var data = this.getData();\r\n      var offset = data.getLayout('offset');\r\n      var size = data.getLayout('size');\r\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\r\n      pt[offsetIndex] += offset + size / 2;\r\n      return pt;\r\n    }\r\n\r\n    return [NaN, NaN];\r\n  };\r\n\r\n  BaseBarSeriesModel.type = 'series.__base_bar__';\r\n  BaseBarSeriesModel.defaultOption = {\r\n    // zlevel: 0,\r\n    z: 2,\r\n    coordinateSystem: 'cartesian2d',\r\n    legendHoverLink: true,\r\n    // stack: null\r\n    // Cartesian coordinate system\r\n    // xAxisIndex: 0,\r\n    // yAxisIndex: 0,\r\n    barMinHeight: 0,\r\n    barMinAngle: 0,\r\n    // cursor: null,\r\n    large: false,\r\n    largeThreshold: 400,\r\n    progressive: 3e3,\r\n    progressiveChunkMode: 'mod'\r\n  };\r\n  return BaseBarSeriesModel;\r\n}(SeriesModel);\r\n\r\nSeriesModel.registerClass(BaseBarSeriesModel);\r\nexport default BaseBarSeriesModel;"]},"metadata":{},"sourceType":"module"}