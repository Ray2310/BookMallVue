{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { isNumber } from 'zrender/lib/core/util.js';\nexport default function negativeDataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function reset(seriesModel, ecModel) {\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        // handle negative value condition\n        var valueDim = data.mapDimension('value');\n        var curValue = data.get(valueDim, idx);\n\n        if (isNumber(curValue) && !isNaN(curValue) && curValue < 0) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  };\n}","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/processor/negativeDataFilter.js"],"names":["isNumber","negativeDataFilter","seriesType","reset","seriesModel","ecModel","data","getData","filterSelf","idx","valueDim","mapDimension","curValue","get","isNaN"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,0BAAzB;AACA,eAAe,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;AACrD,SAAO;AACLA,IAAAA,UAAU,EAAEA,UADP;AAELC,IAAAA,KAAK,EAAE,eAAUC,WAAV,EAAuBC,OAAvB,EAAgC;AACrC,UAAIC,IAAI,GAAGF,WAAW,CAACG,OAAZ,EAAX;AACAD,MAAAA,IAAI,CAACE,UAAL,CAAgB,UAAUC,GAAV,EAAe;AAC7B;AACA,YAAIC,QAAQ,GAAGJ,IAAI,CAACK,YAAL,CAAkB,OAAlB,CAAf;AACA,YAAIC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASH,QAAT,EAAmBD,GAAnB,CAAf;;AAEA,YAAIT,QAAQ,CAACY,QAAD,CAAR,IAAsB,CAACE,KAAK,CAACF,QAAD,CAA5B,IAA0CA,QAAQ,GAAG,CAAzD,EAA4D;AAC1D,iBAAO,KAAP;AACD;;AAED,eAAO,IAAP;AACD,OAVD;AAWD;AAfI,GAAP;AAiBD","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { isNumber } from 'zrender/lib/core/util.js';\r\nexport default function negativeDataFilter(seriesType) {\r\n  return {\r\n    seriesType: seriesType,\r\n    reset: function (seriesModel, ecModel) {\r\n      var data = seriesModel.getData();\r\n      data.filterSelf(function (idx) {\r\n        // handle negative value condition\r\n        var valueDim = data.mapDimension('value');\r\n        var curValue = data.get(valueDim, idx);\r\n\r\n        if (isNumber(curValue) && !isNaN(curValue) && curValue < 0) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      });\r\n    }\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}