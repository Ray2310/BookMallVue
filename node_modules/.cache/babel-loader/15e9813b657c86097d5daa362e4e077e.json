{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString } from 'zrender/lib/core/util.js';\n\nvar SankeyPathShape =\n/** @class */\nfunction () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n\n  return SankeyPathShape;\n}();\n\nvar SankeyPath =\n/** @class */\nfunction (_super) {\n  __extends(SankeyPath, _super);\n\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  };\n\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  return SankeyPath;\n}(graphic.Path);\n\nvar SankeyView =\n/** @class */\nfunction (_super) {\n  __extends(SankeyView, _super);\n\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          curve.style.decal = edge.node1.getVisual('style').decal;\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          curve.style.decal = edge.node2.getVisual('style').decal;\n          break;\n\n        case 'gradient':\n          var sourceColor = edge.node1.getVisual('color');\n          var targetColor = edge.node2.getVisual('color');\n\n          if (isString(sourceColor) && isString(targetColor)) {\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n              color: sourceColor,\n              offset: 0\n            }, {\n              color: targetColor,\n              offset: 1\n            }]);\n          }\n\n      }\n\n      setLabelStyle(curve, getLabelStatesModels(edgeModel, 'edgeLabel'), {\n        labelFetcher: seriesModel,\n        labelDataIndex: edge.dataIndex,\n        defaultText: \"\" + edgeModel.get('value')\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        return model.getItemStyle();\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      getECData(curve).dataType = 'edge';\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  };\n\n  SankeyView.prototype.dispose = function () {};\n\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default SankeyView;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/ElectronicMallVue/node_modules/echarts/lib/chart/sankey/SankeyView.js"],"names":["__extends","graphic","enterEmphasis","leaveEmphasis","toggleHoverEmphasis","setStatesStylesFromModel","ChartView","setLabelStyle","getLabelStatesModels","getECData","isString","SankeyPathShape","x1","y1","x2","y2","cpx1","cpy1","cpx2","cpy2","extent","SankeyPath","_super","opts","call","prototype","getDefaultShape","buildPath","ctx","shape","moveTo","bezierCurveTo","orient","lineTo","closePath","highlight","downplay","Path","SankeyView","_this","apply","arguments","type","_focusAdjacencyDisabled","render","seriesModel","ecModel","api","sankeyView","graph","getGraph","group","layoutInfo","width","height","nodeData","getData","edgeData","get","_model","removeAll","x","y","eachEdge","edge","curve","ecData","dataIndex","seriesIndex","dataType","edgeModel","getModel","lineStyleModel","curvature","n1Layout","node1","getLayout","node1Model","dragX1","dragY1","n2Layout","node2","node2Model","dragX2","dragY2","edgeLayout","Math","max","dy","sy","ty","dx","setShape","useStyle","getItemStyle","style","fill","getVisual","decal","sourceColor","targetColor","LinearGradient","color","offset","labelFetcher","labelDataIndex","defaultText","setTextConfig","position","emphasisModel","model","add","setItemGraphicEl","focus","getAdjacentDataIndices","eachNode","node","layout","itemModel","dragX","dragY","rect","Rect","z2","id","disableLabelAnimation","setStyle","eachItemGraphicEl","el","getItemModel","drift","dirty","dispatchAction","seriesId","getRawIndex","localX","localY","ondragend","draggable","cursor","_data","isAnimationEnabled","setClipPath","createGridClipShape","getBoundingRect","removeClipPath","dispose","cb","rectEl","initProps"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { enterEmphasis, leaveEmphasis, toggleHoverEmphasis, setStatesStylesFromModel } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle.js';\nimport { getECData } from '../../util/innerStore.js';\nimport { isString } from 'zrender/lib/core/util.js';\n\nvar SankeyPathShape =\n/** @class */\nfunction () {\n  function SankeyPathShape() {\n    this.x1 = 0;\n    this.y1 = 0;\n    this.x2 = 0;\n    this.y2 = 0;\n    this.cpx1 = 0;\n    this.cpy1 = 0;\n    this.cpx2 = 0;\n    this.cpy2 = 0;\n    this.extent = 0;\n  }\n\n  return SankeyPathShape;\n}();\n\nvar SankeyPath =\n/** @class */\nfunction (_super) {\n  __extends(SankeyPath, _super);\n\n  function SankeyPath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  SankeyPath.prototype.getDefaultShape = function () {\n    return new SankeyPathShape();\n  };\n\n  SankeyPath.prototype.buildPath = function (ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  };\n\n  SankeyPath.prototype.highlight = function () {\n    enterEmphasis(this);\n  };\n\n  SankeyPath.prototype.downplay = function () {\n    leaveEmphasis(this);\n  };\n\n  return SankeyPath;\n}(graphic.Path);\n\nvar SankeyView =\n/** @class */\nfunction (_super) {\n  __extends(SankeyView, _super);\n\n  function SankeyView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = SankeyView.type;\n    _this._focusAdjacencyDisabled = false;\n    return _this;\n  }\n\n  SankeyView.prototype.render = function (seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.x = layoutInfo.x;\n    group.y = layoutInfo.y; // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyPath();\n      var ecData = getECData(curve);\n      ecData.dataIndex = edge.dataIndex;\n      ecData.seriesIndex = seriesModel.seriesIndex;\n      ecData.dataType = 'edge';\n      var edgeModel = edge.getModel();\n      var lineStyleModel = edgeModel.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.useStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          curve.style.decal = edge.node1.getVisual('style').decal;\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          curve.style.decal = edge.node2.getVisual('style').decal;\n          break;\n\n        case 'gradient':\n          var sourceColor = edge.node1.getVisual('color');\n          var targetColor = edge.node2.getVisual('color');\n\n          if (isString(sourceColor) && isString(targetColor)) {\n            curve.style.fill = new graphic.LinearGradient(0, 0, +(orient === 'horizontal'), +(orient === 'vertical'), [{\n              color: sourceColor,\n              offset: 0\n            }, {\n              color: targetColor,\n              offset: 1\n            }]);\n          }\n\n      }\n\n      setLabelStyle(curve, getLabelStatesModels(edgeModel, 'edgeLabel'), {\n        labelFetcher: seriesModel,\n        labelDataIndex: edge.dataIndex,\n        defaultText: \"\" + edgeModel.get('value')\n      });\n      curve.setTextConfig({\n        position: 'inside'\n      });\n      var emphasisModel = edgeModel.getModel('emphasis');\n      setStatesStylesFromModel(curve, edgeModel, 'lineStyle', function (model) {\n        return model.getItemStyle();\n      });\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(curve, focus === 'adjacency' ? edge.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n      getECData(curve).dataType = 'edge';\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var emphasisModel = itemModel.getModel('emphasis');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle(),\n        z2: 10\n      });\n      setLabelStyle(rect, getLabelStatesModels(itemModel), {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id\n      });\n      rect.disableLabelAnimation = true;\n      rect.setStyle('fill', node.getVisual('color'));\n      rect.setStyle('decal', node.getVisual('style').decal);\n      setStatesStylesFromModel(rect, itemModel);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      getECData(rect).dataType = 'node';\n      var focus = emphasisModel.get('focus');\n      toggleHoverEmphasis(rect, focus === 'adjacency' ? node.getAdjacentDataIndices() : focus, emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n    });\n\n    if (!this._data && seriesModel.isAnimationEnabled()) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  };\n\n  SankeyView.prototype.dispose = function () {};\n\n  SankeyView.type = 'sankey';\n  return SankeyView;\n}(ChartView); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nexport default SankeyView;"]},"metadata":{},"sourceType":"module"}