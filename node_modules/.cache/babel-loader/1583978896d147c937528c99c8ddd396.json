{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js'; // id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n\nvar Graph =\n/** @class */\nfunction () {\n  function Graph(directed) {\n    this.type = 'graph';\n    this.nodes = [];\n    this.edges = [];\n    this._nodesMap = {};\n    /**\r\n     * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n     * @private\r\n     */\n\n    this._edgesMap = {};\n    this._directed = directed || false;\n  }\n  /**\r\n   * If is directed graph\r\n   */\n\n\n  Graph.prototype.isDirected = function () {\n    return this._directed;\n  };\n\n  ;\n  /**\r\n   * Add a new node\r\n   */\n\n  Graph.prototype.addNode = function (id, dataIndex) {\n    id = id == null ? '' + dataIndex : '' + id;\n    var nodesMap = this._nodesMap;\n\n    if (nodesMap[generateNodeKey(id)]) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Graph nodes have duplicate name or id');\n      }\n\n      return;\n    }\n\n    var node = new GraphNode(id, dataIndex);\n    node.hostGraph = this;\n    this.nodes.push(node);\n    nodesMap[generateNodeKey(id)] = node;\n    return node;\n  };\n\n  ;\n  /**\r\n   * Get node by data index\r\n   */\n\n  Graph.prototype.getNodeByIndex = function (dataIndex) {\n    var rawIdx = this.data.getRawIndex(dataIndex);\n    return this.nodes[rawIdx];\n  };\n\n  ;\n  /**\r\n   * Get node by id\r\n   */\n\n  Graph.prototype.getNodeById = function (id) {\n    return this._nodesMap[generateNodeKey(id)];\n  };\n\n  ;\n  /**\r\n   * Add a new edge\r\n   */\n\n  Graph.prototype.addEdge = function (n1, n2, dataIndex) {\n    var nodesMap = this._nodesMap;\n    var edgesMap = this._edgesMap; // PNEDING\n\n    if (zrUtil.isNumber(n1)) {\n      n1 = this.nodes[n1];\n    }\n\n    if (zrUtil.isNumber(n2)) {\n      n2 = this.nodes[n2];\n    }\n\n    if (!(n1 instanceof GraphNode)) {\n      n1 = nodesMap[generateNodeKey(n1)];\n    }\n\n    if (!(n2 instanceof GraphNode)) {\n      n2 = nodesMap[generateNodeKey(n2)];\n    }\n\n    if (!n1 || !n2) {\n      return;\n    }\n\n    var key = n1.id + '-' + n2.id;\n    var edge = new GraphEdge(n1, n2, dataIndex);\n    edge.hostGraph = this;\n\n    if (this._directed) {\n      n1.outEdges.push(edge);\n      n2.inEdges.push(edge);\n    }\n\n    n1.edges.push(edge);\n\n    if (n1 !== n2) {\n      n2.edges.push(edge);\n    }\n\n    this.edges.push(edge);\n    edgesMap[key] = edge;\n    return edge;\n  };\n\n  ;\n  /**\r\n   * Get edge by data index\r\n   */\n\n  Graph.prototype.getEdgeByIndex = function (dataIndex) {\n    var rawIdx = this.edgeData.getRawIndex(dataIndex);\n    return this.edges[rawIdx];\n  };\n\n  ;\n  /**\r\n   * Get edge by two linked nodes\r\n   */\n\n  Graph.prototype.getEdge = function (n1, n2) {\n    if (n1 instanceof GraphNode) {\n      n1 = n1.id;\n    }\n\n    if (n2 instanceof GraphNode) {\n      n2 = n2.id;\n    }\n\n    var edgesMap = this._edgesMap;\n\n    if (this._directed) {\n      return edgesMap[n1 + '-' + n2];\n    } else {\n      return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n    }\n  };\n\n  ;\n  /**\r\n   * Iterate all nodes\r\n   */\n\n  Graph.prototype.eachNode = function (cb, context) {\n    var nodes = this.nodes;\n    var len = nodes.length;\n\n    for (var i = 0; i < len; i++) {\n      if (nodes[i].dataIndex >= 0) {\n        cb.call(context, nodes[i], i);\n      }\n    }\n  };\n\n  ;\n  /**\r\n   * Iterate all edges\r\n   */\n\n  Graph.prototype.eachEdge = function (cb, context) {\n    var edges = this.edges;\n    var len = edges.length;\n\n    for (var i = 0; i < len; i++) {\n      if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n        cb.call(context, edges[i], i);\n      }\n    }\n  };\n\n  ;\n  /**\r\n   * Breadth first traverse\r\n   * Return true to stop traversing\r\n   */\n\n  Graph.prototype.breadthFirstTraverse = function (cb, startNode, direction, context) {\n    if (!(startNode instanceof GraphNode)) {\n      startNode = this._nodesMap[generateNodeKey(startNode)];\n    }\n\n    if (!startNode) {\n      return;\n    }\n\n    var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      this.nodes[i].__visited = false;\n    }\n\n    if (cb.call(context, startNode, null)) {\n      return;\n    }\n\n    var queue = [startNode];\n\n    while (queue.length) {\n      var currentNode = queue.shift();\n      var edges = currentNode[edgeType];\n\n      for (var i = 0; i < edges.length; i++) {\n        var e = edges[i];\n        var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n        if (!otherNode.__visited) {\n          if (cb.call(context, otherNode, currentNode)) {\n            // Stop traversing\n            return;\n          }\n\n          queue.push(otherNode);\n          otherNode.__visited = true;\n        }\n      }\n    }\n  };\n\n  ; // TODO\n  // depthFirstTraverse(\n  //     cb, startNode, direction, context\n  // ) {\n  // };\n  // Filter update\n\n  Graph.prototype.update = function () {\n    var data = this.data;\n    var edgeData = this.edgeData;\n    var nodes = this.nodes;\n    var edges = this.edges;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n\n    edgeData.filterSelf(function (idx) {\n      var edge = edges[edgeData.getRawIndex(idx)];\n      return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n    }); // Update edge\n\n    for (var i = 0, len = edges.length; i < len; i++) {\n      edges[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = edgeData.count(); i < len; i++) {\n      edges[edgeData.getRawIndex(i)].dataIndex = i;\n    }\n  };\n\n  ;\n  /**\r\n   * @return {module:echarts/data/Graph}\r\n   */\n\n  Graph.prototype.clone = function () {\n    var graph = new Graph(this._directed);\n    var nodes = this.nodes;\n    var edges = this.edges;\n\n    for (var i = 0; i < nodes.length; i++) {\n      graph.addNode(nodes[i].id, nodes[i].dataIndex);\n    }\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n    }\n\n    return graph;\n  };\n\n  ;\n  return Graph;\n}();\n\nvar GraphNode =\n/** @class */\nfunction () {\n  function GraphNode(id, dataIndex) {\n    this.inEdges = [];\n    this.outEdges = [];\n    this.edges = [];\n    this.dataIndex = -1;\n    this.id = id == null ? '' : id;\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\n  }\n  /**\r\n   * @return {number}\r\n   */\n\n\n  GraphNode.prototype.degree = function () {\n    return this.edges.length;\n  };\n  /**\r\n   * @return {number}\r\n   */\n\n\n  GraphNode.prototype.inDegree = function () {\n    return this.inEdges.length;\n  };\n  /**\r\n  * @return {number}\r\n  */\n\n\n  GraphNode.prototype.outDegree = function () {\n    return this.outEdges.length;\n  };\n\n  GraphNode.prototype.getModel = function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  };\n\n  GraphNode.prototype.getAdjacentDataIndices = function () {\n    var dataIndices = {\n      edge: [],\n      node: []\n    };\n\n    for (var i = 0; i < this.edges.length; i++) {\n      var adjacentEdge = this.edges[i];\n\n      if (adjacentEdge.dataIndex < 0) {\n        continue;\n      }\n\n      dataIndices.edge.push(adjacentEdge.dataIndex);\n      dataIndices.node.push(adjacentEdge.node1.dataIndex, adjacentEdge.node2.dataIndex);\n    }\n\n    return dataIndices;\n  };\n\n  return GraphNode;\n}();\n\nvar GraphEdge =\n/** @class */\nfunction () {\n  function GraphEdge(n1, n2, dataIndex) {\n    this.dataIndex = -1;\n    this.node1 = n1;\n    this.node2 = n2;\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  GraphEdge.prototype.getModel = function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  };\n\n  GraphEdge.prototype.getAdjacentDataIndices = function () {\n    return {\n      edge: [this.dataIndex],\n      node: [this.node1.dataIndex, this.node2.dataIndex]\n    };\n  };\n\n  return GraphEdge;\n}();\n\nfunction createGraphDataProxyMixin(hostName, dataName) {\n  return {\n    /**\r\n     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n     */\n    getValue: function getValue(dimension) {\n      var data = this[hostName][dataName];\n      return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\n    },\n    // TODO: TYPE stricter type.\n    setVisual: function setVisual(key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n    getVisual: function getVisual(key) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key);\n    },\n    setLayout: function setLayout(layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n    getLayout: function getLayout() {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n    getGraphicEl: function getGraphicEl() {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n    getRawIndex: function getRawIndex() {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n}\n\n;\n;\n;\nzrUtil.mixin(GraphNode, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(GraphEdge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nexport default Graph;\nexport { GraphNode, GraphEdge };","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/data/Graph.js"],"names":["zrUtil","generateNodeKey","id","Graph","directed","type","nodes","edges","_nodesMap","_edgesMap","_directed","prototype","isDirected","addNode","dataIndex","nodesMap","process","env","NODE_ENV","console","error","node","GraphNode","hostGraph","push","getNodeByIndex","rawIdx","data","getRawIndex","getNodeById","addEdge","n1","n2","edgesMap","isNumber","key","edge","GraphEdge","outEdges","inEdges","getEdgeByIndex","edgeData","getEdge","eachNode","cb","context","len","length","i","call","eachEdge","node1","node2","breadthFirstTraverse","startNode","direction","edgeType","__visited","queue","currentNode","shift","e","otherNode","update","count","filterSelf","idx","clone","graph","degree","inDegree","outDegree","getModel","path","itemModel","getItemModel","getAdjacentDataIndices","dataIndices","adjacentEdge","createGraphDataProxyMixin","hostName","dataName","getValue","dimension","getStore","get","getDimensionIndex","setVisual","value","setItemVisual","getVisual","getItemVisual","setLayout","layout","merge","setItemLayout","getLayout","getItemLayout","getGraphicEl","getItemGraphicEl","mixin"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js'; // id may be function name of Object, add a prefix to avoid this problem.\r\n\r\nfunction generateNodeKey(id) {\r\n  return '_EC_' + id;\r\n}\r\n\r\nvar Graph =\r\n/** @class */\r\nfunction () {\r\n  function Graph(directed) {\r\n    this.type = 'graph';\r\n    this.nodes = [];\r\n    this.edges = [];\r\n    this._nodesMap = {};\r\n    /**\r\n     * @type {Object.<string, module:echarts/data/Graph.Edge>}\r\n     * @private\r\n     */\r\n\r\n    this._edgesMap = {};\r\n    this._directed = directed || false;\r\n  }\r\n  /**\r\n   * If is directed graph\r\n   */\r\n\r\n\r\n  Graph.prototype.isDirected = function () {\r\n    return this._directed;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Add a new node\r\n   */\r\n\r\n  Graph.prototype.addNode = function (id, dataIndex) {\r\n    id = id == null ? '' + dataIndex : '' + id;\r\n    var nodesMap = this._nodesMap;\r\n\r\n    if (nodesMap[generateNodeKey(id)]) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error('Graph nodes have duplicate name or id');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var node = new GraphNode(id, dataIndex);\r\n    node.hostGraph = this;\r\n    this.nodes.push(node);\r\n    nodesMap[generateNodeKey(id)] = node;\r\n    return node;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get node by data index\r\n   */\r\n\r\n  Graph.prototype.getNodeByIndex = function (dataIndex) {\r\n    var rawIdx = this.data.getRawIndex(dataIndex);\r\n    return this.nodes[rawIdx];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get node by id\r\n   */\r\n\r\n  Graph.prototype.getNodeById = function (id) {\r\n    return this._nodesMap[generateNodeKey(id)];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Add a new edge\r\n   */\r\n\r\n  Graph.prototype.addEdge = function (n1, n2, dataIndex) {\r\n    var nodesMap = this._nodesMap;\r\n    var edgesMap = this._edgesMap; // PNEDING\r\n\r\n    if (zrUtil.isNumber(n1)) {\r\n      n1 = this.nodes[n1];\r\n    }\r\n\r\n    if (zrUtil.isNumber(n2)) {\r\n      n2 = this.nodes[n2];\r\n    }\r\n\r\n    if (!(n1 instanceof GraphNode)) {\r\n      n1 = nodesMap[generateNodeKey(n1)];\r\n    }\r\n\r\n    if (!(n2 instanceof GraphNode)) {\r\n      n2 = nodesMap[generateNodeKey(n2)];\r\n    }\r\n\r\n    if (!n1 || !n2) {\r\n      return;\r\n    }\r\n\r\n    var key = n1.id + '-' + n2.id;\r\n    var edge = new GraphEdge(n1, n2, dataIndex);\r\n    edge.hostGraph = this;\r\n\r\n    if (this._directed) {\r\n      n1.outEdges.push(edge);\r\n      n2.inEdges.push(edge);\r\n    }\r\n\r\n    n1.edges.push(edge);\r\n\r\n    if (n1 !== n2) {\r\n      n2.edges.push(edge);\r\n    }\r\n\r\n    this.edges.push(edge);\r\n    edgesMap[key] = edge;\r\n    return edge;\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get edge by data index\r\n   */\r\n\r\n  Graph.prototype.getEdgeByIndex = function (dataIndex) {\r\n    var rawIdx = this.edgeData.getRawIndex(dataIndex);\r\n    return this.edges[rawIdx];\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Get edge by two linked nodes\r\n   */\r\n\r\n  Graph.prototype.getEdge = function (n1, n2) {\r\n    if (n1 instanceof GraphNode) {\r\n      n1 = n1.id;\r\n    }\r\n\r\n    if (n2 instanceof GraphNode) {\r\n      n2 = n2.id;\r\n    }\r\n\r\n    var edgesMap = this._edgesMap;\r\n\r\n    if (this._directed) {\r\n      return edgesMap[n1 + '-' + n2];\r\n    } else {\r\n      return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Iterate all nodes\r\n   */\r\n\r\n  Graph.prototype.eachNode = function (cb, context) {\r\n    var nodes = this.nodes;\r\n    var len = nodes.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (nodes[i].dataIndex >= 0) {\r\n        cb.call(context, nodes[i], i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Iterate all edges\r\n   */\r\n\r\n  Graph.prototype.eachEdge = function (cb, context) {\r\n    var edges = this.edges;\r\n    var len = edges.length;\r\n\r\n    for (var i = 0; i < len; i++) {\r\n      if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\r\n        cb.call(context, edges[i], i);\r\n      }\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * Breadth first traverse\r\n   * Return true to stop traversing\r\n   */\r\n\r\n  Graph.prototype.breadthFirstTraverse = function (cb, startNode, direction, context) {\r\n    if (!(startNode instanceof GraphNode)) {\r\n      startNode = this._nodesMap[generateNodeKey(startNode)];\r\n    }\r\n\r\n    if (!startNode) {\r\n      return;\r\n    }\r\n\r\n    var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\r\n\r\n    for (var i = 0; i < this.nodes.length; i++) {\r\n      this.nodes[i].__visited = false;\r\n    }\r\n\r\n    if (cb.call(context, startNode, null)) {\r\n      return;\r\n    }\r\n\r\n    var queue = [startNode];\r\n\r\n    while (queue.length) {\r\n      var currentNode = queue.shift();\r\n      var edges = currentNode[edgeType];\r\n\r\n      for (var i = 0; i < edges.length; i++) {\r\n        var e = edges[i];\r\n        var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\r\n\r\n        if (!otherNode.__visited) {\r\n          if (cb.call(context, otherNode, currentNode)) {\r\n            // Stop traversing\r\n            return;\r\n          }\r\n\r\n          queue.push(otherNode);\r\n          otherNode.__visited = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  ; // TODO\r\n  // depthFirstTraverse(\r\n  //     cb, startNode, direction, context\r\n  // ) {\r\n  // };\r\n  // Filter update\r\n\r\n  Graph.prototype.update = function () {\r\n    var data = this.data;\r\n    var edgeData = this.edgeData;\r\n    var nodes = this.nodes;\r\n    var edges = this.edges;\r\n\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n      nodes[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = data.count(); i < len; i++) {\r\n      nodes[data.getRawIndex(i)].dataIndex = i;\r\n    }\r\n\r\n    edgeData.filterSelf(function (idx) {\r\n      var edge = edges[edgeData.getRawIndex(idx)];\r\n      return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\r\n    }); // Update edge\r\n\r\n    for (var i = 0, len = edges.length; i < len; i++) {\r\n      edges[i].dataIndex = -1;\r\n    }\r\n\r\n    for (var i = 0, len = edgeData.count(); i < len; i++) {\r\n      edges[edgeData.getRawIndex(i)].dataIndex = i;\r\n    }\r\n  };\r\n\r\n  ;\r\n  /**\r\n   * @return {module:echarts/data/Graph}\r\n   */\r\n\r\n  Graph.prototype.clone = function () {\r\n    var graph = new Graph(this._directed);\r\n    var nodes = this.nodes;\r\n    var edges = this.edges;\r\n\r\n    for (var i = 0; i < nodes.length; i++) {\r\n      graph.addNode(nodes[i].id, nodes[i].dataIndex);\r\n    }\r\n\r\n    for (var i = 0; i < edges.length; i++) {\r\n      var e = edges[i];\r\n      graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\r\n    }\r\n\r\n    return graph;\r\n  };\r\n\r\n  ;\r\n  return Graph;\r\n}();\r\n\r\nvar GraphNode =\r\n/** @class */\r\nfunction () {\r\n  function GraphNode(id, dataIndex) {\r\n    this.inEdges = [];\r\n    this.outEdges = [];\r\n    this.edges = [];\r\n    this.dataIndex = -1;\r\n    this.id = id == null ? '' : id;\r\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n  }\r\n  /**\r\n   * @return {number}\r\n   */\r\n\r\n\r\n  GraphNode.prototype.degree = function () {\r\n    return this.edges.length;\r\n  };\r\n  /**\r\n   * @return {number}\r\n   */\r\n\r\n\r\n  GraphNode.prototype.inDegree = function () {\r\n    return this.inEdges.length;\r\n  };\r\n  /**\r\n  * @return {number}\r\n  */\r\n\r\n\r\n  GraphNode.prototype.outDegree = function () {\r\n    return this.outEdges.length;\r\n  };\r\n\r\n  GraphNode.prototype.getModel = function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var graph = this.hostGraph;\r\n    var itemModel = graph.data.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  };\r\n\r\n  GraphNode.prototype.getAdjacentDataIndices = function () {\r\n    var dataIndices = {\r\n      edge: [],\r\n      node: []\r\n    };\r\n\r\n    for (var i = 0; i < this.edges.length; i++) {\r\n      var adjacentEdge = this.edges[i];\r\n\r\n      if (adjacentEdge.dataIndex < 0) {\r\n        continue;\r\n      }\r\n\r\n      dataIndices.edge.push(adjacentEdge.dataIndex);\r\n      dataIndices.node.push(adjacentEdge.node1.dataIndex, adjacentEdge.node2.dataIndex);\r\n    }\r\n\r\n    return dataIndices;\r\n  };\r\n\r\n  return GraphNode;\r\n}();\r\n\r\nvar GraphEdge =\r\n/** @class */\r\nfunction () {\r\n  function GraphEdge(n1, n2, dataIndex) {\r\n    this.dataIndex = -1;\r\n    this.node1 = n1;\r\n    this.node2 = n2;\r\n    this.dataIndex = dataIndex == null ? -1 : dataIndex;\r\n  } // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\r\n\r\n  GraphEdge.prototype.getModel = function (path) {\r\n    if (this.dataIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    var graph = this.hostGraph;\r\n    var itemModel = graph.edgeData.getItemModel(this.dataIndex);\r\n    return itemModel.getModel(path);\r\n  };\r\n\r\n  GraphEdge.prototype.getAdjacentDataIndices = function () {\r\n    return {\r\n      edge: [this.dataIndex],\r\n      node: [this.node1.dataIndex, this.node2.dataIndex]\r\n    };\r\n  };\r\n\r\n  return GraphEdge;\r\n}();\r\n\r\nfunction createGraphDataProxyMixin(hostName, dataName) {\r\n  return {\r\n    /**\r\n     * @param Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\r\n     */\r\n    getValue: function (dimension) {\r\n      var data = this[hostName][dataName];\r\n      return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\r\n    },\r\n    // TODO: TYPE stricter type.\r\n    setVisual: function (key, value) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\r\n    },\r\n    getVisual: function (key) {\r\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key);\r\n    },\r\n    setLayout: function (layout, merge) {\r\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\r\n    },\r\n    getLayout: function () {\r\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\r\n    },\r\n    getGraphicEl: function () {\r\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\r\n    },\r\n    getRawIndex: function () {\r\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\r\n    }\r\n  };\r\n}\r\n\r\n;\r\n;\r\n;\r\nzrUtil.mixin(GraphNode, createGraphDataProxyMixin('hostGraph', 'data'));\r\nzrUtil.mixin(GraphEdge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\r\nexport default Graph;\r\nexport { GraphNode, GraphEdge };"]},"metadata":{},"sourceType":"module"}