{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic.js';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var PI2 = Math.PI * 2;\n    var lessThanCircle = clockwise ? endAngle - startAngle < PI2 : startAngle - endAngle < PI2;\n\n    if (!lessThanCircle) {\n      // Normalize angles\n      startAngle = endAngle - (clockwise ? PI2 : -PI2);\n    }\n\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + cx, unitStartY * r0 + cy);\n      ctx.arc(unitStartX * rCenter + cx, unitStartY * rCenter + cy, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    } else {\n      ctx.moveTo(unitStartX * r + cx, unitStartY * r + cy);\n    }\n\n    ctx.arc(cx, cy, r, startAngle, endAngle, !clockwise);\n    ctx.arc(unitEndX * rCenter + cx, unitEndY * rCenter + cy, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(cx, cy, r0, endAngle, startAngle, clockwise);\n    } // ctx.closePath();\n\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/ElectronicMallVue/node_modules/echarts/lib/util/shape/sausage.js"],"names":["__extends","Path","SausageShape","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","_super","opts","_this","call","type","prototype","getDefaultShape","buildPath","ctx","shape","max","dr","rCenter","PI2","lessThanCircle","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","moveTo","arc"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,eAArB;AACA;AACA;AACA;;AAEA,IAAIC,YAAY;AAChB;AACA,YAAY;AACV,WAASA,YAAT,GAAwB;AACtB,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,EAAL,GAAU,CAAV;AACA,SAAKC,CAAL,GAAS,CAAT;AACA,SAAKC,UAAL,GAAkB,CAAlB;AACA,SAAKC,QAAL,GAAgBC,IAAI,CAACC,EAAL,GAAU,CAA1B;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACD;;AAED,SAAOT,YAAP;AACD,CAZD,EAFA;;AAgBA,IAAIU,WAAW;AACf;AACA,UAAUC,MAAV,EAAkB;AAChBb,EAAAA,SAAS,CAACY,WAAD,EAAcC,MAAd,CAAT;;AAEA,WAASD,WAAT,CAAqBE,IAArB,EAA2B;AACzB,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,IAAlB,KAA2B,IAAvC;;AAEAC,IAAAA,KAAK,CAACE,IAAN,GAAa,SAAb;AACA,WAAOF,KAAP;AACD;;AAEDH,EAAAA,WAAW,CAACM,SAAZ,CAAsBC,eAAtB,GAAwC,YAAY;AAClD,WAAO,IAAIjB,YAAJ,EAAP;AACD,GAFD;;AAIAU,EAAAA,WAAW,CAACM,SAAZ,CAAsBE,SAAtB,GAAkC,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACtD,QAAInB,EAAE,GAAGmB,KAAK,CAACnB,EAAf;AACA,QAAIC,EAAE,GAAGkB,KAAK,CAAClB,EAAf;AACA,QAAIC,EAAE,GAAGI,IAAI,CAACc,GAAL,CAASD,KAAK,CAACjB,EAAN,IAAY,CAArB,EAAwB,CAAxB,CAAT;AACA,QAAIC,CAAC,GAAGG,IAAI,CAACc,GAAL,CAASD,KAAK,CAAChB,CAAf,EAAkB,CAAlB,CAAR;AACA,QAAIkB,EAAE,GAAG,CAAClB,CAAC,GAAGD,EAAL,IAAW,GAApB;AACA,QAAIoB,OAAO,GAAGpB,EAAE,GAAGmB,EAAnB;AACA,QAAIjB,UAAU,GAAGe,KAAK,CAACf,UAAvB;AACA,QAAIC,QAAQ,GAAGc,KAAK,CAACd,QAArB;AACA,QAAIG,SAAS,GAAGW,KAAK,CAACX,SAAtB;AACA,QAAIe,GAAG,GAAGjB,IAAI,CAACC,EAAL,GAAU,CAApB;AACA,QAAIiB,cAAc,GAAGhB,SAAS,GAAGH,QAAQ,GAAGD,UAAX,GAAwBmB,GAA3B,GAAiCnB,UAAU,GAAGC,QAAb,GAAwBkB,GAAvF;;AAEA,QAAI,CAACC,cAAL,EAAqB;AACnB;AACApB,MAAAA,UAAU,GAAGC,QAAQ,IAAIG,SAAS,GAAGe,GAAH,GAAS,CAACA,GAAvB,CAArB;AACD;;AAED,QAAIE,UAAU,GAAGnB,IAAI,CAACoB,GAAL,CAAStB,UAAT,CAAjB;AACA,QAAIuB,UAAU,GAAGrB,IAAI,CAACsB,GAAL,CAASxB,UAAT,CAAjB;AACA,QAAIyB,QAAQ,GAAGvB,IAAI,CAACoB,GAAL,CAASrB,QAAT,CAAf;AACA,QAAIyB,QAAQ,GAAGxB,IAAI,CAACsB,GAAL,CAASvB,QAAT,CAAf;;AAEA,QAAImB,cAAJ,EAAoB;AAClBN,MAAAA,GAAG,CAACa,MAAJ,CAAWN,UAAU,GAAGvB,EAAb,GAAkBF,EAA7B,EAAiC2B,UAAU,GAAGzB,EAAb,GAAkBD,EAAnD;AACAiB,MAAAA,GAAG,CAACc,GAAJ,CAAQP,UAAU,GAAGH,OAAb,GAAuBtB,EAA/B,EAAmC2B,UAAU,GAAGL,OAAb,GAAuBrB,EAA1D,EAA8DoB,EAA9D,EAAkE,CAACf,IAAI,CAACC,EAAN,GAAWH,UAA7E,EAAyFA,UAAzF,EAAqG,CAACI,SAAtG;AACD,KAHD,MAGO;AACLU,MAAAA,GAAG,CAACa,MAAJ,CAAWN,UAAU,GAAGtB,CAAb,GAAiBH,EAA5B,EAAgC2B,UAAU,GAAGxB,CAAb,GAAiBF,EAAjD;AACD;;AAEDiB,IAAAA,GAAG,CAACc,GAAJ,CAAQhC,EAAR,EAAYC,EAAZ,EAAgBE,CAAhB,EAAmBC,UAAnB,EAA+BC,QAA/B,EAAyC,CAACG,SAA1C;AACAU,IAAAA,GAAG,CAACc,GAAJ,CAAQH,QAAQ,GAAGP,OAAX,GAAqBtB,EAA7B,EAAiC8B,QAAQ,GAAGR,OAAX,GAAqBrB,EAAtD,EAA0DoB,EAA1D,EAA8DhB,QAAQ,GAAGC,IAAI,CAACC,EAAL,GAAU,CAAnF,EAAsFF,QAAQ,GAAGC,IAAI,CAACC,EAAtG,EAA0G,CAACC,SAA3G;;AAEA,QAAIN,EAAE,KAAK,CAAX,EAAc;AACZgB,MAAAA,GAAG,CAACc,GAAJ,CAAQhC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB,EAAoBG,QAApB,EAA8BD,UAA9B,EAA0CI,SAA1C;AACD,KAnCqD,CAmCpD;;AAEH,GArCD;;AAuCA,SAAOC,WAAP;AACD,CAtDD,CAsDEX,IAtDF,CAFA;;AA0DA,eAAeW,WAAf","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic.js';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var PI2 = Math.PI * 2;\n    var lessThanCircle = clockwise ? endAngle - startAngle < PI2 : startAngle - endAngle < PI2;\n\n    if (!lessThanCircle) {\n      // Normalize angles\n      startAngle = endAngle - (clockwise ? PI2 : -PI2);\n    }\n\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + cx, unitStartY * r0 + cy);\n      ctx.arc(unitStartX * rCenter + cx, unitStartY * rCenter + cy, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    } else {\n      ctx.moveTo(unitStartX * r + cx, unitStartY * r + cy);\n    }\n\n    ctx.arc(cx, cy, r, startAngle, endAngle, !clockwise);\n    ctx.arc(unitEndX * rCenter + cx, unitEndY * rCenter + cy, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(cx, cy, r0, endAngle, startAngle, clockwise);\n    } // ctx.closePath();\n\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;"]},"metadata":{},"sourceType":"module"}