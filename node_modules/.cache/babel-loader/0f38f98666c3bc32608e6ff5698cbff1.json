{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport prepareBoxplotData from './prepareBoxplotData.js';\nimport { throwError, makePrintable } from '../../util/log.js';\nimport { SOURCE_FORMAT_ARRAY_ROWS } from '../../util/types.js';\nexport var boxplotTransform = {\n  type: 'echarts:boxplot',\n  transform: function transform(params) {\n    var upstream = params.upstream;\n\n    if (upstream.sourceFormat !== SOURCE_FORMAT_ARRAY_ROWS) {\n      var errMsg = '';\n\n      if (process.env.NODE_ENV !== 'production') {\n        errMsg = makePrintable('source data is not applicable for this boxplot transform. Expect number[][].');\n      }\n\n      throwError(errMsg);\n    }\n\n    var result = prepareBoxplotData(upstream.getRawData(), params.config);\n    return [{\n      dimensions: ['ItemName', 'Low', 'Q1', 'Q2', 'Q3', 'High'],\n      data: result.boxData\n    }, {\n      data: result.outliers\n    }];\n  }\n};","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/boxplot/boxplotTransform.js"],"names":["prepareBoxplotData","throwError","makePrintable","SOURCE_FORMAT_ARRAY_ROWS","boxplotTransform","type","transform","params","upstream","sourceFormat","errMsg","process","env","NODE_ENV","result","getRawData","config","dimensions","data","boxData","outliers"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,kBAAP,MAA+B,yBAA/B;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mBAA1C;AACA,SAASC,wBAAT,QAAyC,qBAAzC;AACA,OAAO,IAAIC,gBAAgB,GAAG;AAC5BC,EAAAA,IAAI,EAAE,iBADsB;AAE5BC,EAAAA,SAAS,EAAE,SAASA,SAAT,CAAmBC,MAAnB,EAA2B;AACpC,QAAIC,QAAQ,GAAGD,MAAM,CAACC,QAAtB;;AAEA,QAAIA,QAAQ,CAACC,YAAT,KAA0BN,wBAA9B,EAAwD;AACtD,UAAIO,MAAM,GAAG,EAAb;;AAEA,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCH,QAAAA,MAAM,GAAGR,aAAa,CAAC,8EAAD,CAAtB;AACD;;AAEDD,MAAAA,UAAU,CAACS,MAAD,CAAV;AACD;;AAED,QAAII,MAAM,GAAGd,kBAAkB,CAACQ,QAAQ,CAACO,UAAT,EAAD,EAAwBR,MAAM,CAACS,MAA/B,CAA/B;AACA,WAAO,CAAC;AACNC,MAAAA,UAAU,EAAE,CAAC,UAAD,EAAa,KAAb,EAAoB,IAApB,EAA0B,IAA1B,EAAgC,IAAhC,EAAsC,MAAtC,CADN;AAENC,MAAAA,IAAI,EAAEJ,MAAM,CAACK;AAFP,KAAD,EAGJ;AACDD,MAAAA,IAAI,EAAEJ,MAAM,CAACM;AADZ,KAHI,CAAP;AAMD;AAtB2B,CAAvB","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport prepareBoxplotData from './prepareBoxplotData.js';\r\nimport { throwError, makePrintable } from '../../util/log.js';\r\nimport { SOURCE_FORMAT_ARRAY_ROWS } from '../../util/types.js';\r\nexport var boxplotTransform = {\r\n  type: 'echarts:boxplot',\r\n  transform: function transform(params) {\r\n    var upstream = params.upstream;\r\n\r\n    if (upstream.sourceFormat !== SOURCE_FORMAT_ARRAY_ROWS) {\r\n      var errMsg = '';\r\n\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        errMsg = makePrintable('source data is not applicable for this boxplot transform. Expect number[][].');\r\n      }\r\n\r\n      throwError(errMsg);\r\n    }\r\n\r\n    var result = prepareBoxplotData(upstream.getRawData(), params.config);\r\n    return [{\r\n      dimensions: ['ItemName', 'Low', 'Q1', 'Q2', 'Q3', 'High'],\r\n      data: result.boxData\r\n    }, {\r\n      data: result.outliers\r\n    }];\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}