{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getCenterCoord(view, point) {\n  // Use projected coord as center because it's linear.\n  return view.pointToProjected ? view.pointToProjected(point) : view.pointToData(point);\n}\n\nexport function updateCenterAndZoom(view, payload, zoomLimit, api) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.projectedToPoint ? view.projectedToPoint(center) : view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    view.setCenter(getCenterCoord(view, point), api);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scaleX *= zoom;\n    view.scaleY *= zoom;\n    var fixX = (payload.originX - view.x) * (zoom - 1);\n    var fixY = (payload.originY - view.y) * (zoom - 1);\n    view.x -= fixX;\n    view.y -= fixY;\n    view.updateTransform(); // Get the new center\n\n    view.setCenter(getCenterCoord(view, point), api);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/ElectronicMallVue/node_modules/echarts/lib/action/roamHelper.js"],"names":["getCenterCoord","view","point","pointToProjected","pointToData","updateCenterAndZoom","payload","zoomLimit","api","previousZoom","getZoom","center","getCenter","zoom","projectedToPoint","dataToPoint","dx","dy","setCenter","zoomMin","min","zoomMax","max","Infinity","Math","scaleX","scaleY","fixX","originX","x","fixY","originY","y","updateTransform","setZoom"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,KAA9B,EAAqC;AACnC;AACA,SAAOD,IAAI,CAACE,gBAAL,GAAwBF,IAAI,CAACE,gBAAL,CAAsBD,KAAtB,CAAxB,GAAuDD,IAAI,CAACG,WAAL,CAAiBF,KAAjB,CAA9D;AACD;;AAED,OAAO,SAASG,mBAAT,CAA6BJ,IAA7B,EAAmCK,OAAnC,EAA4CC,SAA5C,EAAuDC,GAAvD,EAA4D;AACjE,MAAIC,YAAY,GAAGR,IAAI,CAACS,OAAL,EAAnB;AACA,MAAIC,MAAM,GAAGV,IAAI,CAACW,SAAL,EAAb;AACA,MAAIC,IAAI,GAAGP,OAAO,CAACO,IAAnB;AACA,MAAIX,KAAK,GAAGD,IAAI,CAACa,gBAAL,GAAwBb,IAAI,CAACa,gBAAL,CAAsBH,MAAtB,CAAxB,GAAwDV,IAAI,CAACc,WAAL,CAAiBJ,MAAjB,CAApE;;AAEA,MAAIL,OAAO,CAACU,EAAR,IAAc,IAAd,IAAsBV,OAAO,CAACW,EAAR,IAAc,IAAxC,EAA8C;AAC5Cf,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAYI,OAAO,CAACU,EAApB;AACAd,IAAAA,KAAK,CAAC,CAAD,CAAL,IAAYI,OAAO,CAACW,EAApB;AACAhB,IAAAA,IAAI,CAACiB,SAAL,CAAelB,cAAc,CAACC,IAAD,EAAOC,KAAP,CAA7B,EAA4CM,GAA5C;AACD;;AAED,MAAIK,IAAI,IAAI,IAAZ,EAAkB;AAChB,QAAIN,SAAJ,EAAe;AACb,UAAIY,OAAO,GAAGZ,SAAS,CAACa,GAAV,IAAiB,CAA/B;AACA,UAAIC,OAAO,GAAGd,SAAS,CAACe,GAAV,IAAiBC,QAA/B;AACAV,MAAAA,IAAI,GAAGW,IAAI,CAACF,GAAL,CAASE,IAAI,CAACJ,GAAL,CAASX,YAAY,GAAGI,IAAxB,EAA8BQ,OAA9B,CAAT,EAAiDF,OAAjD,IAA4DV,YAAnE;AACD,KALe,CAKd;;;AAGFR,IAAAA,IAAI,CAACwB,MAAL,IAAeZ,IAAf;AACAZ,IAAAA,IAAI,CAACyB,MAAL,IAAeb,IAAf;AACA,QAAIc,IAAI,GAAG,CAACrB,OAAO,CAACsB,OAAR,GAAkB3B,IAAI,CAAC4B,CAAxB,KAA8BhB,IAAI,GAAG,CAArC,CAAX;AACA,QAAIiB,IAAI,GAAG,CAACxB,OAAO,CAACyB,OAAR,GAAkB9B,IAAI,CAAC+B,CAAxB,KAA8BnB,IAAI,GAAG,CAArC,CAAX;AACAZ,IAAAA,IAAI,CAAC4B,CAAL,IAAUF,IAAV;AACA1B,IAAAA,IAAI,CAAC+B,CAAL,IAAUF,IAAV;AACA7B,IAAAA,IAAI,CAACgC,eAAL,GAdgB,CAcQ;;AAExBhC,IAAAA,IAAI,CAACiB,SAAL,CAAelB,cAAc,CAACC,IAAD,EAAOC,KAAP,CAA7B,EAA4CM,GAA5C;AACAP,IAAAA,IAAI,CAACiC,OAAL,CAAarB,IAAI,GAAGJ,YAApB;AACD;;AAED,SAAO;AACLE,IAAAA,MAAM,EAAEV,IAAI,CAACW,SAAL,EADH;AAELC,IAAAA,IAAI,EAAEZ,IAAI,CAACS,OAAL;AAFD,GAAP;AAID","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction getCenterCoord(view, point) {\n  // Use projected coord as center because it's linear.\n  return view.pointToProjected ? view.pointToProjected(point) : view.pointToData(point);\n}\n\nexport function updateCenterAndZoom(view, payload, zoomLimit, api) {\n  var previousZoom = view.getZoom();\n  var center = view.getCenter();\n  var zoom = payload.zoom;\n  var point = view.projectedToPoint ? view.projectedToPoint(center) : view.dataToPoint(center);\n\n  if (payload.dx != null && payload.dy != null) {\n    point[0] -= payload.dx;\n    point[1] -= payload.dy;\n    view.setCenter(getCenterCoord(view, point), api);\n  }\n\n  if (zoom != null) {\n    if (zoomLimit) {\n      var zoomMin = zoomLimit.min || 0;\n      var zoomMax = zoomLimit.max || Infinity;\n      zoom = Math.max(Math.min(previousZoom * zoom, zoomMax), zoomMin) / previousZoom;\n    } // Zoom on given point(originX, originY)\n\n\n    view.scaleX *= zoom;\n    view.scaleY *= zoom;\n    var fixX = (payload.originX - view.x) * (zoom - 1);\n    var fixY = (payload.originY - view.y) * (zoom - 1);\n    view.x -= fixX;\n    view.y -= fixY;\n    view.updateTransform(); // Get the new center\n\n    view.setCenter(getCenterCoord(view, point), api);\n    view.setZoom(zoom * previousZoom);\n  }\n\n  return {\n    center: view.getCenter(),\n    zoom: view.getZoom()\n  };\n}"]},"metadata":{},"sourceType":"module"}