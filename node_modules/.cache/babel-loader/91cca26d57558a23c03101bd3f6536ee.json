{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*!\r\n* ZRender, a high performance 2d drawing library.\r\n*\r\n* Copyright (c) 2013, Baidu Inc.\r\n* All rights reserved.\r\n*\r\n* LICENSE\r\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n*/\nimport env from './core/env.js';\nimport * as zrUtil from './core/util.js';\nimport Handler from './Handler.js';\nimport Storage from './Storage.js';\nimport Animation, { getTime } from './animation/Animation.js';\nimport HandlerProxy from './dom/HandlerProxy.js';\nimport { lum } from './tool/color.js';\nimport { DARK_MODE_THRESHOLD } from './config.js';\nimport Group from './graphic/Group.js';\nvar painterCtors = {};\nvar instances = {};\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n\nfunction isDarkMode(backgroundColor) {\n  if (!backgroundColor) {\n    return false;\n  }\n\n  if (typeof backgroundColor === 'string') {\n    return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\n  } else if (backgroundColor.colorStops) {\n    var colorStops = backgroundColor.colorStops;\n    var totalLum = 0;\n    var len = colorStops.length;\n\n    for (var i = 0; i < len; i++) {\n      totalLum += lum(colorStops[i].color, 1);\n    }\n\n    totalLum /= len;\n    return totalLum < DARK_MODE_THRESHOLD;\n  }\n\n  return false;\n}\n\nvar ZRender = function () {\n  function ZRender(id, dom, opts) {\n    var _this = this;\n\n    this._sleepAfterStill = 10;\n    this._stillFrameAccum = 0;\n    this._needsRefresh = true;\n    this._needsRefreshHover = true;\n    this._darkMode = false;\n    opts = opts || {};\n    this.dom = dom;\n    this.id = id;\n    var storage = new Storage();\n    var rendererType = opts.renderer || 'canvas';\n\n    if (!painterCtors[rendererType]) {\n      rendererType = zrUtil.keys(painterCtors)[0];\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!painterCtors[rendererType]) {\n        throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\n      }\n    }\n\n    opts.useDirtyRect = opts.useDirtyRect == null ? false : opts.useDirtyRect;\n    var painter = new painterCtors[rendererType](dom, storage, opts, id);\n    var ssrMode = opts.ssr || painter.ssrOnly;\n    this.storage = storage;\n    this.painter = painter;\n    var handerProxy = !env.node && !env.worker && !ssrMode ? new HandlerProxy(painter.getViewportRoot(), painter.root) : null;\n    this.handler = new Handler(storage, painter, handerProxy, painter.root);\n    this.animation = new Animation({\n      stage: {\n        update: ssrMode ? null : function () {\n          return _this._flush(true);\n        }\n      }\n    });\n\n    if (!ssrMode) {\n      this.animation.start();\n    }\n  }\n\n  ZRender.prototype.add = function (el) {\n    if (!el) {\n      return;\n    }\n\n    this.storage.addRoot(el);\n    el.addSelfToZr(this);\n    this.refresh();\n  };\n\n  ZRender.prototype.remove = function (el) {\n    if (!el) {\n      return;\n    }\n\n    this.storage.delRoot(el);\n    el.removeSelfFromZr(this);\n    this.refresh();\n  };\n\n  ZRender.prototype.configLayer = function (zLevel, config) {\n    if (this.painter.configLayer) {\n      this.painter.configLayer(zLevel, config);\n    }\n\n    this.refresh();\n  };\n\n  ZRender.prototype.setBackgroundColor = function (backgroundColor) {\n    if (this.painter.setBackgroundColor) {\n      this.painter.setBackgroundColor(backgroundColor);\n    }\n\n    this.refresh();\n    this._backgroundColor = backgroundColor;\n    this._darkMode = isDarkMode(backgroundColor);\n  };\n\n  ZRender.prototype.getBackgroundColor = function () {\n    return this._backgroundColor;\n  };\n\n  ZRender.prototype.setDarkMode = function (darkMode) {\n    this._darkMode = darkMode;\n  };\n\n  ZRender.prototype.isDarkMode = function () {\n    return this._darkMode;\n  };\n\n  ZRender.prototype.refreshImmediately = function (fromInside) {\n    if (!fromInside) {\n      this.animation.update(true);\n    }\n\n    this._needsRefresh = false;\n    this.painter.refresh();\n    this._needsRefresh = false;\n  };\n\n  ZRender.prototype.refresh = function () {\n    this._needsRefresh = true;\n    this.animation.start();\n  };\n\n  ZRender.prototype.flush = function () {\n    this._flush(false);\n  };\n\n  ZRender.prototype._flush = function (fromInside) {\n    var triggerRendered;\n    var start = getTime();\n\n    if (this._needsRefresh) {\n      triggerRendered = true;\n      this.refreshImmediately(fromInside);\n    }\n\n    if (this._needsRefreshHover) {\n      triggerRendered = true;\n      this.refreshHoverImmediately();\n    }\n\n    var end = getTime();\n\n    if (triggerRendered) {\n      this._stillFrameAccum = 0;\n      this.trigger('rendered', {\n        elapsedTime: end - start\n      });\n    } else if (this._sleepAfterStill > 0) {\n      this._stillFrameAccum++;\n\n      if (this._stillFrameAccum > this._sleepAfterStill) {\n        this.animation.stop();\n      }\n    }\n  };\n\n  ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\n    this._sleepAfterStill = stillFramesCount;\n  };\n\n  ZRender.prototype.wakeUp = function () {\n    this.animation.start();\n    this._stillFrameAccum = 0;\n  };\n\n  ZRender.prototype.refreshHover = function () {\n    this._needsRefreshHover = true;\n  };\n\n  ZRender.prototype.refreshHoverImmediately = function () {\n    this._needsRefreshHover = false;\n\n    if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\n      this.painter.refreshHover();\n    }\n  };\n\n  ZRender.prototype.resize = function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  };\n\n  ZRender.prototype.clearAnimation = function () {\n    this.animation.clear();\n  };\n\n  ZRender.prototype.getWidth = function () {\n    return this.painter.getWidth();\n  };\n\n  ZRender.prototype.getHeight = function () {\n    return this.painter.getHeight();\n  };\n\n  ZRender.prototype.setCursorStyle = function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  };\n\n  ZRender.prototype.findHover = function (x, y) {\n    return this.handler.findHover(x, y);\n  };\n\n  ZRender.prototype.on = function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n    return this;\n  };\n\n  ZRender.prototype.off = function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  };\n\n  ZRender.prototype.trigger = function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  };\n\n  ZRender.prototype.clear = function () {\n    var roots = this.storage.getRoots();\n\n    for (var i = 0; i < roots.length; i++) {\n      if (roots[i] instanceof Group) {\n        roots[i].removeSelfFromZr(this);\n      }\n    }\n\n    this.storage.delAllRoots();\n    this.painter.clear();\n  };\n\n  ZRender.prototype.dispose = function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  };\n\n  return ZRender;\n}();\n\nexport function init(dom, opts) {\n  var zr = new ZRender(zrUtil.guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\nexport function dispose(zr) {\n  zr.dispose();\n}\nexport function disposeAll() {\n  for (var key in instances) {\n    if (instances.hasOwnProperty(key)) {\n      instances[key].dispose();\n    }\n  }\n\n  instances = {};\n}\nexport function getInstance(id) {\n  return instances[id];\n}\nexport function registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\nexport var version = '5.3.0';\n;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/zrender/lib/zrender.js"],"names":["env","zrUtil","Handler","Storage","Animation","getTime","HandlerProxy","lum","DARK_MODE_THRESHOLD","Group","painterCtors","instances","delInstance","id","isDarkMode","backgroundColor","colorStops","totalLum","len","length","i","color","ZRender","dom","opts","_this","_sleepAfterStill","_stillFrameAccum","_needsRefresh","_needsRefreshHover","_darkMode","storage","rendererType","renderer","keys","process","NODE_ENV","Error","useDirtyRect","painter","ssrMode","ssr","ssrOnly","handerProxy","node","worker","getViewportRoot","root","handler","animation","stage","update","_flush","start","prototype","add","el","addRoot","addSelfToZr","refresh","remove","delRoot","removeSelfFromZr","configLayer","zLevel","config","setBackgroundColor","_backgroundColor","getBackgroundColor","setDarkMode","darkMode","refreshImmediately","fromInside","flush","triggerRendered","refreshHoverImmediately","end","trigger","elapsedTime","stop","setSleepAfterStill","stillFramesCount","wakeUp","refreshHover","getType","resize","width","height","clearAnimation","clear","getWidth","getHeight","setCursorStyle","cursorStyle","findHover","x","y","on","eventName","eventHandler","context","off","event","roots","getRoots","delAllRoots","dispose","init","zr","guid","disposeAll","key","hasOwnProperty","getInstance","registerPainter","name","Ctor","version"],"mappings":"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","sourcesContent":["/*!\r\n* ZRender, a high performance 2d drawing library.\r\n*\r\n* Copyright (c) 2013, Baidu Inc.\r\n* All rights reserved.\r\n*\r\n* LICENSE\r\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\r\n*/\r\nimport env from './core/env.js';\r\nimport * as zrUtil from './core/util.js';\r\nimport Handler from './Handler.js';\r\nimport Storage from './Storage.js';\r\nimport Animation, { getTime } from './animation/Animation.js';\r\nimport HandlerProxy from './dom/HandlerProxy.js';\r\nimport { lum } from './tool/color.js';\r\nimport { DARK_MODE_THRESHOLD } from './config.js';\r\nimport Group from './graphic/Group.js';\r\nvar painterCtors = {};\r\nvar instances = {};\r\nfunction delInstance(id) {\r\n    delete instances[id];\r\n}\r\nfunction isDarkMode(backgroundColor) {\r\n    if (!backgroundColor) {\r\n        return false;\r\n    }\r\n    if (typeof backgroundColor === 'string') {\r\n        return lum(backgroundColor, 1) < DARK_MODE_THRESHOLD;\r\n    }\r\n    else if (backgroundColor.colorStops) {\r\n        var colorStops = backgroundColor.colorStops;\r\n        var totalLum = 0;\r\n        var len = colorStops.length;\r\n        for (var i = 0; i < len; i++) {\r\n            totalLum += lum(colorStops[i].color, 1);\r\n        }\r\n        totalLum /= len;\r\n        return totalLum < DARK_MODE_THRESHOLD;\r\n    }\r\n    return false;\r\n}\r\nvar ZRender = (function () {\r\n    function ZRender(id, dom, opts) {\r\n        var _this = this;\r\n        this._sleepAfterStill = 10;\r\n        this._stillFrameAccum = 0;\r\n        this._needsRefresh = true;\r\n        this._needsRefreshHover = true;\r\n        this._darkMode = false;\r\n        opts = opts || {};\r\n        this.dom = dom;\r\n        this.id = id;\r\n        var storage = new Storage();\r\n        var rendererType = opts.renderer || 'canvas';\r\n        if (!painterCtors[rendererType]) {\r\n            rendererType = zrUtil.keys(painterCtors)[0];\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!painterCtors[rendererType]) {\r\n                throw new Error(\"Renderer '\" + rendererType + \"' is not imported. Please import it first.\");\r\n            }\r\n        }\r\n        opts.useDirtyRect = opts.useDirtyRect == null\r\n            ? false\r\n            : opts.useDirtyRect;\r\n        var painter = new painterCtors[rendererType](dom, storage, opts, id);\r\n        var ssrMode = opts.ssr || painter.ssrOnly;\r\n        this.storage = storage;\r\n        this.painter = painter;\r\n        var handerProxy = (!env.node && !env.worker && !ssrMode)\r\n            ? new HandlerProxy(painter.getViewportRoot(), painter.root)\r\n            : null;\r\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\r\n        this.animation = new Animation({\r\n            stage: {\r\n                update: ssrMode ? null : function () { return _this._flush(true); }\r\n            }\r\n        });\r\n        if (!ssrMode) {\r\n            this.animation.start();\r\n        }\r\n    }\r\n    ZRender.prototype.add = function (el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        this.storage.addRoot(el);\r\n        el.addSelfToZr(this);\r\n        this.refresh();\r\n    };\r\n    ZRender.prototype.remove = function (el) {\r\n        if (!el) {\r\n            return;\r\n        }\r\n        this.storage.delRoot(el);\r\n        el.removeSelfFromZr(this);\r\n        this.refresh();\r\n    };\r\n    ZRender.prototype.configLayer = function (zLevel, config) {\r\n        if (this.painter.configLayer) {\r\n            this.painter.configLayer(zLevel, config);\r\n        }\r\n        this.refresh();\r\n    };\r\n    ZRender.prototype.setBackgroundColor = function (backgroundColor) {\r\n        if (this.painter.setBackgroundColor) {\r\n            this.painter.setBackgroundColor(backgroundColor);\r\n        }\r\n        this.refresh();\r\n        this._backgroundColor = backgroundColor;\r\n        this._darkMode = isDarkMode(backgroundColor);\r\n    };\r\n    ZRender.prototype.getBackgroundColor = function () {\r\n        return this._backgroundColor;\r\n    };\r\n    ZRender.prototype.setDarkMode = function (darkMode) {\r\n        this._darkMode = darkMode;\r\n    };\r\n    ZRender.prototype.isDarkMode = function () {\r\n        return this._darkMode;\r\n    };\r\n    ZRender.prototype.refreshImmediately = function (fromInside) {\r\n        if (!fromInside) {\r\n            this.animation.update(true);\r\n        }\r\n        this._needsRefresh = false;\r\n        this.painter.refresh();\r\n        this._needsRefresh = false;\r\n    };\r\n    ZRender.prototype.refresh = function () {\r\n        this._needsRefresh = true;\r\n        this.animation.start();\r\n    };\r\n    ZRender.prototype.flush = function () {\r\n        this._flush(false);\r\n    };\r\n    ZRender.prototype._flush = function (fromInside) {\r\n        var triggerRendered;\r\n        var start = getTime();\r\n        if (this._needsRefresh) {\r\n            triggerRendered = true;\r\n            this.refreshImmediately(fromInside);\r\n        }\r\n        if (this._needsRefreshHover) {\r\n            triggerRendered = true;\r\n            this.refreshHoverImmediately();\r\n        }\r\n        var end = getTime();\r\n        if (triggerRendered) {\r\n            this._stillFrameAccum = 0;\r\n            this.trigger('rendered', {\r\n                elapsedTime: end - start\r\n            });\r\n        }\r\n        else if (this._sleepAfterStill > 0) {\r\n            this._stillFrameAccum++;\r\n            if (this._stillFrameAccum > this._sleepAfterStill) {\r\n                this.animation.stop();\r\n            }\r\n        }\r\n    };\r\n    ZRender.prototype.setSleepAfterStill = function (stillFramesCount) {\r\n        this._sleepAfterStill = stillFramesCount;\r\n    };\r\n    ZRender.prototype.wakeUp = function () {\r\n        this.animation.start();\r\n        this._stillFrameAccum = 0;\r\n    };\r\n    ZRender.prototype.refreshHover = function () {\r\n        this._needsRefreshHover = true;\r\n    };\r\n    ZRender.prototype.refreshHoverImmediately = function () {\r\n        this._needsRefreshHover = false;\r\n        if (this.painter.refreshHover && this.painter.getType() === 'canvas') {\r\n            this.painter.refreshHover();\r\n        }\r\n    };\r\n    ZRender.prototype.resize = function (opts) {\r\n        opts = opts || {};\r\n        this.painter.resize(opts.width, opts.height);\r\n        this.handler.resize();\r\n    };\r\n    ZRender.prototype.clearAnimation = function () {\r\n        this.animation.clear();\r\n    };\r\n    ZRender.prototype.getWidth = function () {\r\n        return this.painter.getWidth();\r\n    };\r\n    ZRender.prototype.getHeight = function () {\r\n        return this.painter.getHeight();\r\n    };\r\n    ZRender.prototype.setCursorStyle = function (cursorStyle) {\r\n        this.handler.setCursorStyle(cursorStyle);\r\n    };\r\n    ZRender.prototype.findHover = function (x, y) {\r\n        return this.handler.findHover(x, y);\r\n    };\r\n    ZRender.prototype.on = function (eventName, eventHandler, context) {\r\n        this.handler.on(eventName, eventHandler, context);\r\n        return this;\r\n    };\r\n    ZRender.prototype.off = function (eventName, eventHandler) {\r\n        this.handler.off(eventName, eventHandler);\r\n    };\r\n    ZRender.prototype.trigger = function (eventName, event) {\r\n        this.handler.trigger(eventName, event);\r\n    };\r\n    ZRender.prototype.clear = function () {\r\n        var roots = this.storage.getRoots();\r\n        for (var i = 0; i < roots.length; i++) {\r\n            if (roots[i] instanceof Group) {\r\n                roots[i].removeSelfFromZr(this);\r\n            }\r\n        }\r\n        this.storage.delAllRoots();\r\n        this.painter.clear();\r\n    };\r\n    ZRender.prototype.dispose = function () {\r\n        this.animation.stop();\r\n        this.clear();\r\n        this.storage.dispose();\r\n        this.painter.dispose();\r\n        this.handler.dispose();\r\n        this.animation =\r\n            this.storage =\r\n                this.painter =\r\n                    this.handler = null;\r\n        delInstance(this.id);\r\n    };\r\n    return ZRender;\r\n}());\r\nexport function init(dom, opts) {\r\n    var zr = new ZRender(zrUtil.guid(), dom, opts);\r\n    instances[zr.id] = zr;\r\n    return zr;\r\n}\r\nexport function dispose(zr) {\r\n    zr.dispose();\r\n}\r\nexport function disposeAll() {\r\n    for (var key in instances) {\r\n        if (instances.hasOwnProperty(key)) {\r\n            instances[key].dispose();\r\n        }\r\n    }\r\n    instances = {};\r\n}\r\nexport function getInstance(id) {\r\n    return instances[id];\r\n}\r\nexport function registerPainter(name, Ctor) {\r\n    painterCtors[name] = Ctor;\r\n}\r\nexport var version = '5.3.0';\r\n;\r\n"]},"metadata":{},"sourceType":"module"}