{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { numericToNumber } from '../../util/number.js';\nimport { eqNaN } from 'zrender/lib/core/util.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar DEFAULT_SMOOTH = 0.3;\n\nvar ParallelView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelView, _super);\n\n  function ParallelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelView.type;\n    _this._dataGroup = new graphic.Group();\n    _this._initialized = false;\n    return _this;\n  }\n\n  ParallelView.prototype.init = function () {\n    this.group.add(this._dataGroup);\n  };\n  /**\n   * @override\n   */\n\n\n  ParallelView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    // Clear previously rendered progressive elements.\n    this._progressiveEls = null;\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, seriesModel, newDataIndex);\n      saveOldStyle(line);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  };\n\n  ParallelView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  };\n\n  ParallelView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    var progressiveEls = this._progressiveEls = [];\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n      progressiveEls.push(line);\n    }\n  };\n\n  ParallelView.prototype.remove = function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  };\n\n  ParallelView.type = 'parallel';\n  return ParallelView;\n}(ChartView);\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    // silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  smooth = numericToNumber(smooth);\n  eqNaN(smooth) && (smooth = 0);\n  return {\n    smooth: smooth\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.fill = null;\n  el.setShape('smooth', seriesScope.smooth);\n  var itemModel = data.getItemModel(dataIndex);\n  var emphasisModel = itemModel.getModel('emphasis');\n  setStatesStylesFromModel(el, itemModel, 'lineStyle');\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n} // function simpleDiff(oldData, newData, dimensions) {\n//     let oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     let dimLen = dimensions.length;\n//     for (let i = 0; i < oldLen; i++) {\n//         for (let j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME put in common util?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nexport default ParallelView;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/BookVue/node_modules/echarts/lib/chart/parallel/ParallelView.js"],"names":["__extends","graphic","setStatesStylesFromModel","toggleHoverEmphasis","ChartView","numericToNumber","eqNaN","saveOldStyle","DEFAULT_SMOOTH","ParallelView","_super","_this","apply","arguments","type","_dataGroup","Group","_initialized","prototype","init","group","add","render","seriesModel","ecModel","api","payload","_progressiveEls","dataGroup","data","getData","oldData","_data","coordSys","coordinateSystem","dimensions","seriesScope","makeSeriesScope","diff","update","remove","execute","newDataIndex","line","addEl","updateElCommon","oldDataIndex","getItemGraphicEl","points","createLinePoints","setItemGraphicEl","updateProps","shape","clipPath","createGridClipShape","setTimeout","removeClipPath","setClipPath","incrementalPrepareRender","removeAll","incrementalRender","taskParams","progressiveEls","dataIndex","start","end","incremental","push","cb","parallelModel","model","rect","getRect","rectEl","Rect","x","y","width","height","dim","get","setShape","initProps","i","length","dimName","value","mapDimension","isEmptyValue","getAxis","dataToPoint","Polyline","z2","smooth","el","useStyle","getItemVisual","style","fill","itemModel","getItemModel","emphasisModel","getModel","val","axisType","isNaN"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic.js';\nimport { setStatesStylesFromModel, toggleHoverEmphasis } from '../../util/states.js';\nimport ChartView from '../../view/Chart.js';\nimport { numericToNumber } from '../../util/number.js';\nimport { eqNaN } from 'zrender/lib/core/util.js';\nimport { saveOldStyle } from '../../animation/basicTransition.js';\nvar DEFAULT_SMOOTH = 0.3;\n\nvar ParallelView =\n/** @class */\nfunction (_super) {\n  __extends(ParallelView, _super);\n\n  function ParallelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ParallelView.type;\n    _this._dataGroup = new graphic.Group();\n    _this._initialized = false;\n    return _this;\n  }\n\n  ParallelView.prototype.init = function () {\n    this.group.add(this._dataGroup);\n  };\n  /**\n   * @override\n   */\n\n\n  ParallelView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    // Clear previously rendered progressive elements.\n    this._progressiveEls = null;\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, seriesModel, newDataIndex);\n      saveOldStyle(line);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  };\n\n  ParallelView.prototype.incrementalPrepareRender = function (seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  };\n\n  ParallelView.prototype.incrementalRender = function (taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    var progressiveEls = this._progressiveEls = [];\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n      progressiveEls.push(line);\n    }\n  };\n\n  ParallelView.prototype.remove = function () {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  };\n\n  ParallelView.type = 'parallel';\n  return ParallelView;\n}(ChartView);\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    // silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  smooth = numericToNumber(smooth);\n  eqNaN(smooth) && (smooth = 0);\n  return {\n    smooth: smooth\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  el.useStyle(data.getItemVisual(dataIndex, 'style'));\n  el.style.fill = null;\n  el.setShape('smooth', seriesScope.smooth);\n  var itemModel = data.getItemModel(dataIndex);\n  var emphasisModel = itemModel.getModel('emphasis');\n  setStatesStylesFromModel(el, itemModel, 'lineStyle');\n  toggleHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'), emphasisModel.get('disabled'));\n} // function simpleDiff(oldData, newData, dimensions) {\n//     let oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     let dimLen = dimensions.length;\n//     for (let i = 0; i < oldLen; i++) {\n//         for (let j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME put in common util?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nexport default ParallelView;"]},"metadata":{},"sourceType":"module"}