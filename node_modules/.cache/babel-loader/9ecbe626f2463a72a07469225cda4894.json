{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries.js';\nimport createSeriesData from '../helper/createSeriesData.js';\nimport { inheritDefaultOption } from '../../util/component.js';\n\nvar BarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\r\n   * @override\r\n   */\n\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nexport default BarSeriesModel;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/bar/BarSeries.js"],"names":["__extends","BaseBarSeriesModel","createSeriesData","inheritDefaultOption","BarSeriesModel","_super","_this","apply","arguments","type","prototype","getInitialData","useEncodeDefaulter","createInvertedIndices","get","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","brushSelector","dataIndex","data","selectors","rect","getItemLayout","dependencies","defaultOption","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport BaseBarSeriesModel from './BaseBarSeries.js';\r\nimport createSeriesData from '../helper/createSeriesData.js';\r\nimport { inheritDefaultOption } from '../../util/component.js';\r\n\r\nvar BarSeriesModel =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(BarSeriesModel, _super);\r\n\r\n  function BarSeriesModel() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = BarSeriesModel.type;\r\n    return _this;\r\n  }\r\n\r\n  BarSeriesModel.prototype.getInitialData = function () {\r\n    return createSeriesData(null, this, {\r\n      useEncodeDefaulter: true,\r\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\r\n    });\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  BarSeriesModel.prototype.getProgressive = function () {\r\n    // Do not support progressive in normal mode.\r\n    return this.get('large') ? this.get('progressive') : false;\r\n  };\r\n  /**\r\n   * @override\r\n   */\r\n\r\n\r\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\r\n    // Do not support progressive in normal mode.\r\n    var progressiveThreshold = this.get('progressiveThreshold');\r\n    var largeThreshold = this.get('largeThreshold');\r\n\r\n    if (largeThreshold > progressiveThreshold) {\r\n      progressiveThreshold = largeThreshold;\r\n    }\r\n\r\n    return progressiveThreshold;\r\n  };\r\n\r\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\r\n    return selectors.rect(data.getItemLayout(dataIndex));\r\n  };\r\n\r\n  BarSeriesModel.type = 'series.bar';\r\n  BarSeriesModel.dependencies = ['grid', 'polar'];\r\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\r\n    // If clipped\r\n    // Only available on cartesian2d\r\n    clip: true,\r\n    roundCap: false,\r\n    showBackground: false,\r\n    backgroundStyle: {\r\n      color: 'rgba(180, 180, 180, 0.2)',\r\n      borderColor: null,\r\n      borderWidth: 0,\r\n      borderType: 'solid',\r\n      borderRadius: 0,\r\n      shadowBlur: 0,\r\n      shadowColor: null,\r\n      shadowOffsetX: 0,\r\n      shadowOffsetY: 0,\r\n      opacity: 1\r\n    },\r\n    select: {\r\n      itemStyle: {\r\n        borderColor: '#212121'\r\n      }\r\n    },\r\n    realtimeSort: false\r\n  });\r\n  return BarSeriesModel;\r\n}(BaseBarSeriesModel);\r\n\r\nexport default BarSeriesModel;"]},"metadata":{},"sourceType":"module"}