{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as graphic from '../../util/graphic.js';\nimport { getECData } from '../../util/innerStore.js';\nimport SymbolClz from '../helper/Symbol.js';\nimport { radialCoordinate } from './layoutHelper.js';\nimport * as bbox from 'zrender/lib/core/bbox.js';\nimport View from '../../coord/View.js';\nimport * as roamHelper from '../../component/helper/roamHelper.js';\nimport RoamController from '../../component/helper/RoamController.js';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\nimport { parsePercent } from '../../util/number.js';\nimport ChartView from '../../view/Chart.js';\nimport Path from 'zrender/lib/graphic/Path.js';\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states.js';\n\nvar TreeEdgeShape =\n/** @class */\nfunction () {\n  function TreeEdgeShape() {\n    this.parentPoint = [];\n    this.childPoints = [];\n  }\n\n  return TreeEdgeShape;\n}();\n\nvar TreePath =\n/** @class */\nfunction (_super) {\n  __extends(TreePath, _super);\n\n  function TreePath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  TreePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  TreePath.prototype.getDefaultShape = function () {\n    return new TreeEdgeShape();\n  };\n\n  TreePath.prototype.buildPath = function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  };\n\n  return TreePath;\n}(Path);\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreeView.type;\n    _this._mainGroup = new graphic.Group();\n    return _this;\n  }\n\n  TreeView.prototype.init = function (ecModel, api) {\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  };\n\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.x = layoutInfo.x + layoutInfo.width / 2;\n      group.y = layoutInfo.y + layoutInfo.height / 2;\n    } else {\n      group.x = layoutInfo.x;\n      group.y = layoutInfo.y;\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesModel.get('expandAndCollapse') === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  };\n\n  TreeView.prototype._updateViewCoordSys = function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      x: viewCoordSys.x,\n      y: viewCoordSys.y,\n      scaleX: viewCoordSys.scaleX,\n      scaleY: viewCoordSys.scaleY\n    });\n    this._min = min;\n    this._max = max;\n  };\n\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    data.eachItemGraphicEl(function (el, idx) {\n      el.setSymbolScale(nodeScale);\n    });\n  };\n\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  };\n\n  TreeView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  TreeView.prototype.remove = function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  };\n\n  TreeView.type = 'tree';\n  return TreeView;\n}(ChartView);\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var visualColor = node.getVisual('style').fill;\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.__oldX,\n    y: sourceSymbolEl.__oldY,\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n    symbolEl.x = sourceOldLayout.x;\n    symbolEl.y = sourceOldLayout.y;\n  } else {\n    symbolEl.updateData(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  symbolEl.__oldX = symbolEl.x;\n  symbolEl.__oldY = symbolEl.y;\n  graphic.updateProps(symbolEl, {\n    x: targetLayout.x,\n    y: targetLayout.y\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesModel.get('layout') === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length_1 = realRoot.children.length;\n    var rad = void 0;\n    var isLeft = void 0;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\n      };\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var normalLabelModel = itemModel.getModel('label');\n    var rotate = normalLabelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    var textContent = symbolPath.getTextContent();\n\n    if (textContent) {\n      symbolPath.setTextConfig({\n        position: normalLabelModel.get('position') || textPosition,\n        rotation: rotate == null ? -rad : labelRotateRadian,\n        origin: 'center'\n      });\n      textContent.setStyle('verticalAlign', 'middle');\n    }\n  } // Handle status\n\n\n  var focus = itemModel.get(['emphasis', 'focus']);\n  var focusDataIndices = focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\n\n  if (focusDataIndices) {\n    // Modify the focus to data indices.\n    getECData(symbolEl).focus = focusDataIndices;\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\n\n  if (symbolEl.__edge) {\n    symbolEl.onHoverStateChange = function (toState) {\n      if (toState !== 'blur') {\n        // NOTE: Ensure the parent elements will been blurred firstly.\n        // According to the return of getAncestorsIndices and getDescendantIndices\n        // TODO: A bit tricky.\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\n\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\n          setStatesFlag(symbolEl.__edge, toState);\n        }\n      }\n    };\n  }\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\n  var itemModel = node.getModel();\n  var edgeShape = seriesModel.get('edgeShape');\n  var layout = seriesModel.get('layout');\n  var orient = seriesModel.getOrient();\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreePath({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: orient,\n              forkPosition: edgeForkPosition\n            }\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          }\n        }, seriesModel);\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\n      }\n    }\n  }\n\n  if (edge) {\n    edge.useStyle(zrUtil.defaults({\n      strokeNoScale: true,\n      fill: null\n    }, lineStyle));\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\n    setDefaultStateProxy(edge);\n    group.add(edge);\n  }\n}\n\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\n  var virtualRoot = data.tree.root;\n\n  var _a = getSourceNode(virtualRoot, node),\n      source = _a.source,\n      sourceLayout = _a.sourceLayout;\n\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\n\n  if (!symbolEl) {\n    return;\n  }\n\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesModel.get('edgeShape');\n  var layoutOpt = seriesModel.get('layout');\n  var orient = seriesModel.get('orient');\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.removeElement(edge, {\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function cb() {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\n      graphic.removeElement(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function cb() {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    }\n  }\n}\n\nfunction getSourceNode(virtualRoot, node) {\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  return {\n    source: source,\n    sourceLayout: sourceLayout\n  };\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\n\n  var removeAnimationOpt = {\n    duration: seriesModel.get('animationDurationUpdate'),\n    easing: seriesModel.get('animationEasingUpdate')\n  };\n  graphic.removeElement(symbolEl, {\n    x: sourceLayout.x + 1,\n    y: sourceLayout.y + 1\n  }, seriesModel, {\n    cb: function cb() {\n      group.remove(symbolEl);\n      data.setItemGraphicEl(dataIndex, null);\n    },\n    removeOpt: removeAnimationOpt\n  });\n  symbolEl.fadeOut(null, data.hostModel, {\n    fadeLabel: true,\n    animation: removeAnimationOpt\n  }); // remove edge as parent node\n\n  node.children.forEach(function (childNode) {\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\n  }); // remove edge as child node\n\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\n}\n\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (layoutOpt === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x || 0,\n      y1: radialCoor1.y || 0,\n      x2: radialCoor4.x || 0,\n      y2: radialCoor4.y || 0,\n      cpx1: radialCoor2.x || 0,\n      cpy1: radialCoor2.y || 0,\n      cpx2: radialCoor3.x || 0,\n      cpy2: radialCoor3.y || 0\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nexport default TreeView;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/tree/TreeView.js"],"names":["__extends","zrUtil","graphic","getECData","SymbolClz","radialCoordinate","bbox","View","roamHelper","RoamController","onIrrelevantElement","parsePercent","ChartView","Path","setStatesStylesFromModel","setStatesFlag","setDefaultStateProxy","HOVER_STATE_BLUR","TreeEdgeShape","parentPoint","childPoints","TreePath","_super","opts","call","prototype","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","childLen","length","firstChildPos","lastChildPos","moveTo","lineTo","orient","forkDim","otherDim","forkPosition","tmpPoint","i","point","TreeView","_this","apply","arguments","type","_mainGroup","Group","init","ecModel","api","_controller","getZr","_controllerHost","target","group","add","render","seriesModel","data","getData","layoutInfo","layout","get","x","width","y","height","_updateViewCoordSys","_updateController","oldData","_data","diff","newIdx","symbolNeedsDraw","updateNode","update","oldIdx","symbolEl","getItemGraphicEl","removeNode","remove","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","dataIndex","off","on","dispatchAction","seriesId","id","points","each","idx","getItemLayout","isNaN","push","min","max","fromPoints","oldMin","_min","oldMax","_max","viewCoordSys","coordinateSystem","zoomLimit","setBoundingRect","setCenter","setZoom","attr","scaleX","scaleY","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","enable","zoom","getZoom","updateViewOnPan","dx","dy","updateViewOnZoom","scale","originX","originY","updateLabelLayout","nodeScale","_getNodeGlobalScale","setSymbolScale","coordSys","nodeScaleRatio","groupZoom","roamZoom","dispose","removeAll","isInit","node","tree","getNodeByDataIndex","itemModel","getModel","visualColor","getVisual","symbolInnerColor","isExpand","children","virtualRoot","root","source","parentNode","sourceSymbolEl","sourceLayout","getLayout","sourceOldLayout","__oldX","__oldY","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","useNameLabel","updateData","__radialRawX","__radialRawY","setItemGraphicEl","updateProps","symbolPath","getSymbolPath","realRoot","rootLayout","length_1","rad","isLeft","center","Math","atan2","PI","textPosition","normalLabelModel","rotate","labelRotateRadian","textContent","getTextContent","setTextConfig","position","rotation","origin","setStyle","focus","focusDataIndices","getAncestorsIndices","getDescendantIndices","drawEdge","__edge","onHoverStateChange","toState","parentEl","hoverState","edgeShape","getOrient","curvature","edgeForkPosition","lineStyle","getLineStyle","edge","BezierCurve","getEdgeShape","childLayout","process","env","NODE_ENV","Error","useStyle","defaults","strokeNoScale","removeNodeEdge","removeAnimationOpt","_a","getSourceNode","sourceEdge","undefined","layoutOpt","removeElement","style","opacity","cb","removeOpt","duration","easing","fadeOut","hostModel","fadeLabel","animation","forEach","childNode","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport * as graphic from '../../util/graphic.js';\r\nimport { getECData } from '../../util/innerStore.js';\r\nimport SymbolClz from '../helper/Symbol.js';\r\nimport { radialCoordinate } from './layoutHelper.js';\r\nimport * as bbox from 'zrender/lib/core/bbox.js';\r\nimport View from '../../coord/View.js';\r\nimport * as roamHelper from '../../component/helper/roamHelper.js';\r\nimport RoamController from '../../component/helper/RoamController.js';\r\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper.js';\r\nimport { parsePercent } from '../../util/number.js';\r\nimport ChartView from '../../view/Chart.js';\r\nimport Path from 'zrender/lib/graphic/Path.js';\r\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states.js';\r\n\r\nvar TreeEdgeShape =\r\n/** @class */\r\nfunction () {\r\n  function TreeEdgeShape() {\r\n    this.parentPoint = [];\r\n    this.childPoints = [];\r\n  }\r\n\r\n  return TreeEdgeShape;\r\n}();\r\n\r\nvar TreePath =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreePath, _super);\r\n\r\n  function TreePath(opts) {\r\n    return _super.call(this, opts) || this;\r\n  }\r\n\r\n  TreePath.prototype.getDefaultStyle = function () {\r\n    return {\r\n      stroke: '#000',\r\n      fill: null\r\n    };\r\n  };\r\n\r\n  TreePath.prototype.getDefaultShape = function () {\r\n    return new TreeEdgeShape();\r\n  };\r\n\r\n  TreePath.prototype.buildPath = function (ctx, shape) {\r\n    var childPoints = shape.childPoints;\r\n    var childLen = childPoints.length;\r\n    var parentPoint = shape.parentPoint;\r\n    var firstChildPos = childPoints[0];\r\n    var lastChildPos = childPoints[childLen - 1];\r\n\r\n    if (childLen === 1) {\r\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\r\n      return;\r\n    }\r\n\r\n    var orient = shape.orient;\r\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\r\n    var otherDim = 1 - forkDim;\r\n    var forkPosition = parsePercent(shape.forkPosition, 1);\r\n    var tmpPoint = [];\r\n    tmpPoint[forkDim] = parentPoint[forkDim];\r\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\r\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\r\n    tmpPoint[forkDim] = firstChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    tmpPoint[forkDim] = lastChildPos[forkDim];\r\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\r\n\r\n    for (var i = 1; i < childLen - 1; i++) {\r\n      var point = childPoints[i];\r\n      ctx.moveTo(point[0], point[1]);\r\n      tmpPoint[forkDim] = point[forkDim];\r\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\r\n    }\r\n  };\r\n\r\n  return TreePath;\r\n}(Path);\r\n\r\nvar TreeView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(TreeView, _super);\r\n\r\n  function TreeView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = TreeView.type;\r\n    _this._mainGroup = new graphic.Group();\r\n    return _this;\r\n  }\r\n\r\n  TreeView.prototype.init = function (ecModel, api) {\r\n    this._controller = new RoamController(api.getZr());\r\n    this._controllerHost = {\r\n      target: this.group\r\n    };\r\n    this.group.add(this._mainGroup);\r\n  };\r\n\r\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\r\n    var data = seriesModel.getData();\r\n    var layoutInfo = seriesModel.layoutInfo;\r\n    var group = this._mainGroup;\r\n    var layout = seriesModel.get('layout');\r\n\r\n    if (layout === 'radial') {\r\n      group.x = layoutInfo.x + layoutInfo.width / 2;\r\n      group.y = layoutInfo.y + layoutInfo.height / 2;\r\n    } else {\r\n      group.x = layoutInfo.x;\r\n      group.y = layoutInfo.y;\r\n    }\r\n\r\n    this._updateViewCoordSys(seriesModel);\r\n\r\n    this._updateController(seriesModel, ecModel, api);\r\n\r\n    var oldData = this._data;\r\n    data.diff(oldData).add(function (newIdx) {\r\n      if (symbolNeedsDraw(data, newIdx)) {\r\n        // Create node and edge\r\n        updateNode(data, newIdx, null, group, seriesModel);\r\n      }\r\n    }).update(function (newIdx, oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\r\n\r\n      if (!symbolNeedsDraw(data, newIdx)) {\r\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\r\n        return;\r\n      } // Update node and edge\r\n\r\n\r\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\r\n    }).remove(function (oldIdx) {\r\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\r\n      // node haven't been initialized with a symbol element,\r\n      // you can't found it's symbol element through index.\r\n      // so if we want to remove the symbol element we should insure\r\n      // that the symbol element is not null.\r\n\r\n      if (symbolEl) {\r\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\r\n      }\r\n    }).execute();\r\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\r\n\r\n    this._updateNodeAndLinkScale(seriesModel);\r\n\r\n    if (seriesModel.get('expandAndCollapse') === true) {\r\n      data.eachItemGraphicEl(function (el, dataIndex) {\r\n        el.off('click').on('click', function () {\r\n          api.dispatchAction({\r\n            type: 'treeExpandAndCollapse',\r\n            seriesId: seriesModel.id,\r\n            dataIndex: dataIndex\r\n          });\r\n        });\r\n      });\r\n    }\r\n\r\n    this._data = data;\r\n  };\r\n\r\n  TreeView.prototype._updateViewCoordSys = function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var points = [];\r\n    data.each(function (idx) {\r\n      var layout = data.getItemLayout(idx);\r\n\r\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\r\n        points.push([+layout.x, +layout.y]);\r\n      }\r\n    });\r\n    var min = [];\r\n    var max = [];\r\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\r\n    // the root node will disappear.\r\n\r\n    var oldMin = this._min;\r\n    var oldMax = this._max; // If width or height is 0\r\n\r\n    if (max[0] - min[0] === 0) {\r\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\r\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\r\n    }\r\n\r\n    if (max[1] - min[1] === 0) {\r\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\r\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\r\n    }\r\n\r\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\r\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\r\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\r\n    viewCoordSys.setCenter(seriesModel.get('center'));\r\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\r\n\r\n    this.group.attr({\r\n      x: viewCoordSys.x,\r\n      y: viewCoordSys.y,\r\n      scaleX: viewCoordSys.scaleX,\r\n      scaleY: viewCoordSys.scaleY\r\n    });\r\n    this._min = min;\r\n    this._max = max;\r\n  };\r\n\r\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\r\n    var _this = this;\r\n\r\n    var controller = this._controller;\r\n    var controllerHost = this._controllerHost;\r\n    var group = this.group;\r\n    controller.setPointerChecker(function (e, x, y) {\r\n      var rect = group.getBoundingRect();\r\n      rect.applyTransform(group.transform);\r\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\r\n    });\r\n    controller.enable(seriesModel.get('roam'));\r\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\r\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\r\n    controller.off('pan').off('zoom').on('pan', function (e) {\r\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        dx: e.dx,\r\n        dy: e.dy\r\n      });\r\n    }).on('zoom', function (e) {\r\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\r\n      api.dispatchAction({\r\n        seriesId: seriesModel.id,\r\n        type: 'treeRoam',\r\n        zoom: e.scale,\r\n        originX: e.originX,\r\n        originY: e.originY\r\n      });\r\n\r\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\r\n\r\n\r\n      api.updateLabelLayout();\r\n    });\r\n  };\r\n\r\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n\r\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\r\n\r\n    data.eachItemGraphicEl(function (el, idx) {\r\n      el.setSymbolScale(nodeScale);\r\n    });\r\n  };\r\n\r\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\r\n    var coordSys = seriesModel.coordinateSystem;\r\n\r\n    if (coordSys.type !== 'view') {\r\n      return 1;\r\n    }\r\n\r\n    var nodeScaleRatio = this._nodeScaleRatio;\r\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\r\n\r\n    var roamZoom = coordSys.getZoom();\r\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\r\n    return nodeScale / groupZoom;\r\n  };\r\n\r\n  TreeView.prototype.dispose = function () {\r\n    this._controller && this._controller.dispose();\r\n    this._controllerHost = null;\r\n  };\r\n\r\n  TreeView.prototype.remove = function () {\r\n    this._mainGroup.removeAll();\r\n\r\n    this._data = null;\r\n  };\r\n\r\n  TreeView.type = 'tree';\r\n  return TreeView;\r\n}(ChartView);\r\n\r\nfunction symbolNeedsDraw(data, dataIndex) {\r\n  var layout = data.getItemLayout(dataIndex);\r\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\r\n}\r\n\r\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\r\n  var isInit = !symbolEl;\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var itemModel = node.getModel();\r\n  var visualColor = node.getVisual('style').fill;\r\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\r\n  var virtualRoot = data.tree.root;\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceLayout = source.getLayout();\r\n  var sourceOldLayout = sourceSymbolEl ? {\r\n    x: sourceSymbolEl.__oldX,\r\n    y: sourceSymbolEl.__oldY,\r\n    rawX: sourceSymbolEl.__radialOldRawX,\r\n    rawY: sourceSymbolEl.__radialOldRawY\r\n  } : sourceLayout;\r\n  var targetLayout = node.getLayout();\r\n\r\n  if (isInit) {\r\n    symbolEl = new SymbolClz(data, dataIndex, null, {\r\n      symbolInnerColor: symbolInnerColor,\r\n      useNameLabel: true\r\n    });\r\n    symbolEl.x = sourceOldLayout.x;\r\n    symbolEl.y = sourceOldLayout.y;\r\n  } else {\r\n    symbolEl.updateData(data, dataIndex, null, {\r\n      symbolInnerColor: symbolInnerColor,\r\n      useNameLabel: true\r\n    });\r\n  }\r\n\r\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\r\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\r\n  symbolEl.__radialRawX = targetLayout.rawX;\r\n  symbolEl.__radialRawY = targetLayout.rawY;\r\n  group.add(symbolEl);\r\n  data.setItemGraphicEl(dataIndex, symbolEl);\r\n  symbolEl.__oldX = symbolEl.x;\r\n  symbolEl.__oldY = symbolEl.y;\r\n  graphic.updateProps(symbolEl, {\r\n    x: targetLayout.x,\r\n    y: targetLayout.y\r\n  }, seriesModel);\r\n  var symbolPath = symbolEl.getSymbolPath();\r\n\r\n  if (seriesModel.get('layout') === 'radial') {\r\n    var realRoot = virtualRoot.children[0];\r\n    var rootLayout = realRoot.getLayout();\r\n    var length_1 = realRoot.children.length;\r\n    var rad = void 0;\r\n    var isLeft = void 0;\r\n\r\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\r\n      var center = {\r\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\r\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\r\n      };\r\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      isLeft = center.x < rootLayout.x;\r\n\r\n      if (isLeft) {\r\n        rad = rad - Math.PI;\r\n      }\r\n    } else {\r\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\r\n\r\n      if (rad < 0) {\r\n        rad = Math.PI * 2 + rad;\r\n      }\r\n\r\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\r\n        isLeft = targetLayout.x < rootLayout.x;\r\n\r\n        if (isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      } else {\r\n        isLeft = targetLayout.x > rootLayout.x;\r\n\r\n        if (!isLeft) {\r\n          rad = rad - Math.PI;\r\n        }\r\n      }\r\n    }\r\n\r\n    var textPosition = isLeft ? 'left' : 'right';\r\n    var normalLabelModel = itemModel.getModel('label');\r\n    var rotate = normalLabelModel.get('rotate');\r\n    var labelRotateRadian = rotate * (Math.PI / 180);\r\n    var textContent = symbolPath.getTextContent();\r\n\r\n    if (textContent) {\r\n      symbolPath.setTextConfig({\r\n        position: normalLabelModel.get('position') || textPosition,\r\n        rotation: rotate == null ? -rad : labelRotateRadian,\r\n        origin: 'center'\r\n      });\r\n      textContent.setStyle('verticalAlign', 'middle');\r\n    }\r\n  } // Handle status\r\n\r\n\r\n  var focus = itemModel.get(['emphasis', 'focus']);\r\n  var focusDataIndices = focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\r\n\r\n  if (focusDataIndices) {\r\n    // Modify the focus to data indices.\r\n    getECData(symbolEl).focus = focusDataIndices;\r\n  }\r\n\r\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\r\n\r\n  if (symbolEl.__edge) {\r\n    symbolEl.onHoverStateChange = function (toState) {\r\n      if (toState !== 'blur') {\r\n        // NOTE: Ensure the parent elements will been blurred firstly.\r\n        // According to the return of getAncestorsIndices and getDescendantIndices\r\n        // TODO: A bit tricky.\r\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\r\n\r\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\r\n          setStatesFlag(symbolEl.__edge, toState);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\r\n  var itemModel = node.getModel();\r\n  var edgeShape = seriesModel.get('edgeShape');\r\n  var layout = seriesModel.get('layout');\r\n  var orient = seriesModel.getOrient();\r\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\r\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\r\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\r\n  var edge = symbolEl.__edge;\r\n\r\n  if (edgeShape === 'curve') {\r\n    if (node.parentNode && node.parentNode !== virtualRoot) {\r\n      if (!edge) {\r\n        edge = symbolEl.__edge = new graphic.BezierCurve({\r\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\r\n        });\r\n      }\r\n\r\n      graphic.updateProps(edge, {\r\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\r\n      }, seriesModel);\r\n    }\r\n  } else if (edgeShape === 'polyline') {\r\n    if (layout === 'orthogonal') {\r\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\r\n        var children = node.children;\r\n        var childPoints = [];\r\n\r\n        for (var i = 0; i < children.length; i++) {\r\n          var childLayout = children[i].getLayout();\r\n          childPoints.push([childLayout.x, childLayout.y]);\r\n        }\r\n\r\n        if (!edge) {\r\n          edge = symbolEl.__edge = new TreePath({\r\n            shape: {\r\n              parentPoint: [targetLayout.x, targetLayout.y],\r\n              childPoints: [[targetLayout.x, targetLayout.y]],\r\n              orient: orient,\r\n              forkPosition: edgeForkPosition\r\n            }\r\n          });\r\n        }\r\n\r\n        graphic.updateProps(edge, {\r\n          shape: {\r\n            parentPoint: [targetLayout.x, targetLayout.y],\r\n            childPoints: childPoints\r\n          }\r\n        }, seriesModel);\r\n      }\r\n    } else {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\r\n      }\r\n    }\r\n  }\r\n\r\n  if (edge) {\r\n    edge.useStyle(zrUtil.defaults({\r\n      strokeNoScale: true,\r\n      fill: null\r\n    }, lineStyle));\r\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\r\n    setDefaultStateProxy(edge);\r\n    group.add(edge);\r\n  }\r\n}\r\n\r\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\r\n  var virtualRoot = data.tree.root;\r\n\r\n  var _a = getSourceNode(virtualRoot, node),\r\n      source = _a.source,\r\n      sourceLayout = _a.sourceLayout;\r\n\r\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\r\n\r\n  if (!symbolEl) {\r\n    return;\r\n  }\r\n\r\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\r\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\r\n  // the source at the same time. because the polyline edge shape is only owned by the source.\r\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\r\n  // the source at the same time. the same reason as above.\r\n\r\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\r\n  var edgeShape = seriesModel.get('edgeShape');\r\n  var layoutOpt = seriesModel.get('layout');\r\n  var orient = seriesModel.get('orient');\r\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\r\n\r\n  if (edge) {\r\n    if (edgeShape === 'curve') {\r\n      graphic.removeElement(edge, {\r\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, {\r\n        cb: function () {\r\n          group.remove(edge);\r\n        },\r\n        removeOpt: removeAnimationOpt\r\n      });\r\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\r\n      graphic.removeElement(edge, {\r\n        shape: {\r\n          parentPoint: [sourceLayout.x, sourceLayout.y],\r\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\r\n        },\r\n        style: {\r\n          opacity: 0\r\n        }\r\n      }, seriesModel, {\r\n        cb: function () {\r\n          group.remove(edge);\r\n        },\r\n        removeOpt: removeAnimationOpt\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nfunction getSourceNode(virtualRoot, node) {\r\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\r\n  var sourceLayout;\r\n\r\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\r\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\r\n  }\r\n\r\n  return {\r\n    source: source,\r\n    sourceLayout: sourceLayout\r\n  };\r\n}\r\n\r\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\r\n  var node = data.tree.getNodeByDataIndex(dataIndex);\r\n  var virtualRoot = data.tree.root;\r\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\r\n\r\n  var removeAnimationOpt = {\r\n    duration: seriesModel.get('animationDurationUpdate'),\r\n    easing: seriesModel.get('animationEasingUpdate')\r\n  };\r\n  graphic.removeElement(symbolEl, {\r\n    x: sourceLayout.x + 1,\r\n    y: sourceLayout.y + 1\r\n  }, seriesModel, {\r\n    cb: function () {\r\n      group.remove(symbolEl);\r\n      data.setItemGraphicEl(dataIndex, null);\r\n    },\r\n    removeOpt: removeAnimationOpt\r\n  });\r\n  symbolEl.fadeOut(null, data.hostModel, {\r\n    fadeLabel: true,\r\n    animation: removeAnimationOpt\r\n  }); // remove edge as parent node\r\n\r\n  node.children.forEach(function (childNode) {\r\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\r\n  }); // remove edge as child node\r\n\r\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\r\n}\r\n\r\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\r\n  var cpx1;\r\n  var cpy1;\r\n  var cpx2;\r\n  var cpy2;\r\n  var x1;\r\n  var x2;\r\n  var y1;\r\n  var y2;\r\n\r\n  if (layoutOpt === 'radial') {\r\n    x1 = sourceLayout.rawX;\r\n    y1 = sourceLayout.rawY;\r\n    x2 = targetLayout.rawX;\r\n    y2 = targetLayout.rawY;\r\n    var radialCoor1 = radialCoordinate(x1, y1);\r\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\r\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\r\n    var radialCoor4 = radialCoordinate(x2, y2);\r\n    return {\r\n      x1: radialCoor1.x || 0,\r\n      y1: radialCoor1.y || 0,\r\n      x2: radialCoor4.x || 0,\r\n      y2: radialCoor4.y || 0,\r\n      cpx1: radialCoor2.x || 0,\r\n      cpy1: radialCoor2.y || 0,\r\n      cpx2: radialCoor3.x || 0,\r\n      cpy2: radialCoor3.y || 0\r\n    };\r\n  } else {\r\n    x1 = sourceLayout.x;\r\n    y1 = sourceLayout.y;\r\n    x2 = targetLayout.x;\r\n    y2 = targetLayout.y;\r\n\r\n    if (orient === 'LR' || orient === 'RL') {\r\n      cpx1 = x1 + (x2 - x1) * curvature;\r\n      cpy1 = y1;\r\n      cpx2 = x2 + (x1 - x2) * curvature;\r\n      cpy2 = y2;\r\n    }\r\n\r\n    if (orient === 'TB' || orient === 'BT') {\r\n      cpx1 = x1;\r\n      cpy1 = y1 + (y2 - y1) * curvature;\r\n      cpx2 = x2;\r\n      cpy2 = y2 + (y1 - y2) * curvature;\r\n    }\r\n  }\r\n\r\n  return {\r\n    x1: x1,\r\n    y1: y1,\r\n    x2: x2,\r\n    y2: y2,\r\n    cpx1: cpx1,\r\n    cpy1: cpy1,\r\n    cpx2: cpx2,\r\n    cpy2: cpy2\r\n  };\r\n}\r\n\r\nexport default TreeView;"]},"metadata":{},"sourceType":"module"}