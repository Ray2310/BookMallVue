{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport { makeInner } from '../util/model.js';\nimport { getDecalFromPalette } from '../model/mixin/palette.js';\nvar DEFAULT_OPTION = {\n  label: {\n    enabled: true\n  },\n  decal: {\n    show: false\n  }\n};\nvar inner = makeInner();\nvar decalPaletteScope = {};\nexport default function ariaVisual(ecModel, api) {\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\n\n  if (!ariaModel.get('enabled')) {\n    return;\n  }\n\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\n  zrUtil.merge(ariaModel.option, defaultOption, false);\n  setDecal();\n  setLabel();\n\n  function setDecal() {\n    var decalModel = ariaModel.getModel('decal');\n    var useDecal = decalModel.get('show');\n\n    if (useDecal) {\n      // Each type of series use one scope.\n      // Pie and funnel are using diferrent scopes\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\n      ecModel.eachSeries(function (seriesModel) {\n        if (seriesModel.isColorBySeries()) {\n          return;\n        }\n\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\n\n        if (!decalScope) {\n          decalScope = {};\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\n        }\n\n        inner(seriesModel).scope = decalScope;\n      });\n      ecModel.eachRawSeries(function (seriesModel) {\n        if (ecModel.isSeriesFiltered(seriesModel)) {\n          return;\n        }\n\n        if (zrUtil.isFunction(seriesModel.enableAriaDecal)) {\n          // Let series define how to use decal palette on data\n          seriesModel.enableAriaDecal();\n          return;\n        }\n\n        var data = seriesModel.getData();\n\n        if (!seriesModel.isColorBySeries()) {\n          var dataAll_1 = seriesModel.getRawData();\n          var idxMap_1 = {};\n          var decalScope_1 = inner(seriesModel).scope;\n          data.each(function (idx) {\n            var rawIdx = data.getRawIndex(idx);\n            idxMap_1[rawIdx] = idx;\n          });\n          var dataCount_1 = dataAll_1.count();\n          dataAll_1.each(function (rawIdx) {\n            var idx = idxMap_1[rawIdx];\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\n          });\n        } else {\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\n          var specifiedDecal = data.getVisual('decal');\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\n        }\n\n        function mergeDecal(specifiedDecal, paletteDecal) {\n          // Merge decal from palette to decal from itemStyle.\n          // User do not need to specify all of the decal props.\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\n          resultDecal.dirty = true;\n          return resultDecal;\n        }\n      });\n    }\n  }\n\n  function setLabel() {\n    var labelLocale = ecModel.getLocaleModel().get('aria');\n    var labelModel = ariaModel.getModel('label');\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\n\n    if (!labelModel.get('enabled')) {\n      return;\n    }\n\n    var dom = api.getZr().dom;\n\n    if (labelModel.get('description')) {\n      dom.setAttribute('aria-label', labelModel.get('description'));\n      return;\n    }\n\n    var seriesCnt = ecModel.getSeriesCount();\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n    var ariaLabel;\n\n    if (seriesCnt < 1) {\n      // No series, no aria label\n      return;\n    } else {\n      var title = getTitle();\n\n      if (title) {\n        var withTitle = labelModel.get(['general', 'withTitle']);\n        ariaLabel = replace(withTitle, {\n          title: title\n        });\n      } else {\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\n      }\n\n      var seriesLabels_1 = [];\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\n      ariaLabel += replace(prefix, {\n        seriesCount: seriesCnt\n      });\n      ecModel.eachSeries(function (seriesModel, idx) {\n        if (idx < displaySeriesCnt) {\n          var seriesLabel = void 0;\n          var seriesName = seriesModel.get('name');\n          var withName = seriesName ? 'withName' : 'withoutName';\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\n          seriesLabel = replace(seriesLabel, {\n            seriesId: seriesModel.seriesIndex,\n            seriesName: seriesModel.get('name'),\n            seriesType: getSeriesTypeName(seriesModel.subType)\n          });\n          var data = seriesModel.getData();\n\n          if (data.count() > maxDataCnt) {\n            // Show part of data\n            var partialLabel = labelModel.get(['data', 'partialData']);\n            seriesLabel += replace(partialLabel, {\n              displayCnt: maxDataCnt\n            });\n          } else {\n            seriesLabel += labelModel.get(['data', 'allData']);\n          }\n\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\n          var dataLabels = [];\n\n          for (var i = 0; i < data.count(); i++) {\n            if (i < maxDataCnt) {\n              var name_1 = data.getName(i);\n              var value = data.getValues(i);\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\n              dataLabels.push(replace(dataLabel, {\n                name: name_1,\n                value: value.join(middleSeparator_1)\n              }));\n            }\n          }\n\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\n          seriesLabels_1.push(seriesLabel);\n        }\n      });\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\n      var middleSeparator = separatorModel.get('middle');\n      var endSeparator = separatorModel.get('end');\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\n      dom.setAttribute('aria-label', ariaLabel);\n    }\n  }\n\n  function replace(str, keyValues) {\n    if (!zrUtil.isString(str)) {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getTitle() {\n    var title = ecModel.get('title');\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\n  }\n}","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/visual/aria.js"],"names":["zrUtil","makeInner","getDecalFromPalette","DEFAULT_OPTION","label","enabled","decal","show","inner","decalPaletteScope","ariaVisual","ecModel","api","ariaModel","getModel","get","defaultOption","clone","merge","getLocaleModel","option","setDecal","setLabel","decalModel","useDecal","paletteScopeGroupByType_1","createHashMap","eachSeries","seriesModel","isColorBySeries","decalScope","type","set","scope","eachRawSeries","isSeriesFiltered","isFunction","enableAriaDecal","data","getData","dataAll_1","getRawData","idxMap_1","decalScope_1","each","idx","rawIdx","getRawIndex","dataCount_1","count","name","getName","paletteDecal","specifiedDecal","getItemVisual","setItemVisual","mergeDecal","getSeriesCount","getVisual","setVisual","resultDecal","extend","dirty","labelLocale","labelModel","defaults","dom","getZr","setAttribute","seriesCnt","maxDataCnt","maxSeriesCnt","displaySeriesCnt","Math","min","ariaLabel","title","getTitle","withTitle","replace","seriesLabels_1","prefix","seriesCount","seriesLabel","seriesName","withName","seriesId","seriesIndex","seriesType","getSeriesTypeName","subType","partialLabel","displayCnt","middleSeparator_1","endSeparator_1","dataLabels","i","name_1","value","getValues","dataLabel","push","join","separatorModel","middleSeparator","endSeparator","str","keyValues","isString","result","key","RegExp","length","text"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport { makeInner } from '../util/model.js';\r\nimport { getDecalFromPalette } from '../model/mixin/palette.js';\r\nvar DEFAULT_OPTION = {\r\n  label: {\r\n    enabled: true\r\n  },\r\n  decal: {\r\n    show: false\r\n  }\r\n};\r\nvar inner = makeInner();\r\nvar decalPaletteScope = {};\r\nexport default function ariaVisual(ecModel, api) {\r\n  var ariaModel = ecModel.getModel('aria'); // See \"area enabled\" detection code in `GlobalModel.ts`.\r\n\r\n  if (!ariaModel.get('enabled')) {\r\n    return;\r\n  }\r\n\r\n  var defaultOption = zrUtil.clone(DEFAULT_OPTION);\r\n  zrUtil.merge(defaultOption.label, ecModel.getLocaleModel().get('aria'), false);\r\n  zrUtil.merge(ariaModel.option, defaultOption, false);\r\n  setDecal();\r\n  setLabel();\r\n\r\n  function setDecal() {\r\n    var decalModel = ariaModel.getModel('decal');\r\n    var useDecal = decalModel.get('show');\r\n\r\n    if (useDecal) {\r\n      // Each type of series use one scope.\r\n      // Pie and funnel are using diferrent scopes\r\n      var paletteScopeGroupByType_1 = zrUtil.createHashMap();\r\n      ecModel.eachSeries(function (seriesModel) {\r\n        if (seriesModel.isColorBySeries()) {\r\n          return;\r\n        }\r\n\r\n        var decalScope = paletteScopeGroupByType_1.get(seriesModel.type);\r\n\r\n        if (!decalScope) {\r\n          decalScope = {};\r\n          paletteScopeGroupByType_1.set(seriesModel.type, decalScope);\r\n        }\r\n\r\n        inner(seriesModel).scope = decalScope;\r\n      });\r\n      ecModel.eachRawSeries(function (seriesModel) {\r\n        if (ecModel.isSeriesFiltered(seriesModel)) {\r\n          return;\r\n        }\r\n\r\n        if (zrUtil.isFunction(seriesModel.enableAriaDecal)) {\r\n          // Let series define how to use decal palette on data\r\n          seriesModel.enableAriaDecal();\r\n          return;\r\n        }\r\n\r\n        var data = seriesModel.getData();\r\n\r\n        if (!seriesModel.isColorBySeries()) {\r\n          var dataAll_1 = seriesModel.getRawData();\r\n          var idxMap_1 = {};\r\n          var decalScope_1 = inner(seriesModel).scope;\r\n          data.each(function (idx) {\r\n            var rawIdx = data.getRawIndex(idx);\r\n            idxMap_1[rawIdx] = idx;\r\n          });\r\n          var dataCount_1 = dataAll_1.count();\r\n          dataAll_1.each(function (rawIdx) {\r\n            var idx = idxMap_1[rawIdx];\r\n            var name = dataAll_1.getName(rawIdx) || rawIdx + '';\r\n            var paletteDecal = getDecalFromPalette(seriesModel.ecModel, name, decalScope_1, dataCount_1);\r\n            var specifiedDecal = data.getItemVisual(idx, 'decal');\r\n            data.setItemVisual(idx, 'decal', mergeDecal(specifiedDecal, paletteDecal));\r\n          });\r\n        } else {\r\n          var paletteDecal = getDecalFromPalette(seriesModel.ecModel, seriesModel.name, decalPaletteScope, ecModel.getSeriesCount());\r\n          var specifiedDecal = data.getVisual('decal');\r\n          data.setVisual('decal', mergeDecal(specifiedDecal, paletteDecal));\r\n        }\r\n\r\n        function mergeDecal(specifiedDecal, paletteDecal) {\r\n          // Merge decal from palette to decal from itemStyle.\r\n          // User do not need to specify all of the decal props.\r\n          var resultDecal = specifiedDecal ? zrUtil.extend(zrUtil.extend({}, paletteDecal), specifiedDecal) : paletteDecal;\r\n          resultDecal.dirty = true;\r\n          return resultDecal;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function setLabel() {\r\n    var labelLocale = ecModel.getLocaleModel().get('aria');\r\n    var labelModel = ariaModel.getModel('label');\r\n    labelModel.option = zrUtil.defaults(labelModel.option, labelLocale);\r\n\r\n    if (!labelModel.get('enabled')) {\r\n      return;\r\n    }\r\n\r\n    var dom = api.getZr().dom;\r\n\r\n    if (labelModel.get('description')) {\r\n      dom.setAttribute('aria-label', labelModel.get('description'));\r\n      return;\r\n    }\r\n\r\n    var seriesCnt = ecModel.getSeriesCount();\r\n    var maxDataCnt = labelModel.get(['data', 'maxCount']) || 10;\r\n    var maxSeriesCnt = labelModel.get(['series', 'maxCount']) || 10;\r\n    var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\r\n    var ariaLabel;\r\n\r\n    if (seriesCnt < 1) {\r\n      // No series, no aria label\r\n      return;\r\n    } else {\r\n      var title = getTitle();\r\n\r\n      if (title) {\r\n        var withTitle = labelModel.get(['general', 'withTitle']);\r\n        ariaLabel = replace(withTitle, {\r\n          title: title\r\n        });\r\n      } else {\r\n        ariaLabel = labelModel.get(['general', 'withoutTitle']);\r\n      }\r\n\r\n      var seriesLabels_1 = [];\r\n      var prefix = seriesCnt > 1 ? labelModel.get(['series', 'multiple', 'prefix']) : labelModel.get(['series', 'single', 'prefix']);\r\n      ariaLabel += replace(prefix, {\r\n        seriesCount: seriesCnt\r\n      });\r\n      ecModel.eachSeries(function (seriesModel, idx) {\r\n        if (idx < displaySeriesCnt) {\r\n          var seriesLabel = void 0;\r\n          var seriesName = seriesModel.get('name');\r\n          var withName = seriesName ? 'withName' : 'withoutName';\r\n          seriesLabel = seriesCnt > 1 ? labelModel.get(['series', 'multiple', withName]) : labelModel.get(['series', 'single', withName]);\r\n          seriesLabel = replace(seriesLabel, {\r\n            seriesId: seriesModel.seriesIndex,\r\n            seriesName: seriesModel.get('name'),\r\n            seriesType: getSeriesTypeName(seriesModel.subType)\r\n          });\r\n          var data = seriesModel.getData();\r\n\r\n          if (data.count() > maxDataCnt) {\r\n            // Show part of data\r\n            var partialLabel = labelModel.get(['data', 'partialData']);\r\n            seriesLabel += replace(partialLabel, {\r\n              displayCnt: maxDataCnt\r\n            });\r\n          } else {\r\n            seriesLabel += labelModel.get(['data', 'allData']);\r\n          }\r\n\r\n          var middleSeparator_1 = labelModel.get(['data', 'separator', 'middle']);\r\n          var endSeparator_1 = labelModel.get(['data', 'separator', 'end']);\r\n          var dataLabels = [];\r\n\r\n          for (var i = 0; i < data.count(); i++) {\r\n            if (i < maxDataCnt) {\r\n              var name_1 = data.getName(i);\r\n              var value = data.getValues(i);\r\n              var dataLabel = labelModel.get(['data', name_1 ? 'withName' : 'withoutName']);\r\n              dataLabels.push(replace(dataLabel, {\r\n                name: name_1,\r\n                value: value.join(middleSeparator_1)\r\n              }));\r\n            }\r\n          }\r\n\r\n          seriesLabel += dataLabels.join(middleSeparator_1) + endSeparator_1;\r\n          seriesLabels_1.push(seriesLabel);\r\n        }\r\n      });\r\n      var separatorModel = labelModel.getModel(['series', 'multiple', 'separator']);\r\n      var middleSeparator = separatorModel.get('middle');\r\n      var endSeparator = separatorModel.get('end');\r\n      ariaLabel += seriesLabels_1.join(middleSeparator) + endSeparator;\r\n      dom.setAttribute('aria-label', ariaLabel);\r\n    }\r\n  }\r\n\r\n  function replace(str, keyValues) {\r\n    if (!zrUtil.isString(str)) {\r\n      return str;\r\n    }\r\n\r\n    var result = str;\r\n    zrUtil.each(keyValues, function (value, key) {\r\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  function getTitle() {\r\n    var title = ecModel.get('title');\r\n\r\n    if (title && title.length) {\r\n      title = title[0];\r\n    }\r\n\r\n    return title && title.text;\r\n  }\r\n\r\n  function getSeriesTypeName(type) {\r\n    return ecModel.getLocaleModel().get(['series', 'typeNames'])[type] || '自定义图';\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}