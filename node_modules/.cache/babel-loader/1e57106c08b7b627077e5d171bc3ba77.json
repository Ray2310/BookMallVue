{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport DataZoomView from './DataZoomView.js';\nimport sliderMove from '../helper/sliderMove.js';\nimport * as roams from './roams.js';\nimport { bind } from 'zrender/lib/core/util.js';\n\nvar InsideZoomView =\n/** @class */\nfunction (_super) {\n  __extends(InsideZoomView, _super);\n\n  function InsideZoomView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'dataZoom.inside';\n    return _this;\n  }\n\n  InsideZoomView.prototype.render = function (dataZoomModel, ecModel, api) {\n    _super.prototype.render.apply(this, arguments);\n\n    if (dataZoomModel.noTarget()) {\n      this._clear();\n\n      return;\n    } // Hence the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n\n    this.range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    roams.setViewInfoToCoordSysRecord(api, dataZoomModel, {\n      pan: bind(getRangeHandlers.pan, this),\n      zoom: bind(getRangeHandlers.zoom, this),\n      scrollMove: bind(getRangeHandlers.scrollMove, this)\n    });\n  };\n\n  InsideZoomView.prototype.dispose = function () {\n    this._clear();\n\n    _super.prototype.dispose.apply(this, arguments);\n  };\n\n  InsideZoomView.prototype._clear = function () {\n    roams.disposeCoordSysRecordIfNeeded(this.api, this.dataZoomModel);\n    this.range = null;\n  };\n\n  InsideZoomView.type = 'dataZoom.inside';\n  return InsideZoomView;\n}(DataZoomView);\n\nvar getRangeHandlers = {\n  zoom: function zoom(coordSysInfo, coordSysMainType, controller, e) {\n    var lastRange = this.range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordSysInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysMainType](null, [e.originX, e.originY], axisModel, controller, coordSysInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    var scale = Math.max(1 / e.scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this.range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n  pan: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysMainType]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordSysInfo);\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n  }),\n  scrollMove: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysMainType]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordSysInfo);\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\n  })\n};\n\nfunction makeMover(getPercentDelta) {\n  return function (coordSysInfo, coordSysMainType, controller, e) {\n    var lastRange = this.range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordSysInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var percentDelta = getPercentDelta(range, axisModel, coordSysInfo, coordSysMainType, controller, e);\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this.range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  };\n}\n\nvar getDirectionInfo = {\n  grid: function grid(oldPoint, newPoint, axisModel, controller, coordSysInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function polar(oldPoint, newPoint, axisModel, controller, coordSysInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordSysInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function singleAxis(oldPoint, newPoint, axisModel, controller, coordSysInfo) {\n    var axis = axisModel.axis;\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nexport default InsideZoomView;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/component/dataZoom/InsideZoomView.js"],"names":["__extends","DataZoomView","sliderMove","roams","bind","InsideZoomView","_super","_this","apply","arguments","type","prototype","render","dataZoomModel","ecModel","api","noTarget","_clear","range","getPercentRange","setViewInfoToCoordSysRecord","pan","getRangeHandlers","zoom","scrollMove","dispose","disposeCoordSysRecordIfNeeded","coordSysInfo","coordSysMainType","controller","e","lastRange","slice","axisModel","axisModels","directionInfo","getDirectionInfo","originX","originY","percentPoint","signal","pixelStart","pixelLength","pixel","scale","Math","max","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","minSpan","maxSpan","makeMover","oldX","oldY","newX","newY","scrollDelta","getPercentDelta","percentDelta","grid","oldPoint","newPoint","axis","ret","rect","model","coordinateSystem","getRect","dim","width","x","inverse","height","y","polar","radiusExtent","getRadiusAxis","getExtent","angleExtent","getAngleAxis","pointToCoord","mainType","singleAxis","orient"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport DataZoomView from './DataZoomView.js';\r\nimport sliderMove from '../helper/sliderMove.js';\r\nimport * as roams from './roams.js';\r\nimport { bind } from 'zrender/lib/core/util.js';\r\n\r\nvar InsideZoomView =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(InsideZoomView, _super);\r\n\r\n  function InsideZoomView() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = 'dataZoom.inside';\r\n    return _this;\r\n  }\r\n\r\n  InsideZoomView.prototype.render = function (dataZoomModel, ecModel, api) {\r\n    _super.prototype.render.apply(this, arguments);\r\n\r\n    if (dataZoomModel.noTarget()) {\r\n      this._clear();\r\n\r\n      return;\r\n    } // Hence the `throttle` util ensures to preserve command order,\r\n    // here simply updating range all the time will not cause missing\r\n    // any of the the roam change.\r\n\r\n\r\n    this.range = dataZoomModel.getPercentRange(); // Reset controllers.\r\n\r\n    roams.setViewInfoToCoordSysRecord(api, dataZoomModel, {\r\n      pan: bind(getRangeHandlers.pan, this),\r\n      zoom: bind(getRangeHandlers.zoom, this),\r\n      scrollMove: bind(getRangeHandlers.scrollMove, this)\r\n    });\r\n  };\r\n\r\n  InsideZoomView.prototype.dispose = function () {\r\n    this._clear();\r\n\r\n    _super.prototype.dispose.apply(this, arguments);\r\n  };\r\n\r\n  InsideZoomView.prototype._clear = function () {\r\n    roams.disposeCoordSysRecordIfNeeded(this.api, this.dataZoomModel);\r\n    this.range = null;\r\n  };\r\n\r\n  InsideZoomView.type = 'dataZoom.inside';\r\n  return InsideZoomView;\r\n}(DataZoomView);\r\n\r\nvar getRangeHandlers = {\r\n  zoom: function (coordSysInfo, coordSysMainType, controller, e) {\r\n    var lastRange = this.range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordSysInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var directionInfo = getDirectionInfo[coordSysMainType](null, [e.originX, e.originY], axisModel, controller, coordSysInfo);\r\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\r\n    var scale = Math.max(1 / e.scale, 0);\r\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\r\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\r\n\r\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\r\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\r\n    this.range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  },\r\n  pan: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysMainType]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordSysInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\r\n  }),\r\n  scrollMove: makeMover(function (range, axisModel, coordSysInfo, coordSysMainType, controller, e) {\r\n    var directionInfo = getDirectionInfo[coordSysMainType]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordSysInfo);\r\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\r\n  })\r\n};\r\n\r\nfunction makeMover(getPercentDelta) {\r\n  return function (coordSysInfo, coordSysMainType, controller, e) {\r\n    var lastRange = this.range;\r\n    var range = lastRange.slice(); // Calculate transform by the first axis.\r\n\r\n    var axisModel = coordSysInfo.axisModels[0];\r\n\r\n    if (!axisModel) {\r\n      return;\r\n    }\r\n\r\n    var percentDelta = getPercentDelta(range, axisModel, coordSysInfo, coordSysMainType, controller, e);\r\n    sliderMove(percentDelta, range, [0, 100], 'all');\r\n    this.range = range;\r\n\r\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\r\n      return range;\r\n    }\r\n  };\r\n}\r\n\r\nvar getDirectionInfo = {\r\n  grid: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.dim === 'x') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // axis.dim === 'y'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  polar: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var ret = {};\r\n    var polar = coordSysInfo.model.coordinateSystem;\r\n    var radiusExtent = polar.getRadiusAxis().getExtent();\r\n    var angleExtent = polar.getAngleAxis().getExtent();\r\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\r\n    newPoint = polar.pointToCoord(newPoint);\r\n\r\n    if (axisModel.mainType === 'radiusAxis') {\r\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\r\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\r\n\r\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\r\n      ret.pixelStart = radiusExtent[0];\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'angleAxis'\r\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\r\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\r\n\r\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\r\n      ret.pixelStart = angleExtent[0];\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n  singleAxis: function (oldPoint, newPoint, axisModel, controller, coordSysInfo) {\r\n    var axis = axisModel.axis;\r\n    var rect = coordSysInfo.model.coordinateSystem.getRect();\r\n    var ret = {};\r\n    oldPoint = oldPoint || [0, 0];\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      ret.pixel = newPoint[0] - oldPoint[0];\r\n      ret.pixelLength = rect.width;\r\n      ret.pixelStart = rect.x;\r\n      ret.signal = axis.inverse ? 1 : -1;\r\n    } else {\r\n      // 'vertical'\r\n      ret.pixel = newPoint[1] - oldPoint[1];\r\n      ret.pixelLength = rect.height;\r\n      ret.pixelStart = rect.y;\r\n      ret.signal = axis.inverse ? -1 : 1;\r\n    }\r\n\r\n    return ret;\r\n  }\r\n};\r\nexport default InsideZoomView;"]},"metadata":{},"sourceType":"module"}