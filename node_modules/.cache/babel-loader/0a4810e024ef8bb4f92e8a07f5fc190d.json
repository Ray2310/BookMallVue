{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.float32-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/es.array.fill.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { getECData } from '../../util/innerStore.js';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD;\n    var softClipShape = this.softClipShape;\n    var i; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n    var softClipShape = this.softClipShape;\n    var i;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeSymbolPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeSymbolPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.points;\n      var size = shape.size;\n      var w = size[0];\n      var h = size[1];\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX - w / 2, minY - h / 2, maxX - minX + w, maxY - minY + h);\n    }\n\n    return rect;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this._clear();\n\n    var symbolEl = this._create();\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, opt);\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points); // Reset draw cursor.\n\n      child.reset();\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var lastAdded = this._newAdded[0];\n    var points = data.getLayout('points');\n    var oldPoints = lastAdded && lastAdded.shape.points; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldPoints && oldPoints.length < 2e4) {\n      var oldLen = oldPoints.length;\n      var newPoints = new Float32Array(oldLen + points.length); // Concat two array\n\n      newPoints.set(oldPoints);\n      newPoints.set(points, oldLen); // Update endIndex\n\n      lastAdded.endIndex = taskParams.end;\n      lastAdded.setShape({\n        points: newPoints\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var symbolEl = this._create();\n\n      symbolEl.startIndex = taskParams.start;\n      symbolEl.endIndex = taskParams.end;\n      symbolEl.incremental = true;\n      symbolEl.setShape({\n        points: points\n      });\n\n      this._setCommon(symbolEl, data, opt);\n    }\n  };\n\n  LargeSymbolDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeSymbolDraw.prototype._create = function () {\n    var symbolEl = new LargeSymbolPath({\n      cursor: 'default'\n    });\n    symbolEl.ignoreCoarsePointer = true;\n    this.group.add(symbolEl);\n\n    this._newAdded.push(symbolEl);\n\n    return symbolEl;\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    var ecData = getECData(symbolEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = symbolEl.hoverDataIdx;\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/ElectronicMallVue/node_modules/echarts/lib/chart/helper/LargeSymbolDraw.js"],"names":["__extends","graphic","createSymbol","getECData","BOOST_SIZE_THRESHOLD","LargeSymbolPathShape","LargeSymbolPath","_super","opts","_this","call","_off","hoverDataIdx","prototype","getDefaultShape","reset","notClear","buildPath","path","shape","points","size","symbolProxy","symbolProxyShape","ctx","getContext","canBoost","softClipShape","i","_ctx","length","x","y","isNaN","contain","width","height","incremental","afterBrush","fillRect","findDataIndex","w","Math","max","h","idx","x0","y0","localPos","transformCoordToLocal","rect","getBoundingRect","dataIdx","_rect","minX","Infinity","minY","maxX","maxY","min","BoundingRect","Path","LargeSymbolDraw","group","Group","updateData","data","opt","_clear","symbolEl","_create","setShape","getLayout","_setCommon","updateLayout","eachChild","child","startIndex","len","endIndex","byteOffset","Float32Array","buffer","incrementalPrepareUpdate","incrementalUpdate","taskParams","lastAdded","_newAdded","oldPoints","oldLen","newPoints","set","end","start","eachRendered","cb","cursor","ignoreCoarsePointer","add","push","hostModel","getVisual","Array","clipShape","setColor","extrudeShadow","useStyle","getModel","getItemStyle","globalStyle","visualColor","fill","ecData","seriesIndex","on","e","dataIndex","remove","removeAll"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/* global Float32Array */\n// TODO Batch by color\n\nimport * as graphic from '../../util/graphic.js';\nimport { createSymbol } from '../../util/symbol.js';\nimport { getECData } from '../../util/innerStore.js';\nvar BOOST_SIZE_THRESHOLD = 4;\n\nvar LargeSymbolPathShape =\n/** @class */\nfunction () {\n  function LargeSymbolPathShape() {}\n\n  return LargeSymbolPathShape;\n}();\n\nvar LargeSymbolPath =\n/** @class */\nfunction (_super) {\n  __extends(LargeSymbolPath, _super);\n\n  function LargeSymbolPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this._off = 0;\n    _this.hoverDataIdx = -1;\n    return _this;\n  }\n\n  LargeSymbolPath.prototype.getDefaultShape = function () {\n    return new LargeSymbolPathShape();\n  };\n\n  LargeSymbolPath.prototype.reset = function () {\n    this.notClear = false;\n    this._off = 0;\n  };\n\n  LargeSymbolPath.prototype.buildPath = function (path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD;\n    var softClipShape = this.softClipShape;\n    var i; // Do draw in afterBrush.\n\n    if (canBoost) {\n      this._ctx = ctx;\n      return;\n    }\n\n    this._ctx = null;\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.afterBrush = function () {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var ctx = this._ctx;\n    var softClipShape = this.softClipShape;\n    var i;\n\n    if (!ctx) {\n      return;\n    } // PENDING If style or other canvas status changed?\n\n\n    for (i = this._off; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (softClipShape && !softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    if (this.incremental) {\n      this._off = i;\n      this.notClear = true;\n    }\n  };\n\n  LargeSymbolPath.prototype.findDataIndex = function (x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  };\n\n  LargeSymbolPath.prototype.contain = function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      // Cache found data index.\n      var dataIdx = this.hoverDataIdx = this.findDataIndex(x, y);\n      return dataIdx >= 0;\n    }\n\n    this.hoverDataIdx = -1;\n    return false;\n  };\n\n  LargeSymbolPath.prototype.getBoundingRect = function () {\n    // Ignore stroke for large symbol draw.\n    var rect = this._rect;\n\n    if (!rect) {\n      var shape = this.shape;\n      var points = shape.points;\n      var size = shape.size;\n      var w = size[0];\n      var h = size[1];\n      var minX = Infinity;\n      var minY = Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n\n      for (var i = 0; i < points.length;) {\n        var x = points[i++];\n        var y = points[i++];\n        minX = Math.min(x, minX);\n        maxX = Math.max(x, maxX);\n        minY = Math.min(y, minY);\n        maxY = Math.max(y, maxY);\n      }\n\n      rect = this._rect = new graphic.BoundingRect(minX - w / 2, minY - h / 2, maxX - minX + w, maxY - minY + h);\n    }\n\n    return rect;\n  };\n\n  return LargeSymbolPath;\n}(graphic.Path);\n\nvar LargeSymbolDraw =\n/** @class */\nfunction () {\n  function LargeSymbolDraw() {\n    this.group = new graphic.Group();\n  }\n  /**\n   * Update symbols draw by new data\n   */\n\n\n  LargeSymbolDraw.prototype.updateData = function (data, opt) {\n    this._clear();\n\n    var symbolEl = this._create();\n\n    symbolEl.setShape({\n      points: data.getLayout('points')\n    });\n\n    this._setCommon(symbolEl, data, opt);\n  };\n\n  LargeSymbolDraw.prototype.updateLayout = function (data) {\n    var points = data.getLayout('points');\n    this.group.eachChild(function (child) {\n      if (child.startIndex != null) {\n        var len = (child.endIndex - child.startIndex) * 2;\n        var byteOffset = child.startIndex * 4 * 2;\n        points = new Float32Array(points.buffer, byteOffset, len);\n      }\n\n      child.setShape('points', points); // Reset draw cursor.\n\n      child.reset();\n    });\n  };\n\n  LargeSymbolDraw.prototype.incrementalPrepareUpdate = function (data) {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype.incrementalUpdate = function (taskParams, data, opt) {\n    var lastAdded = this._newAdded[0];\n    var points = data.getLayout('points');\n    var oldPoints = lastAdded && lastAdded.shape.points; // Merging the exists. Each element has 1e4 points.\n    // Consider the performance balance between too much elements and too much points in one shape(may affect hover optimization)\n\n    if (oldPoints && oldPoints.length < 2e4) {\n      var oldLen = oldPoints.length;\n      var newPoints = new Float32Array(oldLen + points.length); // Concat two array\n\n      newPoints.set(oldPoints);\n      newPoints.set(points, oldLen); // Update endIndex\n\n      lastAdded.endIndex = taskParams.end;\n      lastAdded.setShape({\n        points: newPoints\n      });\n    } else {\n      // Clear\n      this._newAdded = [];\n\n      var symbolEl = this._create();\n\n      symbolEl.startIndex = taskParams.start;\n      symbolEl.endIndex = taskParams.end;\n      symbolEl.incremental = true;\n      symbolEl.setShape({\n        points: points\n      });\n\n      this._setCommon(symbolEl, data, opt);\n    }\n  };\n\n  LargeSymbolDraw.prototype.eachRendered = function (cb) {\n    this._newAdded[0] && cb(this._newAdded[0]);\n  };\n\n  LargeSymbolDraw.prototype._create = function () {\n    var symbolEl = new LargeSymbolPath({\n      cursor: 'default'\n    });\n    symbolEl.ignoreCoarsePointer = true;\n    this.group.add(symbolEl);\n\n    this._newAdded.push(symbolEl);\n\n    return symbolEl;\n  };\n\n  LargeSymbolDraw.prototype._setCommon = function (symbolEl, data, opt) {\n    var hostModel = data.hostModel;\n    opt = opt || {};\n    var size = data.getVisual('symbolSize');\n    symbolEl.setShape('size', size instanceof Array ? size : [size, size]);\n    symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n    symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n    symbolEl.setColor = symbolEl.symbolProxy.setColor;\n    var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n    symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n    hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n    var globalStyle = data.getVisual('style');\n    var visualColor = globalStyle && globalStyle.fill;\n\n    if (visualColor) {\n      symbolEl.setColor(visualColor);\n    }\n\n    var ecData = getECData(symbolEl); // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n\n    ecData.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      ecData.dataIndex = null;\n      var dataIndex = symbolEl.hoverDataIdx;\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        ecData.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  };\n\n  LargeSymbolDraw.prototype.remove = function () {\n    this._clear();\n  };\n\n  LargeSymbolDraw.prototype._clear = function () {\n    this._newAdded = [];\n    this.group.removeAll();\n  };\n\n  return LargeSymbolDraw;\n}();\n\nexport default LargeSymbolDraw;"]},"metadata":{},"sourceType":"module"}