{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport SeriesData from '../../data/SeriesData.js';\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper.js';\nimport { getDataItemValue } from '../../util/model.js';\nimport CoordinateSystem from '../../core/CoordinateSystem.js';\nimport { getCoordSysInfoBySeries } from '../../model/referHelper.js';\nimport { createSourceFromSeriesDataOption } from '../../data/Source.js';\nimport { enableDataStack } from '../../data/helper/dataStackHelper.js';\nimport { makeSeriesEncodeForAxisCoordSys } from '../../data/helper/sourceHelper.js';\nimport { SOURCE_FORMAT_ORIGINAL } from '../../util/types.js';\n\nfunction getCoordSysDimDefs(seriesModel, coordSysInfo) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysDimDefs;\n\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  return coordSysDimDefs;\n}\n\nfunction injectOrdinalMeta(dimInfoList, createInvertedIndices, coordSysInfo) {\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n\n      if (createInvertedIndices) {\n        dimInfo.createInvertedIndices = true;\n      }\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  return firstCategoryDimIndex;\n}\n/**\r\n * Caution: there are side effects to `sourceManager` in this method.\r\n * Should better only be called in `Series['getInitialData']`.\r\n */\n\n\nfunction createSeriesData(sourceRaw, seriesModel, opt) {\n  opt = opt || {};\n  var sourceManager = seriesModel.getSourceManager();\n  var source;\n  var isOriginalSource = false;\n\n  if (sourceRaw) {\n    isOriginalSource = true;\n    source = createSourceFromSeriesDataOption(sourceRaw);\n  } else {\n    source = sourceManager.getSource(); // Is series.data. not dataset.\n\n    isOriginalSource = source.sourceFormat === SOURCE_FORMAT_ORIGINAL;\n  }\n\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs = getCoordSysDimDefs(seriesModel, coordSysInfo);\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\n  var encodeDefaulter = zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null;\n  var createDimensionOptions = {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefine: seriesModel.getEncode(),\n    encodeDefaulter: encodeDefaulter,\n    canOmitUnusedDimensions: !isOriginalSource\n  };\n  var schema = prepareSeriesDataSchema(source, createDimensionOptions);\n  var firstCategoryDimIndex = injectOrdinalMeta(schema.dimensions, opt.createInvertedIndices, coordSysInfo);\n  var store = !isOriginalSource ? sourceManager.getSharedDataStore(schema) : null;\n  var stackCalculationInfo = enableDataStack(seriesModel, {\n    schema: schema,\n    store: store\n  });\n  var data = new SeriesData(schema, seriesModel);\n  data.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  data.hasItemOption = false;\n  data.initData( // Try to reuse the data store in sourceManager if using dataset.\n  isOriginalSource ? source : store, null, dimValueGetter);\n  return data;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(arr) {\n  var i = 0;\n\n  while (i < arr.length && arr[i] == null) {\n    i++;\n  }\n\n  return arr[i];\n}\n\nexport default createSeriesData;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/helper/createSeriesData.js"],"names":["zrUtil","SeriesData","prepareSeriesDataSchema","getDimensionTypeByAxis","getDataItemValue","CoordinateSystem","getCoordSysInfoBySeries","createSourceFromSeriesDataOption","enableDataStack","makeSeriesEncodeForAxisCoordSys","SOURCE_FORMAT_ORIGINAL","getCoordSysDimDefs","seriesModel","coordSysInfo","coordSysName","get","registeredCoordSys","coordSysDimDefs","coordSysDims","map","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionsInfo","dimensions","slice","injectOrdinalMeta","dimInfoList","createInvertedIndices","firstCategoryDimIndex","hasNameEncode","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","createSeriesData","sourceRaw","opt","sourceManager","getSourceManager","source","isOriginalSource","getSource","sourceFormat","useEncodeDefaulter","encodeDefaulter","isFunction","curry","createDimensionOptions","coordDimensions","generateCoord","encodeDefine","getEncode","canOmitUnusedDimensions","schema","store","getSharedDataStore","stackCalculationInfo","data","setCalculationInfo","dimValueGetter","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","defaultDimValueGetter","hasItemOption","initData","sampleItem","firstDataNotNull","isArray","arr","i","length"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport SeriesData from '../../data/SeriesData.js';\r\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions.js';\r\nimport { getDimensionTypeByAxis } from '../../data/helper/dimensionHelper.js';\r\nimport { getDataItemValue } from '../../util/model.js';\r\nimport CoordinateSystem from '../../core/CoordinateSystem.js';\r\nimport { getCoordSysInfoBySeries } from '../../model/referHelper.js';\r\nimport { createSourceFromSeriesDataOption } from '../../data/Source.js';\r\nimport { enableDataStack } from '../../data/helper/dataStackHelper.js';\r\nimport { makeSeriesEncodeForAxisCoordSys } from '../../data/helper/sourceHelper.js';\r\nimport { SOURCE_FORMAT_ORIGINAL } from '../../util/types.js';\r\n\r\nfunction getCoordSysDimDefs(seriesModel, coordSysInfo) {\r\n  var coordSysName = seriesModel.get('coordinateSystem');\r\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\r\n  var coordSysDimDefs;\r\n\r\n  if (coordSysInfo && coordSysInfo.coordSysDims) {\r\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\r\n      var dimInfo = {\r\n        name: dim\r\n      };\r\n      var axisModel = coordSysInfo.axisMap.get(dim);\r\n\r\n      if (axisModel) {\r\n        var axisType = axisModel.get('type');\r\n        dimInfo.type = getDimensionTypeByAxis(axisType);\r\n      }\r\n\r\n      return dimInfo;\r\n    });\r\n  }\r\n\r\n  if (!coordSysDimDefs) {\r\n    // Get dimensions from registered coordinate system\r\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\r\n  }\r\n\r\n  return coordSysDimDefs;\r\n}\r\n\r\nfunction injectOrdinalMeta(dimInfoList, createInvertedIndices, coordSysInfo) {\r\n  var firstCategoryDimIndex;\r\n  var hasNameEncode;\r\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\r\n    var coordDim = dimInfo.coordDim;\r\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\r\n\r\n    if (categoryAxisModel) {\r\n      if (firstCategoryDimIndex == null) {\r\n        firstCategoryDimIndex = dimIndex;\r\n      }\r\n\r\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\r\n\r\n      if (createInvertedIndices) {\r\n        dimInfo.createInvertedIndices = true;\r\n      }\r\n    }\r\n\r\n    if (dimInfo.otherDims.itemName != null) {\r\n      hasNameEncode = true;\r\n    }\r\n  });\r\n\r\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\r\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\r\n  }\r\n\r\n  return firstCategoryDimIndex;\r\n}\r\n/**\r\n * Caution: there are side effects to `sourceManager` in this method.\r\n * Should better only be called in `Series['getInitialData']`.\r\n */\r\n\r\n\r\nfunction createSeriesData(sourceRaw, seriesModel, opt) {\r\n  opt = opt || {};\r\n  var sourceManager = seriesModel.getSourceManager();\r\n  var source;\r\n  var isOriginalSource = false;\r\n\r\n  if (sourceRaw) {\r\n    isOriginalSource = true;\r\n    source = createSourceFromSeriesDataOption(sourceRaw);\r\n  } else {\r\n    source = sourceManager.getSource(); // Is series.data. not dataset.\r\n\r\n    isOriginalSource = source.sourceFormat === SOURCE_FORMAT_ORIGINAL;\r\n  }\r\n\r\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\r\n  var coordSysDimDefs = getCoordSysDimDefs(seriesModel, coordSysInfo);\r\n  var useEncodeDefaulter = opt.useEncodeDefaulter;\r\n  var encodeDefaulter = zrUtil.isFunction(useEncodeDefaulter) ? useEncodeDefaulter : useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null;\r\n  var createDimensionOptions = {\r\n    coordDimensions: coordSysDimDefs,\r\n    generateCoord: opt.generateCoord,\r\n    encodeDefine: seriesModel.getEncode(),\r\n    encodeDefaulter: encodeDefaulter,\r\n    canOmitUnusedDimensions: !isOriginalSource\r\n  };\r\n  var schema = prepareSeriesDataSchema(source, createDimensionOptions);\r\n  var firstCategoryDimIndex = injectOrdinalMeta(schema.dimensions, opt.createInvertedIndices, coordSysInfo);\r\n  var store = !isOriginalSource ? sourceManager.getSharedDataStore(schema) : null;\r\n  var stackCalculationInfo = enableDataStack(seriesModel, {\r\n    schema: schema,\r\n    store: store\r\n  });\r\n  var data = new SeriesData(schema, seriesModel);\r\n  data.setCalculationInfo(stackCalculationInfo);\r\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\r\n    // Use dataIndex as ordinal value in categoryAxis\r\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\r\n  } : null;\r\n  data.hasItemOption = false;\r\n  data.initData( // Try to reuse the data store in sourceManager if using dataset.\r\n  isOriginalSource ? source : store, null, dimValueGetter);\r\n  return data;\r\n}\r\n\r\nfunction isNeedCompleteOrdinalData(source) {\r\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\r\n    var sampleItem = firstDataNotNull(source.data || []);\r\n    return !zrUtil.isArray(getDataItemValue(sampleItem));\r\n  }\r\n}\r\n\r\nfunction firstDataNotNull(arr) {\r\n  var i = 0;\r\n\r\n  while (i < arr.length && arr[i] == null) {\r\n    i++;\r\n  }\r\n\r\n  return arr[i];\r\n}\r\n\r\nexport default createSeriesData;"]},"metadata":{},"sourceType":"module"}