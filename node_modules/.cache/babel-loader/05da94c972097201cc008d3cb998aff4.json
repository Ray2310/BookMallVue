{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport * as numberUtil from '../../util/number.js';\nexport default function themeRiverLayout(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      doThemeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      doThemeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\r\n * The layout information about themeriver\r\n *\r\n * @param data  data in the series\r\n * @param seriesModel  the model object of themeRiver series\r\n * @param height  value used to compute every series height\r\n */\n\nfunction doThemeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\r\n * Compute the baseLine of the rawdata\r\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\r\n *\r\n * @param  data  the points in each layer\r\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n\n  for (var i = 0; i < pointNum; ++i) {\n    var temp = 0;\n\n    for (var j = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  return {\n    y0: y0,\n    max: max\n  };\n}","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/chart/themeRiver/themeRiverLayout.js"],"names":["zrUtil","numberUtil","themeRiverLayout","ecModel","api","eachSeriesByType","seriesModel","data","getData","single","coordinateSystem","layoutInfo","rect","getRect","boundaryGap","get","axis","getAxis","orient","parsePercent","height","doThemeRiverLayout","width","setLayout","count","coordSys","layerSeries","getLayerSeries","timeDim","mapDimension","valueDim","layerPoints","map","singleLayer","indices","idx","pt","dataToPoint","base","computeBaseline","baseLine","y0","ky","max","n","length","m","baseY0","j","setItemLayout","layerIndex","x","y","i","layerNum","pointNum","sums","temp","push","k","l","sum"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport * as numberUtil from '../../util/number.js';\r\nexport default function themeRiverLayout(ecModel, api) {\r\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\r\n    var data = seriesModel.getData();\r\n    var single = seriesModel.coordinateSystem;\r\n    var layoutInfo = {}; // use the axis boundingRect for view\r\n\r\n    var rect = single.getRect();\r\n    layoutInfo.rect = rect;\r\n    var boundaryGap = seriesModel.get('boundaryGap');\r\n    var axis = single.getAxis();\r\n    layoutInfo.boundaryGap = boundaryGap;\r\n\r\n    if (axis.orient === 'horizontal') {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\r\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\r\n      doThemeRiverLayout(data, seriesModel, height);\r\n    } else {\r\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\r\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\r\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\r\n      doThemeRiverLayout(data, seriesModel, width);\r\n    }\r\n\r\n    data.setLayout('layoutInfo', layoutInfo);\r\n  });\r\n}\r\n/**\r\n * The layout information about themeriver\r\n *\r\n * @param data  data in the series\r\n * @param seriesModel  the model object of themeRiver series\r\n * @param height  value used to compute every series height\r\n */\r\n\r\nfunction doThemeRiverLayout(data, seriesModel, height) {\r\n  if (!data.count()) {\r\n    return;\r\n  }\r\n\r\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\r\n\r\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\r\n\r\n  var timeDim = data.mapDimension('single');\r\n  var valueDim = data.mapDimension('value');\r\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\r\n    return zrUtil.map(singleLayer.indices, function (idx) {\r\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\r\n      pt[1] = data.get(valueDim, idx);\r\n      return pt;\r\n    });\r\n  });\r\n  var base = computeBaseline(layerPoints);\r\n  var baseLine = base.y0;\r\n  var ky = height / base.max; // set layout information for each item.\r\n\r\n  var n = layerSeries.length;\r\n  var m = layerSeries[0].indices.length;\r\n  var baseY0;\r\n\r\n  for (var j = 0; j < m; ++j) {\r\n    baseY0 = baseLine[j] * ky;\r\n    data.setItemLayout(layerSeries[0].indices[j], {\r\n      layerIndex: 0,\r\n      x: layerPoints[0][j][0],\r\n      y0: baseY0,\r\n      y: layerPoints[0][j][1] * ky\r\n    });\r\n\r\n    for (var i = 1; i < n; ++i) {\r\n      baseY0 += layerPoints[i - 1][j][1] * ky;\r\n      data.setItemLayout(layerSeries[i].indices[j], {\r\n        layerIndex: i,\r\n        x: layerPoints[i][j][0],\r\n        y0: baseY0,\r\n        y: layerPoints[i][j][1] * ky\r\n      });\r\n    }\r\n  }\r\n}\r\n/**\r\n * Compute the baseLine of the rawdata\r\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\r\n *\r\n * @param  data  the points in each layer\r\n */\r\n\r\n\r\nfunction computeBaseline(data) {\r\n  var layerNum = data.length;\r\n  var pointNum = data[0].length;\r\n  var sums = [];\r\n  var y0 = [];\r\n  var max = 0;\r\n\r\n  for (var i = 0; i < pointNum; ++i) {\r\n    var temp = 0;\r\n\r\n    for (var j = 0; j < layerNum; ++j) {\r\n      temp += data[j][i][1];\r\n    }\r\n\r\n    if (temp > max) {\r\n      max = temp;\r\n    }\r\n\r\n    sums.push(temp);\r\n  }\r\n\r\n  for (var k = 0; k < pointNum; ++k) {\r\n    y0[k] = (max - sums[k]) / 2;\r\n  }\r\n\r\n  max = 0;\r\n\r\n  for (var l = 0; l < pointNum; ++l) {\r\n    var sum = sums[l] + y0[l];\r\n\r\n    if (sum > max) {\r\n      max = sum;\r\n    }\r\n  }\r\n\r\n  return {\r\n    y0: y0,\r\n    max: max\r\n  };\r\n}"]},"metadata":{},"sourceType":"module"}