{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util.js';\nimport Scale from './Scale.js';\nimport * as numberUtil from '../util/number.js';\nimport * as scaleHelper from './helper.js'; // Use some method of IntervalScale\n\nimport IntervalScale from './Interval.js';\nvar scaleProto = Scale.prototype; // FIXME:TS refactor: not good to call it directly with `this`?\n\nvar intervalScaleProto = IntervalScale.prototype;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\n\nvar LogScale =\n/** @class */\nfunction (_super) {\n  __extends(LogScale, _super);\n\n  function LogScale() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = 'log';\n    _this.base = 10;\n    _this._originalScale = new IntervalScale(); // FIXME:TS actually used by `IntervalScale`\n\n    _this._interval = 0;\n    return _this;\n  }\n  /**\r\n   * @param Whether expand the ticks to niced extent.\r\n   */\n\n\n  LogScale.prototype.getTicks = function (expandToNicedExtent) {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    var ticks = intervalScaleProto.getTicks.call(this, expandToNicedExtent);\n    return zrUtil.map(ticks, function (tick) {\n      var val = tick.value;\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && this._fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && this._fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return {\n        value: powVal\n      };\n    }, this);\n  };\n\n  LogScale.prototype.setExtent = function (start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  };\n  /**\r\n   * @return {number} end\r\n   */\n\n\n  LogScale.prototype.getExtent = function () {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    this._fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    this._fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  };\n\n  LogScale.prototype.unionExtent = function (extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  };\n\n  LogScale.prototype.unionExtentFromData = function (data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  };\n  /**\r\n   * Update interval and extent of intervals for nice ticks\r\n   * @param approxTickNum default 10 Given approx tick number\r\n   */\n\n\n  LogScale.prototype.calcNiceTicks = function (approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  };\n\n  LogScale.prototype.calcNiceExtent = function (opt) {\n    intervalScaleProto.calcNiceExtent.call(this, opt);\n    this._fixMin = opt.fixMin;\n    this._fixMax = opt.fixMax;\n  };\n\n  LogScale.prototype.parse = function (val) {\n    return val;\n  };\n\n  LogScale.prototype.contain = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleHelper.contain(val, this._extent);\n  };\n\n  LogScale.prototype.normalize = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleHelper.normalize(val, this._extent);\n  };\n\n  LogScale.prototype.scale = function (val) {\n    val = scaleHelper.scale(val, this._extent);\n    return mathPow(this.base, val);\n  };\n\n  LogScale.type = 'log';\n  return LogScale;\n}(Scale);\n\nvar proto = LogScale.prototype;\nproto.getMinorTicks = intervalScaleProto.getMinorTicks;\nproto.getLabel = intervalScaleProto.getLabel;\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, numberUtil.getPrecision(originalVal));\n}\n\nScale.registerClass(LogScale);\nexport default LogScale;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/scale/Log.js"],"names":["__extends","zrUtil","Scale","numberUtil","scaleHelper","IntervalScale","scaleProto","prototype","intervalScaleProto","roundingErrorFix","round","mathFloor","Math","floor","mathCeil","ceil","mathPow","pow","mathLog","log","LogScale","_super","_this","apply","arguments","type","base","_originalScale","_interval","getTicks","expandToNicedExtent","originalScale","extent","_extent","originalExtent","getExtent","ticks","call","map","tick","val","value","powVal","_fixMin","fixRoundingError","_fixMax","setExtent","start","end","unionExtent","unionExtentFromData","data","dim","getApproximateExtent","calcNiceTicks","approxTickNum","span","Infinity","interval","quantity","err","isNaN","abs","niceExtent","_niceExtent","calcNiceExtent","opt","fixMin","fixMax","parse","contain","normalize","scale","proto","getMinorTicks","getLabel","originalVal","getPrecision","registerClass"],"mappings":"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","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport * as zrUtil from 'zrender/lib/core/util.js';\r\nimport Scale from './Scale.js';\r\nimport * as numberUtil from '../util/number.js';\r\nimport * as scaleHelper from './helper.js'; // Use some method of IntervalScale\r\n\r\nimport IntervalScale from './Interval.js';\r\nvar scaleProto = Scale.prototype; // FIXME:TS refactor: not good to call it directly with `this`?\r\n\r\nvar intervalScaleProto = IntervalScale.prototype;\r\nvar roundingErrorFix = numberUtil.round;\r\nvar mathFloor = Math.floor;\r\nvar mathCeil = Math.ceil;\r\nvar mathPow = Math.pow;\r\nvar mathLog = Math.log;\r\n\r\nvar LogScale =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(LogScale, _super);\r\n\r\n  function LogScale() {\r\n    var _this = _super !== null && _super.apply(this, arguments) || this;\r\n\r\n    _this.type = 'log';\r\n    _this.base = 10;\r\n    _this._originalScale = new IntervalScale(); // FIXME:TS actually used by `IntervalScale`\r\n\r\n    _this._interval = 0;\r\n    return _this;\r\n  }\r\n  /**\r\n   * @param Whether expand the ticks to niced extent.\r\n   */\r\n\r\n\r\n  LogScale.prototype.getTicks = function (expandToNicedExtent) {\r\n    var originalScale = this._originalScale;\r\n    var extent = this._extent;\r\n    var originalExtent = originalScale.getExtent();\r\n    var ticks = intervalScaleProto.getTicks.call(this, expandToNicedExtent);\r\n    return zrUtil.map(ticks, function (tick) {\r\n      var val = tick.value;\r\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\r\n\r\n      powVal = val === extent[0] && this._fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\r\n      powVal = val === extent[1] && this._fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\r\n      return {\r\n        value: powVal\r\n      };\r\n    }, this);\r\n  };\r\n\r\n  LogScale.prototype.setExtent = function (start, end) {\r\n    var base = this.base;\r\n    start = mathLog(start) / mathLog(base);\r\n    end = mathLog(end) / mathLog(base);\r\n    intervalScaleProto.setExtent.call(this, start, end);\r\n  };\r\n  /**\r\n   * @return {number} end\r\n   */\r\n\r\n\r\n  LogScale.prototype.getExtent = function () {\r\n    var base = this.base;\r\n    var extent = scaleProto.getExtent.call(this);\r\n    extent[0] = mathPow(base, extent[0]);\r\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\r\n\r\n    var originalScale = this._originalScale;\r\n    var originalExtent = originalScale.getExtent();\r\n    this._fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\r\n    this._fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\r\n    return extent;\r\n  };\r\n\r\n  LogScale.prototype.unionExtent = function (extent) {\r\n    this._originalScale.unionExtent(extent);\r\n\r\n    var base = this.base;\r\n    extent[0] = mathLog(extent[0]) / mathLog(base);\r\n    extent[1] = mathLog(extent[1]) / mathLog(base);\r\n    scaleProto.unionExtent.call(this, extent);\r\n  };\r\n\r\n  LogScale.prototype.unionExtentFromData = function (data, dim) {\r\n    // TODO\r\n    // filter value that <= 0\r\n    this.unionExtent(data.getApproximateExtent(dim));\r\n  };\r\n  /**\r\n   * Update interval and extent of intervals for nice ticks\r\n   * @param approxTickNum default 10 Given approx tick number\r\n   */\r\n\r\n\r\n  LogScale.prototype.calcNiceTicks = function (approxTickNum) {\r\n    approxTickNum = approxTickNum || 10;\r\n    var extent = this._extent;\r\n    var span = extent[1] - extent[0];\r\n\r\n    if (span === Infinity || span <= 0) {\r\n      return;\r\n    }\r\n\r\n    var interval = numberUtil.quantity(span);\r\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\r\n\r\n    if (err <= 0.5) {\r\n      interval *= 10;\r\n    } // Interval should be integer\r\n\r\n\r\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\r\n      interval *= 10;\r\n    }\r\n\r\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\r\n    this._interval = interval;\r\n    this._niceExtent = niceExtent;\r\n  };\r\n\r\n  LogScale.prototype.calcNiceExtent = function (opt) {\r\n    intervalScaleProto.calcNiceExtent.call(this, opt);\r\n    this._fixMin = opt.fixMin;\r\n    this._fixMax = opt.fixMax;\r\n  };\r\n\r\n  LogScale.prototype.parse = function (val) {\r\n    return val;\r\n  };\r\n\r\n  LogScale.prototype.contain = function (val) {\r\n    val = mathLog(val) / mathLog(this.base);\r\n    return scaleHelper.contain(val, this._extent);\r\n  };\r\n\r\n  LogScale.prototype.normalize = function (val) {\r\n    val = mathLog(val) / mathLog(this.base);\r\n    return scaleHelper.normalize(val, this._extent);\r\n  };\r\n\r\n  LogScale.prototype.scale = function (val) {\r\n    val = scaleHelper.scale(val, this._extent);\r\n    return mathPow(this.base, val);\r\n  };\r\n\r\n  LogScale.type = 'log';\r\n  return LogScale;\r\n}(Scale);\r\n\r\nvar proto = LogScale.prototype;\r\nproto.getMinorTicks = intervalScaleProto.getMinorTicks;\r\nproto.getLabel = intervalScaleProto.getLabel;\r\n\r\nfunction fixRoundingError(val, originalVal) {\r\n  return roundingErrorFix(val, numberUtil.getPrecision(originalVal));\r\n}\r\n\r\nScale.registerClass(LogScale);\r\nexport default LogScale;"]},"metadata":{},"sourceType":"module"}