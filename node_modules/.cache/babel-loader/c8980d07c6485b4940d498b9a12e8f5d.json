{"ast":null,"code":"/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\n\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\n\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis.js';\n\nvar Axis2D =\n/** @class */\nfunction (_super) {\n  __extends(Axis2D, _super);\n\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\n    /**\r\n     * Index of axis, can be used as key\r\n     * Injected outside.\r\n     */\n\n\n    _this.index = 0;\n    _this.type = axisType || 'value';\n    _this.position = position || 'bottom';\n    return _this;\n  }\n\n  Axis2D.prototype.isHorizontal = function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  };\n  /**\r\n   * Each item cooresponds to this.getExtent(), which\r\n   * means globalExtent[0] may greater than globalExtent[1],\r\n   * unless `asc` is input.\r\n   *\r\n   * @param {boolean} [asc]\r\n   * @return {Array.<number>}\r\n   */\n\n\n  Axis2D.prototype.getGlobalExtent = function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  };\n\n  Axis2D.prototype.pointToData = function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  };\n  /**\r\n   * Set ordinalSortInfo\r\n   * @param info new OrdinalSortInfo\r\n   */\n\n\n  Axis2D.prototype.setCategorySortInfo = function (info) {\n    if (this.type !== 'category') {\n      return false;\n    }\n\n    this.model.option.categorySortInfo = info;\n    this.scale.setSortInfo(info);\n  };\n\n  return Axis2D;\n}(Axis);\n\nexport default Axis2D;","map":{"version":3,"sources":["D:/Work/WorkSpace/GitWorkSpace/TenShop/resource/ElectronicMall/src/qingge-Market/qingge-vue/node_modules/echarts/lib/coord/cartesian/Axis2D.js"],"names":["__extends","Axis","Axis2D","_super","dim","scale","coordExtent","axisType","position","_this","call","index","type","prototype","isHorizontal","getGlobalExtent","asc","ret","getExtent","toGlobalCoord","reverse","pointToData","point","clamp","coordToData","toLocalCoord","setCategorySortInfo","info","model","option","categorySortInfo","setSortInfo"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,IAAIC,MAAM;AACV;AACA,UAAUC,MAAV,EAAkB;AAChBH,EAAAA,SAAS,CAACE,MAAD,EAASC,MAAT,CAAT;;AAEA,WAASD,MAAT,CAAgBE,GAAhB,EAAqBC,KAArB,EAA4BC,WAA5B,EAAyCC,QAAzC,EAAmDC,QAAnD,EAA6D;AAC3D,QAAIC,KAAK,GAAGN,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkBN,GAAlB,EAAuBC,KAAvB,EAA8BC,WAA9B,KAA8C,IAA1D;AACA;AACJ;AACA;AACA;;;AAGIG,IAAAA,KAAK,CAACE,KAAN,GAAc,CAAd;AACAF,IAAAA,KAAK,CAACG,IAAN,GAAaL,QAAQ,IAAI,OAAzB;AACAE,IAAAA,KAAK,CAACD,QAAN,GAAiBA,QAAQ,IAAI,QAA7B;AACA,WAAOC,KAAP;AACD;;AAEDP,EAAAA,MAAM,CAACW,SAAP,CAAiBC,YAAjB,GAAgC,YAAY;AAC1C,QAAIN,QAAQ,GAAG,KAAKA,QAApB;AACA,WAAOA,QAAQ,KAAK,KAAb,IAAsBA,QAAQ,KAAK,QAA1C;AACD,GAHD;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGEN,EAAAA,MAAM,CAACW,SAAP,CAAiBE,eAAjB,GAAmC,UAAUC,GAAV,EAAe;AAChD,QAAIC,GAAG,GAAG,KAAKC,SAAL,EAAV;AACAD,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKE,aAAL,CAAmBF,GAAG,CAAC,CAAD,CAAtB,CAAT;AACAA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,KAAKE,aAAL,CAAmBF,GAAG,CAAC,CAAD,CAAtB,CAAT;AACAD,IAAAA,GAAG,IAAIC,GAAG,CAAC,CAAD,CAAH,GAASA,GAAG,CAAC,CAAD,CAAnB,IAA0BA,GAAG,CAACG,OAAJ,EAA1B;AACA,WAAOH,GAAP;AACD,GAND;;AAQAf,EAAAA,MAAM,CAACW,SAAP,CAAiBQ,WAAjB,GAA+B,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACrD,WAAO,KAAKC,WAAL,CAAiB,KAAKC,YAAL,CAAkBH,KAAK,CAAC,KAAKlB,GAAL,KAAa,GAAb,GAAmB,CAAnB,GAAuB,CAAxB,CAAvB,CAAjB,EAAqEmB,KAArE,CAAP;AACD,GAFD;AAGA;AACF;AACA;AACA;;;AAGErB,EAAAA,MAAM,CAACW,SAAP,CAAiBa,mBAAjB,GAAuC,UAAUC,IAAV,EAAgB;AACrD,QAAI,KAAKf,IAAL,KAAc,UAAlB,EAA8B;AAC5B,aAAO,KAAP;AACD;;AAED,SAAKgB,KAAL,CAAWC,MAAX,CAAkBC,gBAAlB,GAAqCH,IAArC;AACA,SAAKtB,KAAL,CAAW0B,WAAX,CAAuBJ,IAAvB;AACD,GAPD;;AASA,SAAOzB,MAAP;AACD,CA1DD,CA0DED,IA1DF,CAFA;;AA8DA,eAAeC,MAAf","sourcesContent":["\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\n\r\n\r\n/**\r\n * AUTO-GENERATED FILE. DO NOT MODIFY.\r\n */\r\n\r\n/*\r\n* Licensed to the Apache Software Foundation (ASF) under one\r\n* or more contributor license agreements.  See the NOTICE file\r\n* distributed with this work for additional information\r\n* regarding copyright ownership.  The ASF licenses this file\r\n* to you under the Apache License, Version 2.0 (the\r\n* \"License\"); you may not use this file except in compliance\r\n* with the License.  You may obtain a copy of the License at\r\n*\r\n*   http://www.apache.org/licenses/LICENSE-2.0\r\n*\r\n* Unless required by applicable law or agreed to in writing,\r\n* software distributed under the License is distributed on an\r\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n* KIND, either express or implied.  See the License for the\r\n* specific language governing permissions and limitations\r\n* under the License.\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport Axis from '../Axis.js';\r\n\r\nvar Axis2D =\r\n/** @class */\r\nfunction (_super) {\r\n  __extends(Axis2D, _super);\r\n\r\n  function Axis2D(dim, scale, coordExtent, axisType, position) {\r\n    var _this = _super.call(this, dim, scale, coordExtent) || this;\r\n    /**\r\n     * Index of axis, can be used as key\r\n     * Injected outside.\r\n     */\r\n\r\n\r\n    _this.index = 0;\r\n    _this.type = axisType || 'value';\r\n    _this.position = position || 'bottom';\r\n    return _this;\r\n  }\r\n\r\n  Axis2D.prototype.isHorizontal = function () {\r\n    var position = this.position;\r\n    return position === 'top' || position === 'bottom';\r\n  };\r\n  /**\r\n   * Each item cooresponds to this.getExtent(), which\r\n   * means globalExtent[0] may greater than globalExtent[1],\r\n   * unless `asc` is input.\r\n   *\r\n   * @param {boolean} [asc]\r\n   * @return {Array.<number>}\r\n   */\r\n\r\n\r\n  Axis2D.prototype.getGlobalExtent = function (asc) {\r\n    var ret = this.getExtent();\r\n    ret[0] = this.toGlobalCoord(ret[0]);\r\n    ret[1] = this.toGlobalCoord(ret[1]);\r\n    asc && ret[0] > ret[1] && ret.reverse();\r\n    return ret;\r\n  };\r\n\r\n  Axis2D.prototype.pointToData = function (point, clamp) {\r\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\r\n  };\r\n  /**\r\n   * Set ordinalSortInfo\r\n   * @param info new OrdinalSortInfo\r\n   */\r\n\r\n\r\n  Axis2D.prototype.setCategorySortInfo = function (info) {\r\n    if (this.type !== 'category') {\r\n      return false;\r\n    }\r\n\r\n    this.model.option.categorySortInfo = info;\r\n    this.scale.setSortInfo(info);\r\n  };\r\n\r\n  return Axis2D;\r\n}(Axis);\r\n\r\nexport default Axis2D;"]},"metadata":{},"sourceType":"module"}