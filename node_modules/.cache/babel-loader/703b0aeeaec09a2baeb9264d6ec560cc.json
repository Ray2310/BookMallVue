{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport { DEFAULT_PATH_STYLE } from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport { getLineDash } from '../canvas/dashStyle.js';\nimport { map } from '../core/util.js';\nimport { normalizeColor } from './helper.js';\nvar NONE = 'none';\nvar mathRound = Math.round;\n\nfunction pathHasFill(style) {\n  var fill = style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style) {\n  var stroke = style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nvar strokeProps = ['lineCap', 'miterLimit', 'lineJoin'];\nvar svgStrokeProps = map(strokeProps, function (prop) {\n  return \"stroke-\" + prop.toLowerCase();\n});\nexport default function mapStyleToAttrs(updateAttr, style, el, forceUpdate) {\n  var opacity = style.opacity == null ? 1 : style.opacity;\n\n  if (el instanceof ZRImage) {\n    updateAttr('opacity', opacity);\n    return;\n  }\n\n  if (pathHasFill(style)) {\n    var fill = normalizeColor(style.fill);\n    updateAttr('fill', fill.color);\n    var fillOpacity = style.fillOpacity != null ? style.fillOpacity * fill.opacity * opacity : fill.opacity * opacity;\n\n    if (forceUpdate || fillOpacity < 1) {\n      updateAttr('fill-opacity', fillOpacity);\n    }\n  } else {\n    updateAttr('fill', NONE);\n  }\n\n  if (pathHasStroke(style)) {\n    var stroke = normalizeColor(style.stroke);\n    updateAttr('stroke', stroke.color);\n    var strokeScale = style.strokeNoScale ? el.getLineScale() : 1;\n    var strokeWidth = strokeScale ? (style.lineWidth || 0) / strokeScale : 0;\n    var strokeOpacity = style.strokeOpacity != null ? style.strokeOpacity * stroke.opacity * opacity : stroke.opacity * opacity;\n    var strokeFirst = style.strokeFirst;\n\n    if (forceUpdate || strokeWidth !== 1) {\n      updateAttr('stroke-width', strokeWidth);\n    }\n\n    if (forceUpdate || strokeFirst) {\n      updateAttr('paint-order', strokeFirst ? 'stroke' : 'fill');\n    }\n\n    if (forceUpdate || strokeOpacity < 1) {\n      updateAttr('stroke-opacity', strokeOpacity);\n    }\n\n    if (style.lineDash) {\n      var _a = getLineDash(el),\n          lineDash = _a[0],\n          lineDashOffset = _a[1];\n\n      if (lineDash) {\n        lineDashOffset = mathRound(lineDashOffset || 0);\n        updateAttr('stroke-dasharray', lineDash.join(','));\n\n        if (lineDashOffset || forceUpdate) {\n          updateAttr('stroke-dashoffset', lineDashOffset);\n        }\n      }\n    } else if (forceUpdate) {\n      updateAttr('stroke-dasharray', NONE);\n    }\n\n    for (var i = 0; i < strokeProps.length; i++) {\n      var propName = strokeProps[i];\n\n      if (forceUpdate || style[propName] !== DEFAULT_PATH_STYLE[propName]) {\n        var val = style[propName] || DEFAULT_PATH_STYLE[propName];\n        val && updateAttr(svgStrokeProps[i], val);\n      }\n    }\n  } else if (forceUpdate) {\n    updateAttr('stroke', NONE);\n  }\n}","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/ElectronicMallVue/node_modules/zrender/lib/svg/mapStyleToAttrs.js"],"names":["DEFAULT_PATH_STYLE","ZRImage","getLineDash","map","normalizeColor","NONE","mathRound","Math","round","pathHasFill","style","fill","pathHasStroke","stroke","strokeProps","svgStrokeProps","prop","toLowerCase","mapStyleToAttrs","updateAttr","el","forceUpdate","opacity","color","fillOpacity","strokeScale","strokeNoScale","getLineScale","strokeWidth","lineWidth","strokeOpacity","strokeFirst","lineDash","_a","lineDashOffset","join","i","length","propName","val"],"mappings":"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","sourcesContent":["import { DEFAULT_PATH_STYLE } from '../graphic/Path.js';\nimport ZRImage from '../graphic/Image.js';\nimport { getLineDash } from '../canvas/dashStyle.js';\nimport { map } from '../core/util.js';\nimport { normalizeColor } from './helper.js';\nvar NONE = 'none';\nvar mathRound = Math.round;\nfunction pathHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== NONE;\n}\nfunction pathHasStroke(style) {\n    var stroke = style.stroke;\n    return stroke != null && stroke !== NONE;\n}\nvar strokeProps = ['lineCap', 'miterLimit', 'lineJoin'];\nvar svgStrokeProps = map(strokeProps, function (prop) { return \"stroke-\" + prop.toLowerCase(); });\nexport default function mapStyleToAttrs(updateAttr, style, el, forceUpdate) {\n    var opacity = style.opacity == null ? 1 : style.opacity;\n    if (el instanceof ZRImage) {\n        updateAttr('opacity', opacity);\n        return;\n    }\n    if (pathHasFill(style)) {\n        var fill = normalizeColor(style.fill);\n        updateAttr('fill', fill.color);\n        var fillOpacity = style.fillOpacity != null\n            ? style.fillOpacity * fill.opacity * opacity\n            : fill.opacity * opacity;\n        if (forceUpdate || fillOpacity < 1) {\n            updateAttr('fill-opacity', fillOpacity);\n        }\n    }\n    else {\n        updateAttr('fill', NONE);\n    }\n    if (pathHasStroke(style)) {\n        var stroke = normalizeColor(style.stroke);\n        updateAttr('stroke', stroke.color);\n        var strokeScale = style.strokeNoScale\n            ? el.getLineScale()\n            : 1;\n        var strokeWidth = (strokeScale ? (style.lineWidth || 0) / strokeScale : 0);\n        var strokeOpacity = style.strokeOpacity != null\n            ? style.strokeOpacity * stroke.opacity * opacity\n            : stroke.opacity * opacity;\n        var strokeFirst = style.strokeFirst;\n        if (forceUpdate || strokeWidth !== 1) {\n            updateAttr('stroke-width', strokeWidth);\n        }\n        if (forceUpdate || strokeFirst) {\n            updateAttr('paint-order', strokeFirst ? 'stroke' : 'fill');\n        }\n        if (forceUpdate || strokeOpacity < 1) {\n            updateAttr('stroke-opacity', strokeOpacity);\n        }\n        if (style.lineDash) {\n            var _a = getLineDash(el), lineDash = _a[0], lineDashOffset = _a[1];\n            if (lineDash) {\n                lineDashOffset = mathRound(lineDashOffset || 0);\n                updateAttr('stroke-dasharray', lineDash.join(','));\n                if (lineDashOffset || forceUpdate) {\n                    updateAttr('stroke-dashoffset', lineDashOffset);\n                }\n            }\n        }\n        else if (forceUpdate) {\n            updateAttr('stroke-dasharray', NONE);\n        }\n        for (var i = 0; i < strokeProps.length; i++) {\n            var propName = strokeProps[i];\n            if (forceUpdate || style[propName] !== DEFAULT_PATH_STYLE[propName]) {\n                var val = style[propName] || DEFAULT_PATH_STYLE[propName];\n                val && updateAttr(svgStrokeProps[i], val);\n            }\n        }\n    }\n    else if (forceUpdate) {\n        updateAttr('stroke', NONE);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}