{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Person\",\n  data: function data() {\n    return {\n      form: {},\n      baseApi: this.$store.state.baseApi,\n      user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : {},\n      resetPsw: {\n        newPassword: \"\",\n        confirmPassword: \"\"\n      }\n    };\n  },\n  methods: {\n    toResetPassword: function toResetPassword() {\n      var _this = this;\n\n      // 重置密码\n      if (this.resetPsw.newPassword.trim() == \"\") {\n        this.$message.error(\"新密码不能为空\");\n        return;\n      }\n\n      if (this.resetPsw.confirmPassword != this.resetPsw.newPassword) {\n        this.$message.error(\"两次密码不一致\");\n        return;\n      }\n\n      this.request.get(\"/user/resetPassword?id=\" + this.user.id + \"&newPassword=\" + md5(this.resetPsw.newPassword)).then(function (res) {\n        if (res.code === \"200\") {\n          _this.$message.success(\"修改成功\");\n        } else {\n          alert(res.msg);\n        }\n      });\n    },\n    //图片上传成功钩子\n    handleAvatarSuccess: function handleAvatarSuccess(res) {\n      this.imageUrl = res.data;\n      this.form.avatarUrl = this.imageUrl;\n    },\n    //提交事件\n    save: function save() {\n      var _this2 = this;\n\n      //把表格传给后台，保存到数据库\n      this.request.post(\"/user\", this.form).then(function (res) {\n        if (res.code === \"200\") {\n          _this2.$message.success(\"保存成功\"); //把表格的数据更新到user中\n\n\n          for (var key in _this2.form) {\n            _this2.user[key] = _this2.form[key];\n          } //更新localstorage的user\n\n\n          localStorage.setItem(\"user\", JSON.stringify(_this2.user));\n\n          _this2.$emit(\"refresh\");\n\n          _this2.$router.go(0);\n        } else {\n          _this2.$message.error(res.msg);\n        }\n      });\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.request.get(\"/userinfo/\" + this.user.username).then(function (res) {\n      if (res.code === \"200\") {\n        _this3.form = res.data;\n      } else {\n        alert(res.msg);\n      }\n    }); // this.form = this.user;\n  },\n  computed: {\n    token: function token() {\n      return {\n        token: this.user.token\n      };\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,wCAFA;AAGAC,2CACAC,wCADA,GAEA,EALA;AAMAC;AACAC,uBADA;AAEAC;AAFA;AANA;AAWA,GAdA;AAeAC;AACAC,mBADA,6BACA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SAFA,MAEA;AACAC;AACA;AACA,OANA;AAOA,KAlBA;AAmBA;AACAC,uBApBA,+BAoBAC,GApBA,EAoBA;AACA;AACA;AACA,KAvBA;AAwBA;AACAC,QAzBA,kBAyBA;AAAA;;AACA;AACA;AACA;AACA,0CADA,CAEA;;;AACA;AACA;AACA,WALA,CAMA;;;AACAC;;AACA;;AACA;AACA,SAVA,MAUA;AACA;AACA;AACA,OAdA;AAeA;AA1CA,GAfA;AA2DAC,SA3DA,qBA2DA;AAAA;;AACA;AACA;AACA;AACA,OAFA,MAEA;AACAL;AACA;AACA,KANA,EADA,CAQA;AACA,GApEA;AAqEAM;AACAC,SADA,mBACA;AACA;AAAAA;AAAA;AACA;AAHA;AArEA","names":["name","data","form","baseApi","user","JSON","resetPsw","newPassword","confirmPassword","methods","toResetPassword","alert","handleAvatarSuccess","res","save","localStorage","created","computed","token"],"sourceRoot":"src/views","sources":["Person.vue"],"sourcesContent":["<template>\r\n  <el-card class=\"card\">\r\n    <div style=\"text-align: center; margin-bottom: 30px\">\r\n      <b>修改个人信息</b>\r\n    </div>\r\n\r\n    <el-form label-width=\"60px\">\r\n      <el-form-item label=\"头像\">\r\n        <el-upload\r\n          class=\"avatar-uploader\"\r\n          :action=\"baseApi + '/avatar'\"\r\n          :headers=\"token\"\r\n          :show-file-list=\"false\"\r\n          :on-success=\"handleAvatarSuccess\"\r\n        >\r\n          <img\r\n            v-if=\"form.avatarUrl\"\r\n            :src=\"baseApi + form.avatarUrl\"\r\n            class=\"avatar\"\r\n          />\r\n          <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\r\n        </el-upload>\r\n      </el-form-item>\r\n\r\n      <el-form-item label=\"昵称\">\r\n        <el-input v-model=\"form.nickname\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"电话\">\r\n        <el-input v-model=\"form.phone\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"邮箱\">\r\n        <el-input v-model=\"form.email\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"地址\">\r\n        <el-input v-model=\"form.address\" autocomplete=\"off\"></el-input>\r\n      </el-form-item>\r\n      <el-button\r\n        type=\"primary\"\r\n        style=\"margin-left: 190px; margin-top: 20px\"\r\n        @click=\"save\"\r\n        >确 定</el-button\r\n      >\r\n    </el-form>\r\n    <el-popover placement=\"right\" width=\"200\" trigger=\"click\">\r\n      <el-form>\r\n        <el-form-item label=\"新密码\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"resetPsw.newPassword\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"确认密码\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"resetPsw.confirmPassword\"\r\n            autocomplete=\"off\"\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"toResetPassword\"\r\n          >确 定</el-button\r\n        >\r\n      </el-form>\r\n      <el-button\r\n        slot=\"reference\"\r\n        type=\"warning\"\r\n        style=\"margin-left: 190px; margin-top: 20px\"\r\n        @click=\"resetPsw = { newPassword: '', confirmPassword: '' }\"\r\n        >重置密码</el-button\r\n      >\r\n    </el-popover>\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Person\",\r\n  data() {\r\n    return {\r\n      form: {},\r\n      baseApi: this.$store.state.baseApi,\r\n      user: localStorage.getItem(\"user\")\r\n        ? JSON.parse(localStorage.getItem(\"user\"))\r\n        : {},\r\n      resetPsw: {\r\n        newPassword: \"\",\r\n        confirmPassword: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    toResetPassword() {\r\n      // 重置密码\r\n      if (this.resetPsw.newPassword.trim() == \"\") {\r\n        this.$message.error(\"新密码不能为空\");\r\n        return;\r\n      }\r\n      if (this.resetPsw.confirmPassword != this.resetPsw.newPassword) {\r\n        this.$message.error(\"两次密码不一致\");\r\n        return;\r\n      }\r\n      this.request.get(\"/user/resetPassword?id=\" + this.user.id + \"&newPassword=\" + md5(this.resetPsw.newPassword)).then((res) => {\r\n      if (res.code === \"200\") {        \r\n        this.$message.success(\"修改成功\");\r\n      } else {\r\n        alert(res.msg);\r\n      }\r\n    });\r\n    },\r\n    //图片上传成功钩子\r\n    handleAvatarSuccess(res) {\r\n      this.imageUrl = res.data;\r\n      this.form.avatarUrl = this.imageUrl;\r\n    },\r\n    //提交事件\r\n    save() {\r\n      //把表格传给后台，保存到数据库\r\n      this.request.post(\"/user\", this.form).then((res) => {\r\n        if (res.code === \"200\") {\r\n          this.$message.success(\"保存成功\");\r\n          //把表格的数据更新到user中\r\n          for (let key in this.form) {\r\n            this.user[key] = this.form[key];\r\n          }\r\n          //更新localstorage的user\r\n          localStorage.setItem(\"user\", JSON.stringify(this.user));\r\n          this.$emit(\"refresh\");\r\n          this.$router.go(0);\r\n        } else {\r\n          this.$message.error(res.msg);\r\n        }\r\n      });\r\n    },\r\n  },\r\n  created() {\r\n    this.request.get(\"/userinfo/\" + this.user.username).then((res) => {\r\n      if (res.code === \"200\") {\r\n        this.form = res.data;\r\n      } else {\r\n        alert(res.msg);\r\n      }\r\n    });\r\n    // this.form = this.user;\r\n  },\r\n  computed: {\r\n    token() {\r\n      return { token: this.user.token };\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  width: 500px;\r\n  margin: 80px auto;\r\n  padding: 30px;\r\n}\r\n.avatar-uploader {\r\n  padding-bottom: 10px;\r\n}\r\n.avatar-uploader .el-upload {\r\n  border: 1px dashed #d9d9d9;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.avatar-uploader .el-upload:hover {\r\n  border-color: #409eff;\r\n}\r\n.avatar-uploader-icon {\r\n  font-size: 28px;\r\n  color: #8c939d;\r\n  width: 138px;\r\n  height: 138px;\r\n  line-height: 138px;\r\n  text-align: center;\r\n}\r\n.avatar {\r\n  width: 138px;\r\n  height: 138px;\r\n  display: block;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}