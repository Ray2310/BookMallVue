{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each } from 'zrender/lib/core/util.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport * as componentUtil from '../util/component.js';\nimport * as clazzUtil from '../util/clazz.js';\nimport * as modelUtil from '../util/model.js';\nimport { enterEmphasis, leaveEmphasis, getHighlightDigit, isHighDownDispatcher } from '../util/states.js';\nimport { createTask } from '../core/task.js';\nimport createRenderPlanner from '../chart/helper/createRenderPlanner.js';\nimport { traverseElements } from '../util/graphic.js';\nimport { error } from '../util/log.js';\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nvar ChartView =\n/** @class */\nfunction () {\n  function ChartView() {\n    this.group = new Group();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n\n  ChartView.prototype.init = function (ecModel, api) {};\n\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('render method must been implemented');\n    }\n  };\n  /**\n   * Highlight series or specified data item.\n   */\n\n\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData(payload && payload.dataType);\n\n    if (!data) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(\"Unknown dataType \" + payload.dataType);\n      }\n\n      return;\n    }\n\n    toggleHighlight(data, payload, 'emphasis');\n  };\n  /**\n   * Downplay series or specified data item.\n   */\n\n\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData(payload && payload.dataType);\n\n    if (!data) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(\"Unknown dataType \" + payload.dataType);\n      }\n\n      return;\n    }\n\n    toggleHighlight(data, payload, 'normal');\n  };\n  /**\n   * Remove self.\n   */\n\n\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n  /**\n   * Dispose self.\n   */\n\n\n  ChartView.prototype.dispose = function (ecModel, api) {};\n\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  }; // FIXME never used?\n\n\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  }; // FIXME never used?\n\n\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n  /**\n   * Traverse the new rendered elements.\n   *\n   * It will traverse the new added element in progressive rendering.\n   * And traverse all in normal rendering.\n   */\n\n\n  ChartView.prototype.eachRendered = function (cb) {\n    traverseElements(this.group, cb);\n  };\n\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n\n  return ChartView;\n}();\n\n;\n/**\n * Set state of single element\n */\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el && isHighDownDispatcher(el)) {\n    (state === 'emphasis' ? enterEmphasis : leaveEmphasis)(el, highlightDigit);\n  }\n}\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\n\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView);\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // FIXME: remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function progress(params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function progress(params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexport default ChartView;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/BookVue/node_modules/echarts/lib/view/Chart.js"],"names":["each","Group","componentUtil","clazzUtil","modelUtil","enterEmphasis","leaveEmphasis","getHighlightDigit","isHighDownDispatcher","createTask","createRenderPlanner","traverseElements","error","inner","makeInner","renderPlanner","ChartView","group","uid","getUID","renderTask","plan","renderTaskPlan","reset","renderTaskReset","context","view","prototype","init","ecModel","api","render","seriesModel","payload","process","env","NODE_ENV","Error","highlight","data","getData","dataType","toggleHighlight","downplay","remove","removeAll","dispose","updateView","updateLayout","updateVisual","eachRendered","cb","markUpdateMethod","methodName","updateMethod","protoInitialize","proto","type","elSetState","el","state","highlightDigit","dataIndex","queryDataIndex","highlightKey","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","enableClassExtend","enableClassManagement","model","progressiveRender","pipelineContext","progressMethodMap","incrementalPrepareRender","progress","params","incrementalRender","forceFirstProgress"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { each } from 'zrender/lib/core/util.js';\nimport Group from 'zrender/lib/graphic/Group.js';\nimport * as componentUtil from '../util/component.js';\nimport * as clazzUtil from '../util/clazz.js';\nimport * as modelUtil from '../util/model.js';\nimport { enterEmphasis, leaveEmphasis, getHighlightDigit, isHighDownDispatcher } from '../util/states.js';\nimport { createTask } from '../core/task.js';\nimport createRenderPlanner from '../chart/helper/createRenderPlanner.js';\nimport { traverseElements } from '../util/graphic.js';\nimport { error } from '../util/log.js';\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nvar ChartView =\n/** @class */\nfunction () {\n  function ChartView() {\n    this.group = new Group();\n    this.uid = componentUtil.getUID('viewChart');\n    this.renderTask = createTask({\n      plan: renderTaskPlan,\n      reset: renderTaskReset\n    });\n    this.renderTask.context = {\n      view: this\n    };\n  }\n\n  ChartView.prototype.init = function (ecModel, api) {};\n\n  ChartView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('render method must been implemented');\n    }\n  };\n  /**\n   * Highlight series or specified data item.\n   */\n\n\n  ChartView.prototype.highlight = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData(payload && payload.dataType);\n\n    if (!data) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(\"Unknown dataType \" + payload.dataType);\n      }\n\n      return;\n    }\n\n    toggleHighlight(data, payload, 'emphasis');\n  };\n  /**\n   * Downplay series or specified data item.\n   */\n\n\n  ChartView.prototype.downplay = function (seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData(payload && payload.dataType);\n\n    if (!data) {\n      if (process.env.NODE_ENV !== 'production') {\n        error(\"Unknown dataType \" + payload.dataType);\n      }\n\n      return;\n    }\n\n    toggleHighlight(data, payload, 'normal');\n  };\n  /**\n   * Remove self.\n   */\n\n\n  ChartView.prototype.remove = function (ecModel, api) {\n    this.group.removeAll();\n  };\n  /**\n   * Dispose self.\n   */\n\n\n  ChartView.prototype.dispose = function (ecModel, api) {};\n\n  ChartView.prototype.updateView = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  }; // FIXME never used?\n\n\n  ChartView.prototype.updateLayout = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  }; // FIXME never used?\n\n\n  ChartView.prototype.updateVisual = function (seriesModel, ecModel, api, payload) {\n    this.render(seriesModel, ecModel, api, payload);\n  };\n  /**\n   * Traverse the new rendered elements.\n   *\n   * It will traverse the new added element in progressive rendering.\n   * And traverse all in normal rendering.\n   */\n\n\n  ChartView.prototype.eachRendered = function (cb) {\n    traverseElements(this.group, cb);\n  };\n\n  ChartView.markUpdateMethod = function (payload, methodName) {\n    inner(payload).updateMethod = methodName;\n  };\n\n  ChartView.protoInitialize = function () {\n    var proto = ChartView.prototype;\n    proto.type = 'chart';\n  }();\n\n  return ChartView;\n}();\n\n;\n/**\n * Set state of single element\n */\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el && isHighDownDispatcher(el)) {\n    (state === 'emphasis' ? enterEmphasis : leaveEmphasis)(el, highlightDigit);\n  }\n}\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n}\n\nclazzUtil.enableClassExtend(ChartView, ['dispose']);\nclazzUtil.enableClassManagement(ChartView);\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // FIXME: remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function (params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function (params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nexport default ChartView;"]},"metadata":{},"sourceType":"module"}