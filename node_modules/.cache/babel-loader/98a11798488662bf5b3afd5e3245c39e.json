{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\n\nimport * as vector from 'zrender/lib/core/vector.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport { parsePercent } from '../util/number.js';\nvar v2ApplyTransform = vector.applyTransform;\n\nvar View =\n/** @class */\nfunction (_super) {\n  __extends(View, _super);\n\n  function View(name) {\n    var _this = _super.call(this) || this;\n\n    _this.type = 'view';\n    _this.dimensions = ['x', 'y'];\n    /**\n     * Represents the transform brought by roam/zoom.\n     * If `View['_viewRect']` applies roam transform,\n     * we can get the final displayed rect.\n     */\n\n    _this._roamTransformable = new Transformable();\n    /**\n     * Represents the transform from `View['_rect']` to `View['_viewRect']`.\n     */\n\n    _this._rawTransformable = new Transformable();\n    _this.name = name;\n    return _this;\n  }\n\n  View.prototype.setBoundingRect = function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  };\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n\n\n  View.prototype.getBoundingRect = function () {\n    return this._rect;\n  };\n\n  View.prototype.setViewRect = function (x, y, width, height) {\n    this._transformTo(x, y, width, height);\n\n    this._viewRect = new BoundingRect(x, y, width, height);\n  };\n  /**\n   * Transformed to particular position and size\n   */\n\n\n  View.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    var rawParent = rawTransform.parent;\n    rawTransform.parent = null;\n    rawTransform.decomposeTransform();\n    rawTransform.parent = rawParent;\n\n    this._updateTransform();\n  };\n  /**\n   * Set center of view\n   */\n\n\n  View.prototype.setCenter = function (centerCoord, api) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = [parsePercent(centerCoord[0], api.getWidth()), parsePercent(centerCoord[1], api.getHeight())];\n\n    this._updateCenterAndZoom();\n  };\n\n  View.prototype.setZoom = function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  };\n  /**\n   * Get default center without roam\n   */\n\n\n  View.prototype.getDefaultCenter = function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  };\n\n  View.prototype.getCenter = function () {\n    return this._center || this.getDefaultCenter();\n  };\n\n  View.prototype.getZoom = function () {\n    return this._zoom || 1;\n  };\n\n  View.prototype.getRoamTransform = function () {\n    return this._roamTransformable.getLocalTransform();\n  };\n  /**\n   * Remove roam\n   */\n\n\n  View.prototype._updateCenterAndZoom = function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.originX = center[0];\n    roamTransform.originY = center[1];\n    roamTransform.x = defaultCenter[0] - center[0];\n    roamTransform.y = defaultCenter[1] - center[1];\n    roamTransform.scaleX = roamTransform.scaleY = zoom;\n\n    this._updateTransform();\n  };\n  /**\n   * Update transform props on `this` based on the current\n   * `this._roamTransformable` and `this._rawTransformable`.\n   */\n\n\n  View.prototype._updateTransform = function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  };\n\n  View.prototype.getTransformInfo = function () {\n    var rawTransformable = this._rawTransformable;\n    var roamTransformable = this._roamTransformable; // Because roamTransformabel has `originX/originY` modified,\n    // but the caller of `getTransformInfo` can not handle `originX/originY`,\n    // so need to recalculate them.\n\n    var dummyTransformable = new Transformable();\n    dummyTransformable.transform = roamTransformable.transform;\n    dummyTransformable.decomposeTransform();\n    return {\n      roam: {\n        x: dummyTransformable.x,\n        y: dummyTransformable.y,\n        scaleX: dummyTransformable.scaleX,\n        scaleY: dummyTransformable.scaleY\n      },\n      raw: {\n        x: rawTransformable.x,\n        y: rawTransformable.y,\n        scaleX: rawTransformable.scaleX,\n        scaleY: rawTransformable.scaleY\n      }\n    };\n  };\n\n  View.prototype.getViewRect = function () {\n    return this._viewRect;\n  };\n  /**\n   * Get view rect after roam transform\n   */\n\n\n  View.prototype.getViewRectAfterRoam = function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  };\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   */\n\n\n  View.prototype.dataToPoint = function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  };\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   */\n\n\n  View.prototype.pointToData = function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  };\n\n  View.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  View.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n  /**\n   * @implements\n   */\n\n\n  View.prototype.containPoint = function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  };\n\n  View.dimensions = ['x', 'y'];\n  return View;\n}(Transformable);\n\nfunction getCoordSys(finder) {\n  var seriesModel = finder.seriesModel;\n  return seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n}\n\nexport default View;","map":{"version":3,"sources":["/home/rayce/Udatabase/study/ElectronicMall/BookVue/node_modules/echarts/lib/coord/View.js"],"names":["__extends","vector","matrix","BoundingRect","Transformable","parsePercent","v2ApplyTransform","applyTransform","View","_super","name","_this","call","type","dimensions","_roamTransformable","_rawTransformable","prototype","setBoundingRect","x","y","width","height","_rect","getBoundingRect","setViewRect","_transformTo","_viewRect","rect","rawTransform","transform","calculateTransform","rawParent","parent","decomposeTransform","_updateTransform","setCenter","centerCoord","api","_center","getWidth","getHeight","_updateCenterAndZoom","setZoom","zoom","zoomLimit","max","Math","min","_zoom","getDefaultCenter","rawRect","cx","cy","getCenter","getZoom","getRoamTransform","getLocalTransform","rawTransformMatrix","roamTransform","defaultCenter","center","originX","originY","scaleX","scaleY","roamTransformable","rawTransformable","updateTransform","copy","create","_rawTransform","invTransform","invert","getTransformInfo","dummyTransformable","roam","raw","getViewRect","getViewRectAfterRoam","clone","dataToPoint","data","noRoam","out","pointToData","point","convertToPixel","ecModel","finder","value","coordSys","getCoordSys","convertFromPixel","pixel","containPoint","contain","seriesModel","coordinateSystem"],"mappings":"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","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\n\nimport * as vector from 'zrender/lib/core/vector.js';\nimport * as matrix from 'zrender/lib/core/matrix.js';\nimport BoundingRect from 'zrender/lib/core/BoundingRect.js';\nimport Transformable from 'zrender/lib/core/Transformable.js';\nimport { parsePercent } from '../util/number.js';\nvar v2ApplyTransform = vector.applyTransform;\n\nvar View =\n/** @class */\nfunction (_super) {\n  __extends(View, _super);\n\n  function View(name) {\n    var _this = _super.call(this) || this;\n\n    _this.type = 'view';\n    _this.dimensions = ['x', 'y'];\n    /**\n     * Represents the transform brought by roam/zoom.\n     * If `View['_viewRect']` applies roam transform,\n     * we can get the final displayed rect.\n     */\n\n    _this._roamTransformable = new Transformable();\n    /**\n     * Represents the transform from `View['_rect']` to `View['_viewRect']`.\n     */\n\n    _this._rawTransformable = new Transformable();\n    _this.name = name;\n    return _this;\n  }\n\n  View.prototype.setBoundingRect = function (x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  };\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n\n\n  View.prototype.getBoundingRect = function () {\n    return this._rect;\n  };\n\n  View.prototype.setViewRect = function (x, y, width, height) {\n    this._transformTo(x, y, width, height);\n\n    this._viewRect = new BoundingRect(x, y, width, height);\n  };\n  /**\n   * Transformed to particular position and size\n   */\n\n\n  View.prototype._transformTo = function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    var rawParent = rawTransform.parent;\n    rawTransform.parent = null;\n    rawTransform.decomposeTransform();\n    rawTransform.parent = rawParent;\n\n    this._updateTransform();\n  };\n  /**\n   * Set center of view\n   */\n\n\n  View.prototype.setCenter = function (centerCoord, api) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = [parsePercent(centerCoord[0], api.getWidth()), parsePercent(centerCoord[1], api.getHeight())];\n\n    this._updateCenterAndZoom();\n  };\n\n  View.prototype.setZoom = function (zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  };\n  /**\n   * Get default center without roam\n   */\n\n\n  View.prototype.getDefaultCenter = function () {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  };\n\n  View.prototype.getCenter = function () {\n    return this._center || this.getDefaultCenter();\n  };\n\n  View.prototype.getZoom = function () {\n    return this._zoom || 1;\n  };\n\n  View.prototype.getRoamTransform = function () {\n    return this._roamTransformable.getLocalTransform();\n  };\n  /**\n   * Remove roam\n   */\n\n\n  View.prototype._updateCenterAndZoom = function () {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.originX = center[0];\n    roamTransform.originY = center[1];\n    roamTransform.x = defaultCenter[0] - center[0];\n    roamTransform.y = defaultCenter[1] - center[1];\n    roamTransform.scaleX = roamTransform.scaleY = zoom;\n\n    this._updateTransform();\n  };\n  /**\n   * Update transform props on `this` based on the current\n   * `this._roamTransformable` and `this._rawTransformable`.\n   */\n\n\n  View.prototype._updateTransform = function () {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  };\n\n  View.prototype.getTransformInfo = function () {\n    var rawTransformable = this._rawTransformable;\n    var roamTransformable = this._roamTransformable; // Because roamTransformabel has `originX/originY` modified,\n    // but the caller of `getTransformInfo` can not handle `originX/originY`,\n    // so need to recalculate them.\n\n    var dummyTransformable = new Transformable();\n    dummyTransformable.transform = roamTransformable.transform;\n    dummyTransformable.decomposeTransform();\n    return {\n      roam: {\n        x: dummyTransformable.x,\n        y: dummyTransformable.y,\n        scaleX: dummyTransformable.scaleX,\n        scaleY: dummyTransformable.scaleY\n      },\n      raw: {\n        x: rawTransformable.x,\n        y: rawTransformable.y,\n        scaleX: rawTransformable.scaleX,\n        scaleY: rawTransformable.scaleY\n      }\n    };\n  };\n\n  View.prototype.getViewRect = function () {\n    return this._viewRect;\n  };\n  /**\n   * Get view rect after roam transform\n   */\n\n\n  View.prototype.getViewRectAfterRoam = function () {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  };\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   */\n\n\n  View.prototype.dataToPoint = function (data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  };\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   */\n\n\n  View.prototype.pointToData = function (point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  };\n\n  View.prototype.convertToPixel = function (ecModel, finder, value) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.dataToPoint(value) : null;\n  };\n\n  View.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    var coordSys = getCoordSys(finder);\n    return coordSys === this ? coordSys.pointToData(pixel) : null;\n  };\n  /**\n   * @implements\n   */\n\n\n  View.prototype.containPoint = function (point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  };\n\n  View.dimensions = ['x', 'y'];\n  return View;\n}(Transformable);\n\nfunction getCoordSys(finder) {\n  var seriesModel = finder.seriesModel;\n  return seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n}\n\nexport default View;"]},"metadata":{},"sourceType":"module"}